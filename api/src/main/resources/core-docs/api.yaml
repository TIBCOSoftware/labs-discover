openapi: 3.0.1
info:
  title: TIBCO Discover public API
  description: TIBCO Discover public API
  license:
    name: TIBCO
    url: http://tibco.com
  version: 1.0.0
externalDocs:
  description: Find out more about Discover app
  url: https://www.tibco.com/solutions/process-mining-solutions
servers:
  - url: https://discover.cloud.tibco.com
    description: The remote api servers
  - url: https://discover.labs.tibcocloud.com
    description: The production api server
  - url: http://localhost:8080
    description: The local Dev api server
security:
  - bearerAuth: []
tags:
  - name: Catalog
    description: The datasets API to create, update, delete dataset for Discover app.
  - name: Repository
    description: The analysis API to create, update, delete analysis for Discover app.
  - name: Visualisation
    description: The templates API to create, update, delete templates for Discover app.
  - name: Configuration
    description: The configuration API to create, update, delete configuration for Discover app.
  - name: Investigations
    description: The Investigation API to create, update, delete investigations for Discover app.
  - name: Documentations
    description: The documentation API to export, import Graphs from Nimbus with Discover app.
paths:
  /catalog/datasets:
    get:
      tags:
        - Catalog
      description: Get all linked dataset from the tcmd discover app
      summary: Get All Datasets of Discover Application
      operationId: getAllDatasets
      responses:
        '200':
          description: Returns all the datasets that associated with the TIBCO CLOUD Discover web application.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatasetListItem'
        '400':
          description: Bad request. The auth token is missing
        '401':
          description: Unauthorized. The auth token is not valid.
  /catalog/dataset/{id}:
    get:
      tags:
        - Catalog
      description: Get the dataset details by a given dataset id.
      summary: Get dataset details.
      operationId: getDataset
      parameters:
        - name: id
          description: dataset id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the dataset detail.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '400':
          description: Bad request. The auth token is missing
        '401':
          description: Unauthorized. The auth token is not valid.
        '404':
          description: Record not found.
    delete:
      tags:
        - Catalog
      description: Delete dataset of given id.
      summary: Delete dataset.
      operationId: deleteDataset
      parameters:
        - name: id
          description: dataset id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Record deleted.
        '400':
          description: Bad request. The auth token is missing
        '401':
          description: Unauthorized. The auth token is not valid.
        '409':
          description: The dataset can not be deleted because of associated analysis.
    put:
      tags:
        - Catalog
      description: Update dataset.
      summary: Update dataset after it is created
      operationId: updateDataset
      parameters:
        - name: id
          description: dataset id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
      responses:
        '200':
          description: Returns the dataset id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetUpdated'
        '400':
          description: Bad request. The auth token is missing or the dataset id in payload is different with the id in path parameter
        '401':
          description: Unauthorized. The auth token is not valid.
        '409':
          description: The dataset with the same name is already exist.
  /catalog/dataset/{id}/preview:
    get:
      tags:
        - Catalog
      description: Get the dataset preview for a given dataset id.
      summary: Get dataset preview.
      operationId: getPreview
      parameters:
        - name: id
          description: dataset id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the dataset preview.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preview'
        '400':
          description: Bad request. The auth token is missing
  /catalog/dataset/exist:
    post:
      tags:
        - Catalog
      description: Check whether the dataset is existing with name and id. If id is present in payload then check whether there is a dataset with the same name of different dataset id other than the specified one.
      summary: Check whether the dataset is existing with name and id.
      operationId: IsSameNameDatasetExist
      requestBody:
        description: The name and id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckExist'
      responses:
        '200':
          description: Returns the dataset detail.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckExistResult'
        '400':
          description: Bad request. The auth token is missing
        '401':
          description: Unauthorized. The auth token is not valid.
  /catalog/dataset:
    post:
      tags:
        - Catalog
      description: Create a new dataset
      summary: Create a new dataset
      operationId: createDataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
      responses:
        '200':
          description: Returns the dataset id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetUpdated'
        '400':
          description: Bad request. The auth token is missing
        '401':
          description: Unauthorized. The auth token is not valid.
        '409':
          description: The dataset of the name is already exist.
  /catalog/status:
    post:
      tags:
        - Catalog
      description: The api for process mining backend to send the real time status to dataset.
      summary: Save dataset preview status
      operationId: saveStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewStatus'
      responses:
        '200':
          description: Returns the dataset id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetUpdated'
        '400':
          description: Bad request. The auth token is missing
        '401':
          description: Unauthorized. The auth token is not valid.
        '409':
          description: The dataset of the name is already exist.
  /catalog/status/{id}:
    get:
      tags:
        - Catalog
      description: The api for process mining backend to send the real time status to dataset.
      summary: Save dataset preview status
      operationId: getStatus
      parameters:
        - name: id
          description: dataset id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the dataset id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewStatus'
        '400':
          description: Bad request. The auth token is missing
        '401':
          description: Unauthorized. The auth token is not valid.
        '404':
          description: The dataset of the id is not found.
  /catalog/dataset/preview:
    post:
      tags:
        - Catalog
      description: Save dataset and trigger the data preview asynchronously.
      summary: Save dataset and start preview
      operationId: saveDatasetAndStartPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
      responses:
        '200':
          description: Returns the dataset id and redis update status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetUpdated'
        '400':
          description: Bad request. The auth token is missing or data source of dataset is missing.
        '401':
          description: Unauthorized. The auth token is not valid.
  /catalog/preview/{id}:
    post:
      tags:
        - Catalog
      description: Rerun the preview process for the existing dataset.
      summary: Rerun preview.
      operationId: refreshPreview
      parameters:
        - name: id
          description: dataset id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The request of refresh preview is received.
        '401':
          description: Unauthorized. The auth token is not valid.
        '404':
          description: Dataset not found.
  /catalog/files:
    get:
      tags:
        - Catalog
      description: Rerun the unmanaged csv files in s3 bucket.
      summary: Get unmanaged csv files.
      operationId: getUnmanagedCsvFiles
      responses:
        '200':
          description: Dataset not found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CsvFile'
        '400':
          description: Bad request. The auth token is missing.
        '401':
          description: Unauthorized. The auth token is not valid.
  /catalog/files/{filename}:
    delete:
      tags:
        - Catalog
      description: Delete the csv file from S3 bucket. See https://discover.labs.tibcocloud.com/backswagger#/Files%20Operations/deleteRouteSegment
      summary: Delete the csv file from S3 bucket.
      parameters:
        - name: filename
          description: The csv file name
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The deleting file resquest is accepted.
        '400':
          description: Bad request. The auth token is missing.
        '401':
          description: Unauthorized. The auth token is not valid.
        '406':
          description: Delete file on backend fails.
        '409':
          description: Conflict. The csv file is used by dataset.
  /catalog/files/preview/{filename}:
    get:
      tags:
        - Catalog
      description: Get the preview data of the unmanaged csv file.
      summary: Get the preview data of the unmanaged csv file.
      operationId: getUnmanagedCsvData
      parameters:
        - name: filename
          description: The csv file name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the csv file preview data in string.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Bad request. The auth token is missing
        '401':
          description: Unauthorized. The auth token is not valid.
        '404':
          description: The csv file is not found.
  /catalog/files/{orgId}:
    post:
      tags:
        - Catalog
      summary: Upload files to backend storage
      description: Upload files to backend storage
      operationId: uploadCsvFile
      parameters:
        - name: orgId
          in: path
          description: Organization Id
          required: true
          schema:
            type: string
      requestBody:
        description: csv
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUpload'
      responses:
        '200':
          description: Add response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedFiles'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedFiles'
  /catalog/tdv/data/{id}:
    get:
      tags:
        - Catalog
      description: Get the preview data of managed csv file using the dataset id.
      summary: Get the preview data of the managed csv file.
      operationId: getManagedCsvData
      parameters:
        - name: id
          description: The dataset id.
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the csv file preview data in JSON.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '400':
          description: Bad request. The auth token is missing
        '401':
          description: Unauthorized. The auth token is not valid.
        '404':
          description: The dataset is not found.
  /repository/analysis:
    get:
      description: Get all analysis.
      tags:
        - Repository
      summary: Get all analysis for TIBCO Labs Discover.
      operationId: getAnalysis
      responses:
        '200':
          description: Returns all analysis.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Analysis'
        '400':
          description: Bad request. The auth token is missing
    post:
      description: Create a new analysis.
      tags:
        - Repository
      summary: Create a new analysis.
      operationId: createAnalysis
      requestBody:
        description: The analysis data to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisRequest'
      responses:
        '200':
          description: Analysis is created succesfully.
        '401':
          description: Bad request. The auth token is missing
  /repository/analysis/{id}:
    get:
      description: Get an analysis.
      tags:
        - Repository
      summary: Get a analysis for TIBCO Labs Discover.
      operationId: getAnalysisDetails
      parameters:
        - name: id
          in: path
          description: Analysis id to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns an analysis.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
        '400':
          description: Bad request. The auth token is missing
        '404':
          description: Record not found.
    put:
      description: Update an analysis.
      tags:
        - Repository
      summary: Update an analysis for TIBCO Labs Discover.
      operationId: updateAnalysis
      parameters:
        - name: id
          in: path
          description: Analysis id to update.
          required: true
          schema:
            type: string
      requestBody:
        description: The analysis to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisRequest'
      responses:
        '200':
          description: Update an analysis.
        '401':
          description: Bad request. The auth token is missing
        '404':
          description: Record not found.
    delete:
      description: Delete an analysis.
      tags:
        - Repository
      summary: Delete an analysis for TIBCO Labs Discover.
      operationId: deleteAnalysis
      parameters:
        - name: id
          in: path
          description: Analysis id to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete a analysis.
        '401':
          description: Bad request. The auth token is missing
        '404':
          description: Record not found.
  /repository/analysis/{id}/template/{templateId}:
    post:
      description: Assign a template to an analysis.
      tags:
        - Repository
      summary: Assign a template to an analysis.
      operationId: setAnalysisTemplate
      parameters:
        - name: id
          in: path
          description: Analysis id to set the template.
          required: true
          schema:
            type: string
        - name: templateId
          in: path
          description: TemplateId to be assigned to the analysis.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete a analysis.
        '401':
          description: Bad request. The auth token is missing
        '404':
          description: Record not found.
  /repository/analysis/{id}/action/{action}:
    post:
      description: Execute an action for an analysis.
      tags:
        - Repository
      summary: Execute an action for an analysis.
      operationId: runAnalysisAction
      parameters:
        - name: id
          in: path
          description: Analysis id to execute the action.
          required: true
          schema:
            type: string
        - name: action
          in: path
          description: Action to be executed.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete a analysis.
        '401':
          description: Bad request. The auth token is missing
        '404':
          description: Record not found.
        '405':
          description: Action is not available
  /repository/analysis/{id}/status:
    get:
      description: Returns the status the analysis is.
      tags:
        - Repository
      summary: Returns the status the analysis is.
      parameters:
        - name: id
          in: path
          description: Analysis id to update.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns an analysis status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisStatus'
        '400':
          description: Bad request. The auth token is missing
        '404':
          description: Record not found.
    post:
      description: Report the spark job asociated to the current analysis.
      tags:
        - Repository
      summary: Report the status for the proces mining jobspark job asociated to the current analysis.
      operationId: reportStatusForAnalysis
      parameters:
        - name: id
          in: path
          description: Analysis id to update.
          required: true
          schema:
            type: string
      requestBody:
        description: The analysis data to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisStatus'
      responses:
        '200':
          description: The analysis status is reported succesfully.
        '401':
          description: Bad request. The auth token is missing
  /visualisation/templates:
    get:
      description: Get all templates.
      tags:
        - Visualisation
      summary: Get all templates for TIBCO Labs Discover.
      operationId: getTemplates
      responses:
        '200':
          description: Returns all templates.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
        '400':
          description: Bad request. The auth token is missing
    post:
      description: Create a new template.
      tags:
        - Visualisation
      summary: Create a new template.
      operationId: createTemplate
      requestBody:
        description: The template to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateRequest'
      responses:
        '200':
          description: Template is created succesfully.
        '400':
          description: Bad request. The auth token is missing
  /visualisation/templates/{id}:
    get:
      description: Get a template.
      tags:
        - Visualisation
      summary: Get a template for TIBCO Labs Discover.
      operationId: getTemplate
      parameters:
        - name: id
          in: path
          description: Template unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '400':
          description: Bad request. The auth token is missing
        '404':
          description: Record not found.
    put:
      description: Update a template.
      tags:
        - Visualisation
      summary: Update a template for TIBCO Labs Discover.
      operationId: updateTemplate
      parameters:
        - name: id
          in: path
          description: Template unique identifier.
          required: true
          schema:
            type: string
      requestBody:
        description: The template to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
      responses:
        '200':
          description: Update a template.
        '400':
          description: Bad request. The auth token is missing
        '404':
          description: Template not found.
    delete:
      description: Delete a template.
      tags:
        - Visualisation
      summary: Delete a template for TIBCO Labs Discover.
      operationId: deleteTemplate
      parameters:
        - name: id
          in: path
          description: Template unique identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete a template.
        '400':
          description: Bad request. The auth token is missing
        '404':
          description: Record not found.
  /visualisation/items:
    get:
      description: Get all available analytics visualisation for the templates.
      tags:
        - Visualisation
      summary: Get all available analytics visualisation for the templates for TIBCO Labs Discover.
      operationId: getItems
      parameters:
        - name: type
          in: query
          description: Element type to return. If not value is provided, it returns available DXPs
          required: false
          schema:
            type: string
            enum:
              - dxp
              - folder
      responses:
        '200':
          description: Returns all available analytics visualisation for the templates.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Visualisation'
        '400':
          description: Bad request. The auth token is missing
  /configuration:
    get:
      description: Get the configuration for the app
      tags:
        - Configuration
      summary: Get the configuration for TIBCO Labs Discover.
      operationId: getConfiguration
      responses:
        '200':
          description: Application configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverConfiguration'
        '400':
          description: Bad request. The auth token is missing
  /configuration/general:
    get:
      description: Get the general configuration for the app
      tags:
        - Configuration
      summary: Get the general configuration for TIBCO Labs Discover.
      operationId: getGeneralConfiguration
      responses:
        '200':
          description: General application configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInformation'
        '400':
          description: Bad request. The auth token is missing
    post:
      description: Modify the general configuration for the app
      tags:
        - Configuration
      summary: Modify the general configuration
      operationId: postGeneralConfiguration
      requestBody:
        description: General application configuration to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneralInformation'
      responses:
        '200':
          description: General application configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInformation'
        '400':
          description: Bad request. The auth token is missing
  /configuration/landingpages:
    get:
      description: Get the landing page configuration for the app
      tags:
        - Configuration
      summary: Get the landing pages configuration for TIBCO Labs Discover.
      operationId: getLandingPagesConfiguration
      responses:
        '200':
          description: Landing page configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandingPage'
        '400':
          description: Bad request. The auth token is missing
    post:
      description: Modify the landing page configuration for the app
      tags:
        - Configuration
      summary: Modify the landing page configuration
      operationId: postLandingPagesConfiguration
      requestBody:
        description: Landing page application configuration to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LandingPage'
      responses:
        '200':
          description: Landing page configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandingPage'
        '400':
          description: Bad request. The auth token is missing
  /configuration/messages:
    get:
      description: Get the messages configuration for the app
      tags:
        - Configuration
      summary: Get the messages configuration for TIBCO Labs Discover.
      operationId: getMessagesConfiguration
      responses:
        '200':
          description: Messages configuration.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '400':
          description: Bad request. The auth token is missing
    post:
      description: Modify the messages configuration for the app
      tags:
        - Configuration
      summary: Modify the messages configuration
      operationId: postMessagesConfiguration
      requestBody:
        description: Messages configuration to update.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Message'
      responses:
        '200':
          description: Messages configuration.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '400':
          description: Bad request. The auth token is missing
  /configuration/formats:
    get:
      description: Get the formats configuration for the app
      tags:
        - Configuration
      summary: Get the formats configuration for TIBCO Labs Discover.
      operationId: getFormatsConfiguration
      responses:
        '200':
          description: Formats configuration.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FieldFormats'
        '400':
          description: Bad request. The auth token is missing
    post:
      description: Modify the formats configuration for the app
      tags:
        - Configuration
      summary: Modify the formats configuration
      operationId: postFormatsConfiguration
      requestBody:
        description: Formats configuration to update.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FieldFormats'
      responses:
        '200':
          description: Formats configuration.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FieldFormats'
        '400':
          description: Bad request. The auth token is missing
  /configuration/investigations:
    get:
      description: Get the investigations configuration for the app
      tags:
        - Configuration
      summary: Get the investigations configuration for TIBCO Labs Discover.
      operationId: getInvestigations
      responses:
        '200':
          description: Investigations configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Investigations'
        '400':
          description: Bad request. The auth token is missing
    post:
      description: Modify the investigations configuration for the app
      tags:
        - Configuration
      summary: Modify the investigations configuration
      operationId: postInvestigations
      requestBody:
        description: Investigations configuration to update.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/InvestigationApplication'
      responses:
        '200':
          description: Investigations configuration.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvestigationApplication'
        '400':
          description: Bad request. The auth token is missing
  /configuration/analytics:
    get:
      description: Get the analytics configuration for the app
      tags:
        - Configuration
      summary: Get the analytics configuration for TIBCO Labs Discover.
      operationId: getAnalytics
      responses:
        '200':
          description: Analytics configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analytics'
        '400':
          description: Bad request. The auth token is missing
    post:
      description: Modify the analytics configuration for the app
      tags:
        - Configuration
      summary: Modify the analytics configuration
      operationId: postAnalytics
      requestBody:
        description: Analytics application configuration to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Analytics'
      responses:
        '200':
          description: Analytics configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analytics'
        '400':
          description: Bad request. The auth token is missing
  /configuration/automap:
    get:
      description: Get the automap configuration for the app
      tags:
        - Configuration
      summary: Get the automap configuration for TIBCO Labs Discover.
      operationId: getAutomap
      responses:
        '200':
          description: Automap configuration.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Automapping'
        '400':
          description: Bad request. The auth token is missing
    post:
      description: Modify the automap configuration for the app
      tags:
        - Configuration
      summary: Modify the automap configuration
      operationId: postAutomap
      requestBody:
        description: Automap configuration to update.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Automapping'
      responses:
        '200':
          description: Investigations configuration.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Automapping'
        '400':
          description: Bad request. The auth token is missing
  /configuration/whoami:
    get:
      description: Get the user configuration
      tags:
        - Configuration
      summary: Get the user configuration for TIBCO Labs Discover.
      operationId: getWhoAmI
      responses:
        '200':
          description: Automap configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhoAmI'
        '400':
          description: Bad request. The auth token is missing
  /investigation/{appId}:
    get:
      description: Get the investiation cases for an id
      tags:
        - Investigations
      summary: Returns the investigations for an id
      operationId: getInvestigationDestilsForId
      parameters:
        - name: appId
          description: application id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the dataset id.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvestigationDetails'
        '400':
          description: Bad request. The auth token is missing
  /investigation/{appId}/{investigationId}/{state}/actions:
    get:
      description: Get the available actions for an investigationAppId
      tags:
        - Investigations
      summary: Returns all the possible actions for a given investigationAppId
      operationId: getActionsForInvestigation
      parameters:
        - name: appId
          description: Application ID
          in: path
          required: true
          schema:
            type: string
        - name: investigationId
          description: Investigation ID
          in: path
          required: true
          schema:
            type: string
        - name: state
          description: State
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the actions for the given investigation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvestigationActions'
        '400':
          description: Bad request. The auth token is missing
  /investigation/applications:
    get:
      description: Get the possible applications that can be used to create investigations
      tags:
        - Investigations
      summary: Get the possible applications that can be used to create investigations for TIBCO Labs Discover.
      operationId: getAllApplications
      responses:
        '200':
          description: Available applications.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
        '400':
          description: Bad request. The auth token is missing
  /investigation/{appId}/definition:
    get:
      description: Get the application definition info by appId
      tags:
        - Investigations
      summary: Get the application definition info by appId.
      operationId: getApplicationDefinition
      parameters:
        - name: appId
          description: application id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Available applications.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigationApplicationDefinition'
        '400':
          description: Bad request. The auth token is missing
  /investigation/{appId}/{creatorId}/start:
    post:
      description: Create an investigation
      tags:
        - Investigations
      summary: Create an investigation
      operationId: postStartCaseForInvestigation
      parameters:
        - name: appId
          description: application id
          in: path
          required: true
          schema:
            type: string
        - name: creatorId
          description: creator Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Data to create a new investigation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestigationCreateRequest'
      responses:
        '200':
          description: Analytics configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestigationCreateResponse'
        '400':
          description: Bad request. The auth token is missing
  /documentation/exportGraph/{mapname}/{folderId}:
    post:
      description: export graph
      tags:
        - Documentations
      summary: export graph
      operationId: postExport
      parameters:
        - name: mapname
          description: map name
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          description: folder Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Export Data to create for export function
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Feedback from Documentation System.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request. The auth token is missing
  /files/{orgid}/{filename}:
    delete:
      tags:
        - Files Operations
      summary: Delete the specified file on storage
      description: Delete the specified file on storage
      operationId: deleteRouteSegment
      parameters:
        - name: orgid
          in: path
          description: Organization Id
          required: true
          schema:
            type: string
        - name: filename
          in: path
          description: FileName to be deleted
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedFiles'
        "500":
          description: Internal server error
  /files/preview/{orgid}/{filename}:
    get:
      tags:
        - Files Operations
      summary: Return list of files stored in this org
      description: Return list of files stored in this org
      operationId: getPreviewRoute
      parameters:
        - name: orgid
          in: path
          description: Organization Id
          required: true
          schema:
            type: string
        - name: filename
          in: path
          description: filename to preview (original name)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: raw data in json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedFilesPreview'
        "404":
          description: key not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedFilesPreview'
        "500":
          description: Internal server error
  /files/V1/{orgid}:
    get:
      tags:
        - Files Operations
      summary: Return list of files stored in this org
      description: Return list of files stored in this org
      operationId: getRouteFile
      parameters:
        - name: orgid
          in: path
          description: Organization Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3Content'
        "500":
          description: Internal server error
      deprecated: true
  /files/download/{filename}:
    get:
      tags:
        - Files Operations
      summary: return signed url for 1 h to get you file from
      description: Return list of files stored in this org
      operationId: getRouteFileContent
      parameters:
        - name: filename
          in: path
          description: filename
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedFilesUrl'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedFilesUrl'
  /files/{orgid}:
    get:
      tags:
        - Files Operations
      summary: Return list of files stored in this org
      description: Return list of files stored in this org
      operationId: getRouteFileV2
      parameters:
        - name: orgid
          in: path
          description: Organization Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisContent'
        "500":
          description: Internal server error
    post:
      tags:
        - Files Operations
      summary: Upload files to backend storage
      description: Upload files to backend storage
      operationId: postRouteFile
      parameters:
        - name: orgid
          in: path
          description: Organization Id
          required: true
          schema:
            type: string
      requestBody:
        description: csv
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUpload'
      responses:
        "200":
          description: Add response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedFiles'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedFiles'
  /login/validate:
    post:
      tags:
        - login
      summary: Validate Bearer and LA groupe
      description: Validate Bearer and LA groupe
      operationId: postValidCredsRoute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCredentials'
            example:
              credentials: CIC~azertyuiopqldlcnc
      responses:
        "200":
          description: Valid Credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedLoginValidate'
        "401":
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedLoginValidate'
  /metrics/analysis/{orgId}/{AnalysisID}:
    get:
      tags:
        - Metrics
      summary: Get Datasets metrics
      description: Get Datasets metrics
      operationId: getAnalysisMetricsRoute
      parameters:
        - name: orgId
          in: path
          description: orgId where the datasource is stored
          required: true
          schema:
            type: string
        - name: AnalysisID
          in: path
          description: dataSourceName to be retrieve
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedRenderedMetricsAS'
        "404":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedRenderedMetricsAS'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedRenderedMetricsAS'
    delete:
      tags:
        - Metrics
      summary: 'Delete Datasets metrics '
      description: Delete Datasets metrics
      operationId: deleteAnalysisMetricsRoute
      parameters:
        - name: orgId
          in: path
          description: orgId where the datasource is stored
          required: true
          schema:
            type: string
        - name: AnalysisID
          in: path
          description: AnalysisID to be retrieve
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDeleteMetrics'
        "404":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDeleteMetrics'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDeleteMetrics'
  /metrics/datasets/{orgId}/{DatasetID}:
    get:
      tags:
        - Metrics
      summary: Get Datasets metrics
      description: Get Datasets metrics
      operationId: getDatasetsMetricsRoute
      parameters:
        - name: orgId
          in: path
          description: orgId where the datasource is stored
          required: true
          schema:
            type: string
        - name: DatasetID
          in: path
          description: dataSourceName to be retrieve
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedRenderedMetrics'
        "404":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedRenderedMetrics'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedRenderedMetrics'
    delete:
      tags:
        - Metrics
      summary: 'Delete Datasets metrics '
      description: Delete Datasets metrics
      operationId: deleteDatasetsMetricsRoute
      parameters:
        - name: orgId
          in: path
          description: orgId where the datasource is stored
          required: true
          schema:
            type: string
        - name: DatasetID
          in: path
          description: dataSourceName to be retrieve
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDeleteMetrics'
        "404":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDeleteMetrics'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDeleteMetrics'
  /metrics/analysis:
    post:
      tags:
        - Metrics
      summary: Store Metrics for analysis
      description: Store Metrics for analysis
      operationId: postAnalysisMetricsRoute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsAnalysis'
            example:
              credentials: CIC~azertyuiopqldlcnc
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedStoreMetrics'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedStoreMetrics'
  /metrics/datasets:
    post:
      tags:
        - Metrics
      summary: Store Metrics for Datasets
      description: Store Metrics for Datasets
      operationId: postDatasetsMetricsRoute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsDS'
            example:
              credentials: CIC~azertyuiopqldlcnc
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedStoreMetrics'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedStoreMetrics'
  /mining/analysis/{analysis_id}:
    delete:
      tags:
        - Mining Data
      summary: Delete all data  in an org for a given analysis
      description: Delete all data  in an org for a given analysis
      operationId: deleteAnalysisRoute
      parameters:
        - name: analysis_id
          in: path
          description: Id of analysis
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDeleteAnalysis'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDeleteAnalysis'
        "401":
          description: Un authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDeleteAnalysis'
  /mining/activities/{analysis_id}:
    get:
      tags:
        - Mining Data
      summary: Get all activities  in an org for a given analysis
      description: Get all activities  in an org for a given analysis
      operationId: getActivitiesRoute
      parameters:
        - name: analysis_id
          in: path
          description: Id of analysis
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedActivities'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedActivities'
        "401":
          description: Un authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedActivities'
  /mining/analysis/all:
    get:
      tags:
        - Mining Data
      summary: Get all Analysis in an org
      description: Get all Analysis in an org
      operationId: getAllAnalysisRoute
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedGetAllAnalysis'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedGetAllAnalysis'
        "404":
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedGetAllAnalysis'
  /mining/variants/reference/{analysis_id}:
    get:
      tags:
        - Mining Data
      summary: Get all reference variants in an org
      description: Get all reference variants in an org
      operationId: getReferenceRoute
      parameters:
        - name: analysis_id
          in: path
          description: Id of analysis
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedGetReference'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedGetReference'
        "401":
          description: Un authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedGetReference'
  /preview/{sparkAppName}:
    get:
      tags:
        - Spark Preview Job
      summary: Return Status of Spark Preview Job
      description: Return Status of Spark Preview Job
      operationId: getJobPrevRoute
      parameters:
        - name: sparkAppName
          in: path
          description: Organization Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedPreview'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedPreview'
        "404":
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedPreview'
    delete:
      tags:
        - Spark Preview Job
      summary: Delete the specified spark application
      description: Delete the specified spark application
      operationId: deleteJobPrevRoute
      parameters:
        - name: sparkAppName
          in: path
          description: sparkAppName Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedPreview'
        "500":
          description: Internal server error
        "404":
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedPreview'
  /preview:
    post:
      tags:
        - Spark Preview Job
      summary: Spawn Spark job to preview and insert File as binary in DB
      description: Spawn Spark job to preview and insert File as binary in DB
      operationId: postJobPrevRoute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/previewConfigFile'
            example:
              Token: CIC~IloveFoodAndWine
              Organization: 01xxxxxxxxxxxxxxxxxxxxxxxx
              DatasetId: xxxxxxxx
              schema:
                - format: None
                  columnName: Service ID
                  dataType: string
                - format: None
                  columnName: Operation
                  dataType: string
                - format: d.M.yy H:m
                  columnName: Start Date
                  dataType: timestamp
                - format: d.M.yy H:m
                  columnName: End Date
                  dataType: timestamp
                - format: None
                  columnName: Agent Position
                  dataType: string
                - format: None
                  columnName: Customer ID
                  dataType: string
                - format: None
                  columnName: Product
                  dataType: string
                - format: None
                  columnName: Service Type
                  dataType: string
                - format: None
                  columnName: Agent
                  dataType: string
      responses:
        "200":
          description: Add response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedPreview'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedPreview'
  /processmining/{sparkAppName}:
    get:
      tags:
        - Spark One time Job
      summary: Get status of the spark job for PM
      description: Get status of the spark job for PM
      operationId: getJobRoute
      parameters:
        - name: sparkAppName
          in: path
          description: Spark Job Name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedSparkSingle'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedSparkSingle'
        "404":
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedSparkSingle'
    delete:
      tags:
        - Spark One time Job
      summary: Delete the specified spark application
      description: Delete the specified spark application
      operationId: deleteJobRoute
      parameters:
        - name: sparkAppName
          in: path
          description: sparkAppName Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedSparkSingle'
        "500":
          description: Internal server error
        "404":
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedSparkSingle'
  /processmining:
    post:
      tags:
        - Spark One time Job
      summary: Creates a spark job with a given config
      description: Creates a spark job with a given config
      operationId: postJobRoute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pmConfigLiveApps'
            example:
              schema:
                - format: ""
                  columnName: Service ID
                  dataType: string
                - format: ""
                  columnName: Operation
                  dataType: string
                - format: ""
                  columnName: Agent
                  dataType: string
                - format: ""
                  columnName: Service Type
                  dataType: string
                - format: ""
                  columnName: Product
                  dataType: string
                - format: ""
                  columnName: Customer ID
                  dataType: string
                - format: ""
                  columnName: Agent Position
                  dataType: string
                - format: d.M.yy H:m
                  columnName: End Date
                  dataType: timestamp
                - format: d.M.yy H:m
                  columnName: Start Date
                  dataType: timestamp
              datasetSource:
                source: /services/databases/org_01xxxxxxxxxxxxxxxxxxxxxxxx/datasets/CallCenter
              filters:
                - description: ""
                  name: ""
                  filterType: ""
                  value: ""
              groups:
                - description: ""
                  name: ""
                  filterType: ""
                  value: ""
              id: 00000-00000-0000-0000
              version: "12929039330202"
              token: CIC~PaellaIsGood
              mappings:
                activity: Operation
                caseId: Service ID
                endTime: End Date
                otherAttributes: "true"
                requester: ""
                resource: Agent
                resourceGroup: Agent Position
                scheduledEnd: ""
                scheduledStart: ""
                startTime: Start Date
              organization: 01xxxxxxxxxxxxxxxxxxxxxxxx
              schedule:
                schedule: every5min
                isSchedule: "false"
      responses:
        "200":
          description: Add response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedSparkSingle'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedSparkSingle'
  /processmining/scheduled/{sparkAppName}:
    get:
      tags:
        - Spark Scheduled Job
      summary: Return list of files stored in this org
      description: Return list of files stored in this org
      operationId: getJobSchedRoute
      parameters:
        - name: sparkAppName
          in: path
          description: Organization Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedSchedules'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedSchedules'
        "404":
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedSchedules'
    delete:
      tags:
        - Spark Scheduled Job
      summary: Delete the specified spark application
      description: Delete the specified spark application
      operationId: deleteJobSchedRoute
      parameters:
        - name: sparkAppName
          in: path
          description: sparkAppName Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedSchedules'
        "500":
          description: Internal server error
        "404":
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedSchedules'
  /processmining/scheduled:
    post:
      tags:
        - Spark Scheduled Job
      summary: Upload files to backend storage
      description: Upload files to backend storage
      operationId: postJobSchedRoute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pmConfigLiveApps'
            example:
              schema:
                - format: ""
                  ColumnName: Service ID
                  DataType: string
                - format: ""
                  ColumnName: Operation
                  DataType: string
                - format: ""
                  ColumnName: Agent
                  DataType: string
                - format: ""
                  ColumnName: Service Type
                  DataType: string
                - format: ""
                  ColumnName: Product
                  DataType: string
                - format: ""
                  ColumnName: Customer ID
                  DataType: string
                - format: ""
                  ColumnName: Agent Position
                  DataType: string
                - format: d.M.yy H:m
                  ColumnName: End Date
                  DataType: timestamp
                - format: d.M.yy H:m
                  ColumnName: Start Date
                  DataType: timestamp
              Dataset_Source:
                Source: /services/databases/org_01xxxxxxxxxxxxxxxxxxxxxxxx/datasets/CallCenter
              Filter:
                - Description: ""
                  Name: ""
                  Type: ""
                  Value: ""
              Groups:
                - Description: ""
                  Name: ""
                  Type: ""
                  Value: ""
              id: PAM_000001
              token: CIC~PaellaIsGood
              Mapping:
                Activity: Operation
                CaseID: Service ID
                Endtime: End Date
                Otherattributes: "true"
                Requester: ""
                Resource: Agent
                Resourcegroup: Agent Position
                Scheduledend: ""
                Scheduledstart: ""
                Starttime: Start Date
              Organization: 01xxxxxxxxxxxxxxxxxxxxxxxx
              Schedule:
                Schedule: every5min
                isSchedule: "false"
      responses:
        "200":
          description: Add response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedSchedules'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedSchedules'
  /tdv/managed/csv/{orgId}/{DatasetID}:
    delete:
      tags:
        - Tibco DataVirtualization
      summary: Delete the specified datasource in TDV
      description: Delete the specified datasource in TDV
      operationId: deleteJobTdvRoute
      parameters:
        - name: orgId
          in: path
          description: orgId where te datasource is stored
          required: true
          schema:
            type: string
        - name: DatasetID
          in: path
          description: DatasetID to be deleted
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDeleted'
        "500":
          description: Internal server error
        "404":
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDeleted'
  /tdv/data/{orgId}/{DatasetID}:
    get:
      tags:
        - Tibco DataVirtualization
      summary: Get Data preview of a specified DataSource
      description: Get Data preview of a specified DataSource
      operationId: getDataJobTdvRoute
      parameters:
        - name: orgId
          in: path
          description: orgId where the datasource is stored
          required: true
          schema:
            type: string
        - name: DatasetID
          in: path
          description: dataSourceName to be retrieve
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedGetData'
        "404":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedGetData'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedGetData'
  /tdv/managed/datasets/{orgId}:
    get:
      tags:
        - Tibco DataVirtualization
      summary: Get List of all managed Datasets in  TDV
      description: Get List of managed Datasets in  TDV
      operationId: getDatasetsAllManagedRoute
      parameters:
        - name: orgId
          in: path
          description: orgId where the datasource is published
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedAllManagedDatasets'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedAllManagedDatasets'
  /tdv/unmanaged/datasets/{orgId}:
    get:
      tags:
        - Tibco DataVirtualization
      summary: Get List of all managed Datasets in  TDV
      description: Get List of managed Datasets in  TDV
      operationId: getDatasetsAllUnManagedRoute
      parameters:
        - name: orgId
          in: path
          description: orgId where the datasource is published
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedAllManagedDatasets'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedAllManagedDatasets'
  /tdv/managed/datasets/{orgId}/details/{DatasetID}:
    get:
      tags:
        - Tibco DataVirtualization
      summary: Get details of a managed dataset
      description: Get details of a given dataset
      operationId: getDatasetsDetailsRoute
      parameters:
        - name: orgId
          in: path
          description: orgId where the datasource is published
          required: true
          schema:
            type: string
        - name: DatasetID
          in: path
          description: datasetName where the datasource is identified
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDetailsAssets'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDetailsAssets'
  /tdv/unmanaged/datasets/{orgId}/details/{DatasetID}:
    get:
      tags:
        - Tibco DataVirtualization
      summary: Get details of a managed dataset
      description: Get details of a given dataset
      operationId: getDatasetsDetailsUnManagedRoute
      parameters:
        - name: orgId
          in: path
          description: orgId where the datasource is published
          required: true
          schema:
            type: string
        - name: DatasetID
          in: path
          description: datasetName where the datasource is identified
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDetailsAssetsUnManaged'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDetailsAssetsUnManaged'
  /tdv/unmanaged/views/{orgId}:
    get:
      tags:
        - Tibco DataVirtualization
      summary: Get List of customer published views in unmanaged TDV
      description: Get List of published views
      operationId: getDatasetsPublishedRoute
      parameters:
        - name: orgId
          in: path
          description: orgId where the datasource is published
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedUnmanagedPublishedViews'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedUnmanagedPublishedViews'
  /tdv/metadata/{orgId}/{DatasetID}:
    get:
      tags:
        - Tibco DataVirtualization
      summary: Get Schema of a specified DataSource
      description: Get Schema of a specified DataSource
      operationId: getSchemaJobTdvRoute
      parameters:
        - name: orgId
          in: path
          description: orgId where the datasource is stored
          required: true
          schema:
            type: string
        - name: DatasetID
          in: path
          description: DatasetID to be retrieve
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDataSchema'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedDataSchema'
  /tdv/health:
    get:
      tags:
        - Tibco DataVirtualization
      summary: Get alive from TDV
      description: Get alive from TDV
      operationId: getTdvHealthCheckRoute
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedCheck'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedCheck'
  /tdv/managed/csv:
    put:
      tags:
        - Tibco DataVirtualization
      summary: Update a CSV datasource with introspection in TDV
      description: Re-introspect a given data source
      operationId: putJobTdvRoute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tdvJob'
            example:
              DatasetID: something
              DatasetName: CallCenter
              DatasetDescription: Some Call center logs
              DatasetSource:
                DatasourceType: File-Delimited
                Encoding: UTF-8
                EscapeChar: \
                FileName: CallcenterExample.csv
                FilePath: s3a://discover-cic/01xxxxxxxxxxxxxxxxxxxxxxxx/CallcenterExample.csv
                QuoteChar: '"'
                CommentsChar: '#'
                Separator: ","
                Headers: "true"
              Organization: 01xxxxxxxxxxxxxxxxxxxxxxxx
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedUpdate'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedUpdate'
    post:
      tags:
        - Tibco DataVirtualization
      summary: Create a new CSV datasource with introspection in TDV
      description: Create a new datasource with introspection in TDV
      operationId: postJobTdvRoute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tdvJob'
            example:
              DatasetName: CallCenter
              DatasetDescription: Some Call center logs
              DatasetSource:
                DatasourceType: File-Delimited
                Encoding: UTF-8
                EscapeChar: \
                FileName: CallcenterExample.csv
                FilePath: s3a://discover-cic/01xxxxxxxxxxxxxxxxxxxxxxxx/CallcenterExample.csv
                QuoteChar: '"'
                CommentsChar: '#'
                Separator: ","
                Headers: "true"
              Organization: 01xxxxxxxxxxxxxxxxxxxxxxxx
      responses:
        "200":
          description: Add response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedTDVCreate'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedTDVCreate'
  /tdv/unmanaged/copy:
    post:
      tags:
        - Tibco DataVirtualization
      summary: Copy an unmanaged views into our system
      description: Copy an unmanaged views into our system
      operationId: postUnManagedJobTdvRoute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnManageDataSetCopy'
            example:
              DatasetName: CallCenter
              Annotation: Some Call center logs
              DatasetPath: /somewhere/in/dark/path
              Organization: 01dxjp1rpa35bzcv1kvem9ffyk
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedCopyUnManaged'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedCopyUnManaged'
  /uiassets/{orgid}/{filename}:
    delete:
      tags:
        - Assets Storage Operations
      summary: Delete the specified file on storage
      description: Delete the specified file on storage
      operationId: deleteRouteSegment_1
      parameters:
        - name: orgid
          in: path
          description: Organization Id
          required: true
          schema:
            type: string
        - name: filename
          in: path
          description: FileName to be deleted
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedUIAssets'
        "500":
          description: Internal server error
  /uiassets/download/{orgid}/{filename}:
    get:
      tags:
        - Assets Storage Operations
      summary: Return stream of file from S3
      description: Return stream of file from S3
      operationId: getRouteDirectFile
      parameters:
        - name: orgid
          in: path
          description: Organization Id
          required: true
          schema:
            type: string
        - name: filename
          in: path
          description: filename
          required: true
          schema:
            type: string
      responses:
        '200':
          description: response
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Function1RequestContextFutureRouteResult'
  /uiassets/{orgid}:
    get:
      tags:
        - Assets Storage Operations
      summary: Return list of files stored in this org for web assets
      description: Return list of files stored in this org for web assets
      operationId: getRouteFile_1
      parameters:
        - name: orgid
          in: path
          description: Organization Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3Content'
        "500":
          description: Internal server error
    post:
      tags:
        - Assets Storage Operations
      summary: "Upload files to S3 under <Bucket>/{orgId}/assets/"
      description: "Upload files to S3 under <Bucket>/{orgId}/assets/"
      operationId: postRouteFile_1
      parameters:
        - name: orgid
          in: path
          description: Organization Id
          required: true
          schema:
            type: string
      requestBody:
        description: file
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadUI'
      responses:
        "200":
          description: Add response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedUIAssets'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedUIAssets'
  /uiassets/download/{filename}:
    get:
      tags:
        - Assets Storage Operations
      summary: return signed url for 1 h to get you file from
      description: Return list of files stored in this org
      operationId: getRouteFileContent_1
      parameters:
        - name: filename
          in: path
          description: filename
          required: true
          schema:
            type: string
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedUIAssetsUrl'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPerformedUIAssetsUrl'
      deprecated: true
components:
  securitySchemes:
    basic:
      type: http
      description: Basic authenfication
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: CIC oauth token
  schemas:
    Schema:
      required:
        - columnName
        - dataType
        - format
      type: object
      properties:
        format:
          type: string
        columnName:
          type: string
        dataType:
          type: string
    ListManagedDatasetsInfo:
      required:
        - empty
      type: array
      properties:
        empty:
          type: boolean
        traversableAgain:
          type: boolean
      items:
        $ref: '#/components/schemas/ManagedDatasetsInfo'
    redisFileInfo:
      required:
        - ContentType
        - Encoding
        - EscapeChar
        - FileLocation
        - FileSize
        - LastModified
        - OriginalEncoding
        - OriginalFilename
        - OriginalNewLine
        - QuoteChar
        - Separator
        - newline
      type: object
      properties:
        ContentType:
          type: string
        LastModified:
          type: string
        OriginalFilename:
          type: string
        OriginalEncoding:
          type: string
        FileSize:
          type: string
        newline:
          type: string
        EscapeChar:
          type: string
        QuoteChar:
          type: string
        Separator:
          type: string
        Encoding:
          type: string
        OriginalNewLine:
          type: string
        FileLocation:
          type: string
    ActionPerformedDetailsAssets:
      required:
        - code
        - message
        - tdv
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        tdv:
          $ref: '#/components/schemas/tdvJob'
    ListBucket:
      required:
        - bucketName
        - eTag
        - key
        - lastModified
        - size
        - storageClass
      type: object
      properties:
        bucketName:
          type: string
        key:
          type: string
        eTag:
          type: string
        size:
          type: integer
          format: int64
        lastModified:
          type: string
        storageClass:
          type: string
    SchemaTdv:
      required:
        - COLUMN_NAME
        - DATA_TYPE
        - JDBC_DATA_TYPE
        - ORDINAL_POSITION
      type: object
      properties:
        COLUMN_NAME:
          type: string
        DATA_TYPE:
          type: string
        ORDINAL_POSITION:
          type: number
          format: double
        JDBC_DATA_TYPE:
          type: number
          format: double
    ActivitiesTable:
      type: object
      properties:
        analysisId:
          type: string
        activityName:
          type: string
        id:
          type: object
        totalOccurrences:
          type: object
        totalFirst:
          type: object
        totalLast:
          type: object
        isend:
          type: object
        isstart:
          type: object
    ActionPerformedUIAssetsUrl:
      required:
        - code
        - message
        - url
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        url:
          type: string
    ListString:
      type: array
      properties:
        empty:
          type: boolean
        traversableAgain:
          type: boolean
      items:
        type: string
    ActionPerformedGetReference:
      required:
        - code
        - data
        - message
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        data:
          required:
            - empty
          type: array
          properties:
            empty:
              type: boolean
            traversableAgain:
              type: boolean
          items:
            $ref: '#/components/schemas/VariantsTable'
    ActionPerformedFilesPreview:
      required:
        - code
        - data
        - message
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        data:
          required:
            - empty
          type: array
          properties:
            empty:
              type: boolean
            traversableAgain:
              type: boolean
          items:
            type: string
    pmConfigLiveApps:
      required:
        - datasetSource
        - id
        - mappings
        - organization
        - schema
        - token
        - version
      type: object
      properties:
        schema:
          required:
            - empty
          type: array
          properties:
            empty:
              type: boolean
            traversableAgain:
              type: boolean
          items:
            $ref: '#/components/schemas/Schema'
        datasetSource:
          $ref: '#/components/schemas/datasetSource'
        filters:
          type: array
          properties:
            empty:
              type: boolean
            traversableAgain:
              type: boolean
          items:
            $ref: '#/components/schemas/Filter'
        groups:
          type: array
          properties:
            empty:
              type: boolean
            traversableAgain:
              type: boolean
          items:
            $ref: '#/components/schemas/Filter'
        id:
          type: string
        version:
          type: string
        token:
          type: string
        mappings:
          $ref: '#/components/schemas/Mapping'
        organization:
          type: string
        schedule:
          $ref: '#/components/schemas/Schedule'
    ActionPerformedRenderedMetricsAS:
      required:
        - code
        - data
        - status
      type: object
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/MetricsAnalysis'
    ManagedDatasetsInfo:
      required:
        - CreationTime
        - DatasetDescription
        - DatasetId
        - DatasetName
      type: object
      properties:
        DatasetId:
          type: string
        DatasetName:
          type: string
        DatasetDescription:
          type: string
        CreationTime:
          type: integer
          format: int64
    UnManageDataSetInfoStored:
      required:
        - Annotation
        - CreationTme
        - DatasetId
        - DatasetName
        - Organization
        - OriginalDatasetPath
      type: object
      properties:
        DatasetId:
          type: string
        DatasetName:
          type: string
        Annotation:
          type: string
        OriginalDatasetPath:
          type: string
        Organization:
          type: string
        CreationTme:
          type: integer
          format: int64
    Mapping:
      type: object
      properties:
        activity:
          type: string
        caseId:
          type: string
        endTime:
          type: string
        otherAttributes:
          type: string
        requester:
          type: string
        resource:
          type: string
        resourceGroup:
          type: string
        scheduledEnd:
          type: string
        scheduledStart:
          type: string
        startTime:
          type: string
    Filter:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        category:
          type: string
        values:
          type: array
          properties:
            empty:
              type: boolean
            traversableAgain:
              type: boolean
          items:
            type: string
        includeEmpty:
          type: object
    ActionPerformedLoginValidate:
      required:
        - code
        - orgId
        - status
      type: object
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        orgId:
          type: string
    FileUpload:
      required:
        - csv
        - encoding
        - escapeChar
        - newline
        - quoteChar
        - separator
      type: object
      properties:
        newline:
          type: string
        separator:
          type: string
        quoteChar:
          type: string
        encoding:
          type: string
        escapeChar:
          type: string
        csv:
          type: string
          format: binary
    ActionPerformedGetAllAnalysis:
      required:
        - code
        - data
        - message
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        data:
          required:
            - empty
          type: array
          properties:
            empty:
              type: boolean
            traversableAgain:
              type: boolean
          items:
            $ref: '#/components/schemas/AnalysisList'
    ActionPerformedFiles:
      required:
        - code
        - file
        - message
      type: object
      properties:
        message:
          type: string
        file:
          type: string
        code:
          type: integer
          format: int32
    S3Content:
      required:
        - list
      type: object
      properties:
        list:
          required:
            - empty
          type: array
          properties:
            empty:
              type: boolean
            traversableAgain:
              type: boolean
          items:
            $ref: '#/components/schemas/ListBucket'
    ActionPerformedRenderedMetrics:
      required:
        - code
        - data
        - status
      type: object
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/MetricsDS'
    tdvJob:
      required:
        - DatasetName
        - DatasetSource
        - Organization
      type: object
      properties:
        DataSourcePath:
          type: string
        DataSetViewPath:
          type: string
        PublishedDataSourcePath:
          type: string
        DatasetID:
          type: string
        DatasetName:
          type: string
        DatasetDescription:
          type: string
        DatasetSource:
          $ref: '#/components/schemas/DatasetSourceTdv'
        Organization:
          type: string
        CreationTime:
          type: object
    ListPublishedViews:
      required:
        - empty
      type: array
      properties:
        empty:
          type: boolean
        traversableAgain:
          type: boolean
      items:
        $ref: '#/components/schemas/PublishedViews'
    ActionPerformedTDVCreate:
      required:
        - code
        - dataSetId
        - dataSourceName
        - datasource
        - dataview
        - message
        - publishedview
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        datasource:
          type: string
        dataview:
          type: string
        publishedview:
          type: string
        dataSourceName:
          type: string
        dataSetId:
          type: string
    MetricsAnalysis:
      required:
        - Metrics
        - Organisation
        - analysisID
        - durationDB
        - durationJob
        - jobName
        - timeStamp
      type: object
      properties:
        Organisation:
          type: string
        jobName:
          type: string
        analysisID:
          type: string
        Metrics:
          $ref: '#/components/schemas/analysisMetrics'
        durationDB:
          type: integer
          format: int64
        durationJob:
          type: integer
          format: int64
        timeStamp:
          type: integer
          format: int64
    FileUploadUI:
      required:
        - file
      type: object
      properties:
        file:
          type: string
          format: binary
    profiles:
      required:
        - ApproxDistinctValues
      type: object
      properties:
        ColumnName:
          type: string
        Completeness:
          type: string
        ApproxDistinctValues:
          type: integer
          format: int32
        DataType:
          type: string
        StatsMin:
          type: string
        StatsMax:
          type: string
        StatsMean:
          type: string
        StatsStdDev:
          type: string
        RecordCount:
          type: string
        UniqueValues:
          type: string
        EmptyStrings:
          type: string
        NullValues:
          type: string
        PercentFill:
          type: string
        PercentNumeric:
          type: string
        MaxLength:
          type: string
    MetricsDS:
      required:
        - DatasetID
        - DuplicatedRows
        - DurationDB
        - DurationJob
        - JobName
        - Metrics
        - Organisation
        - TimeStamp
        - TotalRows
      type: object
      properties:
        Organisation:
          type: string
        JobName:
          type: string
        DatasetID:
          type: string
        Metrics:
          required:
            - empty
          type: array
          properties:
            empty:
              type: boolean
            traversableAgain:
              type: boolean
          items:
            $ref: '#/components/schemas/profiles'
        DurationDB:
          type: integer
          format: int64
        DurationJob:
          type: integer
          format: int64
        TotalRows:
          type: integer
          format: int64
        DuplicatedRows:
          type: integer
          format: int64
        TimeStamp:
          type: integer
          format: int64
    ListSchemaTdv:
      required:
        - empty
      type: array
      properties:
        empty:
          type: boolean
        traversableAgain:
          type: boolean
      items:
        $ref: '#/components/schemas/SchemaTdv'
    ActionPerformedDeleteMetrics:
      required:
        - code
        - orgId
        - status
      type: object
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        orgId:
          type: string
    ActionPerformedSchedules:
      required:
        - code
        - jobName
        - message
        - status
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        status:
          type: string
        jobName:
          type: string
    ListListBucket:
      required:
        - empty
      type: array
      properties:
        empty:
          type: boolean
        traversableAgain:
          type: boolean
      items:
        $ref: '#/components/schemas/ListBucket'
    ActionPerformedDetailsAssetsUnManaged:
      required:
        - code
        - message
        - tdv
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        tdv:
          $ref: '#/components/schemas/UnManageDataSetInfoStored'
    ListSchema:
      required:
        - empty
      type: array
      properties:
        empty:
          type: boolean
        traversableAgain:
          type: boolean
      items:
        $ref: '#/components/schemas/Schema'
    ActionPerformedFilesUrl:
      required:
        - code
        - message
        - url
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        url:
          type: string
    LoginCredentials:
      required:
        - credentials
      type: object
      properties:
        credentials:
          type: string
    ActionPerformedCopyUnManaged:
      required:
        - DatasetId
        - code
        - message
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        DatasetId:
          type: string
    ListSchemaPreview:
      required:
        - empty
      type: array
      properties:
        empty:
          type: boolean
        traversableAgain:
          type: boolean
      items:
        $ref: '#/components/schemas/schemaPreview'
    ActionPerformedSparkSingle:
      required:
        - code
        - jobName
        - message
        - status
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        status:
          type: string
        jobName:
          type: string
    VariantsTable:
      type: object
      properties:
        variant:
          type: string
        variantId:
          type: object
        frequency:
          type: object
        occurencesPercent:
          type: object
        analysisId:
          type: string
        bucketedfrequency:
          type: object
        bucketedfrequencyLabel:
          type: string
    DatasetSourceTdv:
      required:
        - FileName
        - FilePath
      type: object
      properties:
        DatasourceType:
          type: string
        Encoding:
          type: string
        EscapeChar:
          type: string
        NewLine:
          type: string
        FileName:
          type: string
        FilePath:
          type: string
        QuoteChar:
          type: string
        CommentsChar:
          type: string
        Separator:
          type: string
        Headers:
          type: string
    ActionPerformedUpdate:
      required:
        - DatasetId
        - code
        - message
        - resource
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        resource:
          type: string
        DatasetId:
          type: string
    ListProfiles:
      required:
        - empty
      type: array
      properties:
        empty:
          type: boolean
        traversableAgain:
          type: boolean
      items:
        $ref: '#/components/schemas/profiles'
    UnManageDataSetCopy:
      required:
        - DatasetName
        - DatasetPath
        - Organization
      type: object
      properties:
        DatasetName:
          type: string
        Annotation:
          type: string
        DatasetPath:
          type: string
        Organization:
          type: string
    ActionPerformedUIAssets:
      required:
        - code
        - file
        - message
      type: object
      properties:
        message:
          type: string
        file:
          type: string
        code:
          type: integer
          format: int32
    ActionPerformedPreview:
      required:
        - code
        - jobId
        - message
        - status
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        status:
          type: string
        jobId:
          type: string
    ListFilter:
      type: array
      properties:
        empty:
          type: boolean
        traversableAgain:
          type: boolean
      items:
        $ref: '#/components/schemas/Filter'
    RedisContent:
      required:
        - code
        - list
        - message
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        list:
          required:
            - empty
          type: array
          properties:
            empty:
              type: boolean
            traversableAgain:
              type: boolean
          items:
            $ref: '#/components/schemas/redisFileInfo'
    ListRedisFileInfo:
      required:
        - empty
      type: array
      properties:
        empty:
          type: boolean
        traversableAgain:
          type: boolean
      items:
        $ref: '#/components/schemas/redisFileInfo'
    ActionPerformedAllManagedDatasets:
      required:
        - ManagedDatasets
        - code
        - message
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        ManagedDatasets:
          required:
            - empty
          type: array
          properties:
            empty:
              type: boolean
            traversableAgain:
              type: boolean
          items:
            $ref: '#/components/schemas/ManagedDatasetsInfo'
    TDV:
      required:
        - schema
      type: object
      properties:
        schema:
          required:
            - empty
          type: array
          properties:
            empty:
              type: boolean
            traversableAgain:
              type: boolean
          items:
            $ref: '#/components/schemas/SchemaTdv'
    analysisMetrics:
      required:
        - avgActivities
        - avgResourcesPerCase
        - avgTime
        - maxActivities
        - maxResourcesPerCase
        - maxTime
        - maxTimestamp
        - medianTime
        - minActivities
        - minResourcesPerCase
        - minTime
        - minTimestamp
        - numActivities
        - numCases
        - numEvents
        - numResources
        - numVariants
      type: object
      properties:
        numEvents:
          type: number
          format: double
        numCases:
          type: number
          format: double
        numActivities:
          type: number
          format: double
        avgTime:
          type: number
          format: double
        medianTime:
          type: number
          format: double
        minTime:
          type: number
          format: double
        maxTime:
          type: number
          format: double
        numVariants:
          type: number
          format: double
        maxActivities:
          type: number
          format: double
        minActivities:
          type: number
          format: double
        avgActivities:
          type: number
          format: double
        numResources:
          type: number
          format: double
        avgResourcesPerCase:
          type: number
          format: double
        maxResourcesPerCase:
          type: number
          format: double
        minResourcesPerCase:
          type: number
          format: double
        minTimestamp:
          type: string
        maxTimestamp:
          type: string
    ListVariantsTable:
      required:
        - empty
      type: array
      properties:
        empty:
          type: boolean
        traversableAgain:
          type: boolean
      items:
        $ref: '#/components/schemas/VariantsTable'
    ActionPerformedStoreMetrics:
      required:
        - code
        - orgId
        - status
      type: object
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        orgId:
          type: string
    ActionPerformedCheck:
      required:
        - Data
        - code
      type: object
      properties:
        Data:
          type: string
        code:
          type: integer
          format: int32
    ListActivitiesTable:
      required:
        - empty
      type: array
      properties:
        empty:
          type: boolean
        traversableAgain:
          type: boolean
      items:
        $ref: '#/components/schemas/ActivitiesTable'
    Schedule:
      required:
        - isSchedule
        - schedule
      type: object
      properties:
        schedule:
          type: string
        isSchedule:
          type: string
    ActionPerformedDeleteAnalysis:
      required:
        - NumRows
        - code
        - message
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        NumRows:
          type: integer
          format: int32
    ActionPerformedGetData:
      required:
        - Data
        - code
      type: object
      properties:
        Data:
          type: string
        code:
          type: integer
          format: int32
    ListAnalysisList:
      required:
        - empty
      type: array
      properties:
        empty:
          type: boolean
        traversableAgain:
          type: boolean
      items:
        $ref: '#/components/schemas/AnalysisList'
    ActionPerformedActivities:
      required:
        - code
        - data
        - message
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        data:
          required:
            - empty
          type: array
          properties:
            empty:
              type: boolean
            traversableAgain:
              type: boolean
          items:
            $ref: '#/components/schemas/ActivitiesTable'
    datasetSource:
      required:
        - source
      type: object
      properties:
        source:
          type: string
    AnalysisList:
      type: object
      properties:
        analysisId:
          type: string
    schemaPreview:
      type: object
      properties:
        format:
          type: string
        columnName:
          type: string
        dataType:
          type: string
    ActionPerformedDeleted:
      required:
        - code
        - message
        - resource
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        resource:
          type: string
    ActionPerformedDataSchema:
      required:
        - code
        - message
        - tdv
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        tdv:
          $ref: '#/components/schemas/TDV'
    previewConfigFile:
      required:
        - DatasetId
        - Organization
        - Token
      type: object
      properties:
        Token:
          type: string
        Organization:
          type: string
        DatasetId:
          type: string
        schema:
          required:
            - empty
          type: array
          properties:
            empty:
              type: boolean
            traversableAgain:
              type: boolean
          items:
            $ref: '#/components/schemas/schemaPreview'
    PublishedViews:
      required:
        - Annotation
        - CreationTime
        - DatasetName
        - DatasetPath
        - ModificationTime
      type: object
      properties:
        DatasetName:
          type: string
        Annotation:
          type: string
        DatasetPath:
          type: string
        CreationTime:
          type: integer
          format: int64
        ModificationTime:
          type: integer
          format: int64
    ActionPerformedUnmanagedPublishedViews:
      required:
        - Datasets
        - code
        - message
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        Datasets:
          required:
            - empty
          type: array
          properties:
            empty:
              type: boolean
            traversableAgain:
              type: boolean
          items:
            $ref: '#/components/schemas/PublishedViews'
    DatasetListItem:
      type: object
      properties:
        datasetid:
          type: string
          description: The dataset id assigned by Process mining process.
        name:
          type: string
          description: The name of the dataset
        fileName:
          type: string
          description: The csv file name.
        filePath:
          type: string
          description: The csv full path.
        description:
          type: string
          description: The dataset description.
        createdDate:
          type: integer
          description: The dataset created datetime.
        status:
          type: string
          description: The final status of dataset preview which is returned by process mining.
          example: COMPLETED
        lastPreviewDate:
          type: integer
          description: The datetime of last data preview.
        type:
          type: string
          description: The type of the dataset.
          example: csv
        message:
          type: string
          description: The error message.
    Dataset:
      type: object
      properties:
        Dataset_Id:
          type: string
          description: The dataset id.
        Dataset_Name:
          type: string
          description: The name of the dataset
        Dataset_Description:
          type: string
          description: The description of the dataset
        schema:
          type: array
          description: The columns of the csv file
          items:
            $ref: '#/components/schemas/Schema'
        Dataset_Source:
          type: object
          description: The dataset source properties.
          $ref: '#/components/schemas/DatasetSource'
        createdDate:
          type: integer
          description: The dataset created datetime.
        updatedDate:
          type: integer
          description: The dateset updated datetime.
        status:
          type: string
          description: The final data preview status
        lastPreviewDate:
          type: integer
          description: The last data preview datetime.
        PublishedView:
          type: string
          description: The published view data source path.
        previewStatus:
          type: object
          description: The latest preview status received from process minning
          $ref: '#/components/schemas/PreviewStatus'
        TdvView:
          type: object
          description: The tdv entry of dataset if it is created from a tdv view.
          $ref: '#/components/schemas/PublishedViews'
        CsvFile:
          type: object
          description: The csv file object if it is create from an unmanaged csv file
          $ref: '#/components/schemas/RedisFileInfo'
        type:
          type: string
          description: The type of dataset
          example: csv
        csvMethod:
          type: string
          description: The method of csv file is set.
          example: file
        deleted:
          type: boolean
          description: Whether the dataset is marked as deleted.
    DatasetSource:
      type: object
      properties:
        DatasourceType:
          type: string
          description: The data source type
          example: File-Delimited
        Encoding:
          type: string
          description: The charset encoding of the data source file
          example: UTF-8
        FileEscapeChar:
          type: string
          description: The escape char of the data source file
        FileHeaders:
          type: boolean
          description: Whether the data source csv file has column headers
        FileName:
          type: string
          description: The file name of the data source csv file.
        FilePath:
          type: string
          description: The S3 url of data source file
        FileQuoteChar:
          type: string
          description: The quote char of the data source file
        FileSeparator:
          type: string
          description: The separator char to parse the data source file.
      required:
        - Encoding
    SchemaCore:
      type: object
      properties:
        key:
          type: string
          description: The column header name of the csv file.
        type:
          type: string
          description: The value type of the column, such timestamp, numeric, string, int
          example: timestamp
        format:
          type: string
          description: The timestamp format of the value. It's 'None' if the type is not timestamp
          example: mm/dd/yyyy HH:MM
        featureType:
          type: string
          description: The feature type. It's None if no featureType is set.
        importance:
          type: string
          description: The property to describe how important the column is in process mining
          example: Low
        id:
          type: integer
          description: The asset id of the column in TIBCO Cloud Metadata.
    PreviewColumn:
      type: object
      properties:
        position:
          type: number
        columnName:
          type: string
        type:
          type: string
    PreviewRow:
      type: object
      example: '[{ "case Spend area text": "Specialty Resins", "event org resource": "user_121", "event concept name": "Create Purchase Order Item", "case Item Category": "3-way match, invoice before GR", "event Cumulative net worth": "55694.0", "case GR-Based Inv Verif": false, "case Sub spend area text": "Area", "case Purchasing Document": 00000000, "case Name": "vendor_0252", "event time timestamp": "16-07-2018 11:15:00.000", "case Company": "companyID_0000", "case Goods Receipt": true, "case Spend classification text": "PR", "case Item": 10, "event User": "user_121", "eventID ": 08324823428342834, "case Item Type": "Standard", "case Document Type": "Standard PO", "case Purch Doc Category name": "Purchase order", "case Vendor": "vendorID_0259", "case concept:name": "0342842834h2834", "case Source": "sourceSystemID_0000" }]'
    Preview:
      type: object
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/PreviewColumn'
        data:
          type: array
          items:
            $ref: '#/components/schemas/PreviewRow'
    PreviewStatus:
      type: object
      properties:
        Organisation:
          type: string
          description: The orgId which is the subscription id in CIC.
        JobName:
          type: string
          description: The spark job name
        DatasetID:
          type: string
          description: The dataset id.
        Message:
          type: string
          description: The Message describing the process mining status.
        Level:
          type: string
          description: The log level
          example: INFO
        Progression:
          type: integer
          description: The progress of preview. It's a number from 0 to 100. 0 means error. 100 means the preview process is completed.
        TimeStamp:
          type: integer
          description: The timestamp of the status.
    CheckExist:
      type: object
      properties:
        Dataset_Id:
          type: string
          description: The dataset id
        Dataset_Name:
          type: string
          description: The dataset name
      required:
        - Dataset_Id
    CheckExistResult:
      type: object
      properties:
        exist:
          type: boolean
          description: It's true is the dataset of the name is found, otherwise return false.
    DatasetUpdated:
      type: object
      properties:
        status:
          type: string
          description: The status returned from Redis server
        datasetId:
          type: string
          description: The dataset id.
    PublishedViewsCore:
      required:
        - Annotation
        - CreationTime
        - DatasetName
        - DatasetPath
        - ModificationTime
      type: object
      properties:
        DatasetName:
          type: string
        Annotation:
          type: string
        DatasetPath:
          type: string
        CreationTime:
          type: integer
        ModificationTime:
          type: integer
    RedisFileInfo:
      required:
        - ContentType
        - Encoding
        - EscapeChar
        - FileLocation
        - FileSize
        - LastModified
        - OriginalEncoding
        - OriginalFilename
        - OriginalNewLine
        - QuoteChar
        - Separator
        - newline
      type: object
      description: The copy of the backend redisFileInfo model. See https://discover.labs.tibcocloud.com/backswagger#/Files%20Operations/getRouteFileV2
      properties:
        ContentType:
          type: string
        LastModified:
          type: string
        OriginalFilename:
          type: string
        OriginalEncoding:
          type: string
        FileSize:
          type: string
        newline:
          type: string
        EscapeChar:
          type: string
        QuoteChar:
          type: string
        Separator:
          type: string
        Encoding:
          type: string
        OriginalNewLine:
          type: string
        FileLocation:
          type: string
    CsvFile:
      type: object
      description: The csv file info returned from backend and whether it is used by dataset.
      properties:
        redisFileInfo:
          $ref: '#/components/schemas/RedisFileInfo'
        beingUsed:
          type: boolean
          description: Whether it is used by any dataset.
    FileUploadCore:
      required:
        - csv
        - encoding
        - escapeChar
        - newline
        - quoteChar
        - separator
      type: object
      properties:
        newline:
          type: string
        separator:
          type: string
        quoteChar:
          type: string
        encoding:
          type: string
        escapeChar:
          type: string
        csv:
          type: string
          format: binary
    ActionPerformedFilesCore:
      required:
        - code
        - file
        - message
      type: object
      properties:
        message:
          type: string
        file:
          type: string
        code:
          type: integer
    Analysis:
      type: object
      properties:
        id:
          description: Analysis ID
          type: string
          example: dc1f7291-bb89-4974-98e8-6ab9303ceb03-0
        data:
          $ref: '#/components/schemas/AnalysisData'
        metadata:
          $ref: '#/components/schemas/AnalysisMetadata'
        metrics:
          $ref: '#/components/schemas/AnalysisMetrics'
        actions:
          type: array
          items:
            type: string
      required:
        - data
        - metadata
        - actions
    AnalysisData:
      type: object
      properties:
        name:
          description: TBD
          type: string
          example: null
        description:
          description: TBD
          type: string
          example: null
        datasetId:
          description: TBD
          type: string
          example: null
        templateId:
          description: TBD
          type: string
          example: null
        templateLabel:
          description: Template label
          type: string
        mappings:
          $ref: '#/components/schemas/Mapping'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/TypeValue'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/TypeValue'
        progress:
          description: TBD
          type: number
          example: 35
      required:
        - name
        - description
        - datasetId
        - mappings
    AnalysisRequest:
      type: object
      properties:
        name:
          description: TBD
          type: string
          example: null
        description:
          description: TBD
          type: string
          example: null
        datasetId:
          description: TBD
          type: string
          example: null
        mappings:
          $ref: '#/components/schemas/Mapping'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/TypeValue'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/TypeValue'
      required:
        - name
        - description
        - datasetId
        - mappings
    TypeValue:
      type: object
      properties:
        name:
          description: TBD
          type: string
        description:
          description: TBD
          type: string
        category:
          description: TBD
          type: string
        values:
          description: TBD
          type: array
          items:
            type: string
        includeEmpty:
          description: TBD
          type: boolean
      required:
        - type
        - value
    MappingCore:
      type: object
      properties:
        caseId:
          description: TBD
          type: string
          example: PAM-000003
        activity:
          description: TBD
          type: string
          example: null
        startTime:
          description: TBD
          type: string
          example: null
        endTime:
          description: TBD
          type: string
          example: null
        scheduledStart:
          description: TBD
          type: string
          example: null
        scheduledEnd:
          description: TBD
          type: string
          example: null
        requester:
          description: TBD
          type: string
          example: null
        resource:
          description: TBD
          type: string
          example: null
        resourceGroup:
          description: TBD
          type: string
          example: null
        otherAttributes:
          description: TBD
          type: boolean
          example: null
      required:
        - caseId
        - activity
        - startTime
    AnalysisStatus:
      type: object
      properties:
        organisation:
          description: TBD
          type: string
          example: null
        jobName:
          description: TBD
          type: string
          example: null
        analysisId:
          description: TBD
          type: string
          example: null
        message:
          description: TBD
          type: string
          example: null
        level:
          description: TBD
          type: string
          enum:
            - ERROR
            - INFO
          example: INFO
        progression:
          description: TBD
          type: number
          example: 35
        timestamp:
          description: TBD
          type: string
          example: null
    AnalysisMetadata:
      type: object
      properties:
        state:
          description: TBD
          type: string
          example: null
        message:
          description: TBD
          type: string
          example: null
        createdBy:
          description: TBD
          type: string
          example: null
        createdOn:
          description: TBD
          type: string
          example: null
        modifiedBy:
          description: TBD
          type: string
          example: null
        modifiedOn:
          description: TBD
          type: string
          example: null
        lockedBy:
          description: TBD
          type: string
          example: null
        lockedOn:
          description: TBD
          type: string
          example: null
    AnalysisMetrics:
      type: object
      properties:
        numEvents:
          type: number
        numCases:
          type: number
        numActivities:
          type: number
        numVariants:
          type: number
        numResources:
          type: number
        avgTime:
          type: number
        medianTime:
          type: number
        minTime:
          type: number
        maxTime:
          type: number
        avgActivities:
          type: number
        minActivities:
          type: number
        maxActivities:
          type: number
        avgResourcesPerCases:
          type: number
        minResourcesPerCases:
          type: number
        maxResourcesPerCases:
          type: number
        minTimestamp:
          type: string
          format: date-time
        maxTimestamp:
          type: string
          format: date-time
    TemplateRequest:
      type: object
      properties:
        template:
          $ref: '#/components/schemas/Template'
        visualisation:
          $ref: '#/components/schemas/NewVisualisationInformation'
      required:
        - template
    Template:
      type: object
      properties:
        id:
          description: Unique Identifier for a Template
          type: string
          example: 1
        name:
          description: Template name
          type: string
          example: Healthcare
        type:
          description: The type of template. General and Vertical are provided and can't be edited. User defined templates can be modified.
          type: string
          enum:
            - General
            - Vertical
            - User defined
          example: Vertical
        description:
          description: HTML enabled field to describe a template on a card.
          type: string
          example: This template is suited to discover how your processes are executed.
        splash:
          description: Location of an Icon or Image to display on the card.
          type: string
          example: null
        spotfireLocation:
          description: Location of the Spotfire Report to use for this template
          type: string
          example: /Teams/01DZBGCE4XGN899ZQ7NS238VK3/Discover/main/project_discover_latest
        menuConfig:
          description: Set of menu entries that are shown for this template
          type: array
          items:
            $ref: '#/components/schemas/TemplateMenuConfig'
        filters:
          description: Set of filters entries that apply to this template
          type: array
          items:
            $ref: '#/components/schemas/TemplateFilterConfig'
        enabled:
          description: Determines if a template is enabled or disabled (No UI implementation for this yet)
          type: boolean
        icon:
          description: Location of the Icon of the Template
          type: string
        marking:
          $ref: '#/components/schemas/TemplateMarkingConfig'
        previewParameters:
          description: TBD
          type: string
      required:
        - name
        - type
    TemplateMenuConfig:
      type: object
      properties:
        id:
          description: Exact name of the Spotfire Tab to Use
          type: string
        label:
          description: Menu Label
          type: string
        icon:
          description: Location of the icon of the menu item (can be icon locator from the UXPL Components (for example; pl-icon-home)
          type: string
        enabled:
          description: Indicator if this menu item is shown or not
          type: boolean
        isDefault:
          description: Set the page as a default when loading a report
          type: boolean
        child:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMenuConfig'
      required:
        - id
        - label
    TemplateFilterConfig:
      type: object
      properties:
        id:
          description: Exact name of the Spotfire Tab to Use
          type: string
        label:
          description: Menu Label
          type: string
        enabled:
          description: Indicator if this menu item is shown or not
          type: boolean
        isDefault:
          description: Set the page as a default when loading a report
          type: boolean
      required:
        - id
        - label
    TemplateMarkingConfig:
      type: object
      properties:
        listenOnMarking:
          description: TBD
          type: string
        casesSelector:
          description: TBD
          type: string
        variantSelector:
          description: TBD
          type: string
    Visualisation:
      type: object
      properties:
        Id:
          description: TBD
          type: string
        Title:
          description: TBD
          type: string
        Description:
          description: TBD
          type: string
        CreatedDate:
          description: TBD
          type: string
        CreatedTimestamp:
          description: TBD
          type: number
        CreatedByName:
          description: TBD
          type: string
        ModifiedDate:
          description: TBD
          type: string
        ModifiedTimestamp:
          description: TBD
          type: number
        ModifiedByName:
          description: TBD
          type: string
        IsFolder:
          description: TBD
          type: boolean
        ItemType:
          description: TBD
          type: string
        Size:
          description: TBD
          type: number
        Path:
          description: TBD
          type: string
        ParentId:
          description: TBD
          type: string
        Permissions:
          description: TBD
          type: string
        ParentPermissions:
          description: TBD
          type: string
        HasPreview:
          description: TBD
          type: boolean
        DisplayPath:
          description: TBD
          type: string
    NewVisualisationInformation:
      type: object
      properties:
        sourceId:
          type: string
        destinationFolderId:
          type: string
    DiscoverConfiguration:
      type: object
      properties:
        general:
          $ref: '#/components/schemas/GeneralInformation'
        landingPage:
          $ref: '#/components/schemas/LandingPage'
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        formats:
          type: array
          items:
            $ref: '#/components/schemas/FieldFormats'
        automap:
          type: array
          items:
            $ref: '#/components/schemas/Automapping'
        investigations:
          $ref: '#/components/schemas/Investigations'
        analytics:
          $ref: '#/components/schemas/Analytics'
    GeneralInformation:
      type: object
      properties:
        applicationTitle:
          type: string
        documentationUrl:
          type: string
    LandingPage:
      type: object
      properties:
        title:
          type: string
        subtitle:
          type: string
        backgroundURL:
          type: string
        verticalPadding:
          type: number
        actionButtons:
          type: array
          items:
            $ref: '#/components/schemas/LandingPageButtons'
        highlights:
          type: array
          items:
            $ref: '#/components/schemas/LandingPageHightlight'
    LandingPageButtons:
      type: object
      properties:
        text:
          type: string
        route:
          type: string
    LandingPageHightlight:
      type: object
      properties:
        title:
          type: string
        iconURL:
          type: string
        content:
          type: string
    Message:
      type: object
      properties:
        id:
          type: string
        scope:
          type: string
        message:
          type: string
        persistClose:
          type: boolean
    FieldFormats:
      type: object
      properties:
        fieldName:
          type: string
        values:
          type: array
          items:
            type: string
    Automapping:
      type: object
      properties:
        fieldName:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/AutomapingField'
        threshold:
          type: number
    AutomapingField:
      type: object
      properties:
        word:
          type: string
        occurrence:
          type: number
    Investigations:
      type: object
      properties:
        numberApplications:
          type: number
        applications:
          type: array
          items:
            $ref: '#/components/schemas/InvestigationApplication'
    InvestigationApplication:
      type: object
      properties:
        customTitle:
          type: string
        applicationId:
          type: string
        creatorId:
          type: string
        creatorData:
          type: array
          items:
            $ref: '#/components/schemas/InvestigationField'
        headerFields:
          type: array
          items:
            $ref: '#/components/schemas/InvestigationField'
        detailTitle:
          $ref: '#/components/schemas/InvestigationField'
        showMilestone:
          type: boolean
        allowMultiple:
          type: boolean
        detailFields:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/InvestigationField'
        states:
          type: array
          items:
            $ref: '#/components/schemas/InvestigationState'
    InvestigationField:
      type: object
      properties:
        label:
          type: string
        field:
          type: string
        format:
          type: string
      required:
        - label
        - field
    InvestigationState:
      type: object
      properties:
        name:
          type: string
        color:
          type: string
        icon:
          type: string
    Analytics:
      type: object
      properties:
        previewLocation:
          type: string
        server:
          type: string
        previewTableName:
          type: string
        customUserFolder:
          type: string
    InvestigationDetails:
      type: object
      properties:
        id:
          type: string
        data:
          description: Case data
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/InvestigationMetadata'
    InvestigationMetadata:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    InvestigationActions:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        formData:
          type: string
    Application:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
    InvestigationTrigger:
      type: object
      properties:
        label:
          type: string
        value:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/InvestigationTriggerAttributes'
    InvestigationTriggerAttributes:
      type: object
      properties:
        label:
          type: string
        value:
          type: string
    InvestigationApplicationDefinition:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/InvestigationField'
        creators:
          type: array
          items:
            $ref: '#/components/schemas/InvestigationTrigger'
        states:
          type: array
          items:
            $ref: '#/components/schemas/InvestigationState'
    InvestigationCreateRequest:
      type: object
      properties:
        type:
          type: string
        ids:
          type: string
        details:
          type: string
        summary:
          type: string
        analysisId:
          type: string
        analysisName:
          type: string
        templateId:
          type: string
        templateName:
          type: string
    InvestigationCreateResponse:
      type: object
      properties:
        id:
          type: string
    WhoAmI:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        subscriptionId:
          type: string
        isUser:
          type: boolean
        isAdmin:
          type: boolean
        isAnalyst:
          type: boolean
        isResolver:
          type: boolean
