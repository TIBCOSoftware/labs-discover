{
    "imports": [
        "github.com/project-flogo/flow",
        "github.com/TIBCOSoftware/TCSTK-GOlang/liveapps/activity/getcases",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/mapper",
        "git.tibco.com/git/product/flogo-messaging.git/Messaging/activity/tcmpublisher",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/project-flogo/contrib/activity/error",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/sleep",
        "github.com/TIBCOSoftware/TCSTK-GOlang/liveapps/activity/runaction",
        "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/activity/delete",
        "github.com/TIBCOSoftware/TCSTK-GOlang/tibcocloud/activity/authenticate",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/parsejson",
        "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/activity/update",
        "git.tibco.com/git/product/flogo-messaging.git/Messaging/trigger/tcmtrigger",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/trigger/rest",
        "github.com/project-flogo/contrib/function/coerce",
        "github.com/project-flogo/contrib/function/string",
        "github.com/project-flogo/contrib/function/datetime",
        "github.com/project-flogo/contrib/function/array",
        "git.tibco.com/git/product/flogo-messaging.git/Messaging/connector/tcm",
        "git.tibco.com/git/product/ipaas/wi-postgres.git/src/app/PostgreSQL/connector/connection"
    ],
    "name": "discover_backend_service",
    "description": "Integration Services For Project Discover",
    "version": "3.11.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "triggers": [
        {
            "ref": "#tcmtrigger",
            "name": "tibco-messaging-tcm-trigger",
            "description": "This trigger receives a message from TIBCO Cloud Messaging service",
            "settings": {},
            "id": "Subscriber4BackendEvents",
            "handlers": [
                {
                    "description": "Listen to events from backend, and move case accordingly",
                    "settings": {
                        "tcmConnection": "conn://da68fbc0-2d7c-11eb-87f3-c963288d3c2a",
                        "durableSub": true,
                        "durableName": "=$property[\"MessagingDurableKeyTCM\"]",
                        "durableType": "Standard",
                        "ackMode": "Auto",
                        "destination": "=$property[\"MessagingDurableKeyTCM\"]"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:OrchestratorToLiveApps"
                        },
                        "input": {
                            "message": {
                                "mapping": {
                                    "organisation": "=$.message.organisation",
                                    "status": "=$.message.status",
                                    "message": "=$.message.message",
                                    "progress": "=$.message.progress",
                                    "timestamp": "=$.message.timestamp",
                                    "analysis_id": "=$.message.analysis_id",
                                    "caseRef": "=$.message.caseRef"
                                }
                            }
                        }
                    },
                    "schemas": {
                        "output": {
                            "message": "schema://tcmBackendSchema"
                        }
                    },
                    "name": "OrchestratorToLiveApps"
                }
            ]
        },
        {
            "ref": "#rest",
            "name": "tibco-wi-rest",
            "description": "Simple REST Trigger",
            "settings": {
                "port": 9999,
                "APISpecUpdate": false,
                "swagger": "",
                "secureConnection": false,
                "serverKey": "",
                "caCertificate": ""
            },
            "id": "REST_Trigger_to_TCM",
            "handlers": [
                {
                    "description": "Get an analysis ID from a given subscription in LiveApps, retrieve all necessary information and push it to TCM",
                    "settings": {
                        "Method": "GET",
                        "Path": "/submit/{id}",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:startCaseToOrchestrator"
                        },
                        "input": {
                            "pathParams": {
                                "mapping": {
                                    "id": "=$.pathParams.id"
                                }
                            },
                            "headers": "=$.headers"
                        },
                        "output": {
                            "code": 200,
                            "data": {
                                "mapping": {
                                    "code": "=$.code",
                                    "message": "=$.message"
                                }
                            }
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"code\":200,\n    \"message\":\"string\"\n}"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "pathParams": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"id\",\"type\":\"string\"}]"
                            },
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            }
                        }
                    },
                    "name": "startCaseToOrchestrator"
                },
                {
                    "description": "listen event from UI and update Database",
                    "settings": {
                        "Method": "POST",
                        "Path": "/update",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:REST_UI_TO_TCM"
                        },
                        "input": {
                            "id": "=$.body.id",
                            "type": "=$.body.type",
                            "state": "=$.body.state"
                        },
                        "output": {
                            "code": "=$.code",
                            "data": {
                                "mapping": {
                                    "code": "=$.code",
                                    "analysis_id": "=$.analysis_id",
                                    "status": "=$.status"
                                }
                            }
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"code\": {\n            \"type\": \"number\"\n        },\n        \"analysis_id\": {\n            \"type\": \"string\"\n        },\n        \"status\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"code\": {\n            \"type\": \"number\"\n        },\n        \"analysis_id\": {\n            \"type\": \"string\"\n        },\n        \"status\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\" : {\n            \"type\":\"string\"\n        }, \n        \"state\" : {\n            \"type\":\"string\"\n        }\n    }\n}",
                                "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"type\" : {\n            \"type\":\"string\"\n        }, \n        \"state\" : {\n            \"type\":\"string\"\n        }\n    }\n}"
                            }
                        }
                    },
                    "name": "REST_UI_TO_TCM"
                }
            ]
        },
        {
            "ref": "#rest",
            "name": "tibco-wi-rest",
            "description": "Simple REST Trigger",
            "settings": {
                "port": 10000,
                "APISpecUpdate": false,
                "swagger": "",
                "secureConnection": false,
                "serverKey": "",
                "caCertificate": ""
            },
            "id": "HTTP_Purge",
            "handlers": [
                {
                    "description": "Set all start and End activities",
                    "settings": {
                        "Method": "GET",
                        "Path": "/purge/{id}",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:Purge_Data"
                        },
                        "input": {
                            "analysis_id": "=$.pathParams.id"
                        },
                        "output": {
                            "data": {
                                "mapping": {
                                    "code": "=$.Code"
                                }
                            },
                            "code": "=$.Code"
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"number\"}}}",
                                "fe_metadata": "{\n    \"code\":200\n}"
                            },
                            "responseBody": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
                            }
                        },
                        "output": {
                            "pathParams": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"id\",\"type\":\"string\"}]"
                            },
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            }
                        }
                    },
                    "name": "Purge_Data"
                }
            ]
        },
        {
            "ref": "#tcmtrigger",
            "name": "tibco-messaging-tcm-trigger",
            "description": "This trigger receives a message from TIBCO Cloud Messaging service",
            "settings": {},
            "id": "Subscriber4UiEvents",
            "handlers": [
                {
                    "description": "listen event from UI and update Database",
                    "settings": {
                        "tcmConnection": "conn://da68fbc0-2d7c-11eb-87f3-c963288d3c2a",
                        "durableSub": true,
                        "durableName": "=$property[\"MessagingDurableKeyUI\"]",
                        "durableType": "Shared",
                        "ackMode": "Auto",
                        "destination": "=$property[\"MessagingDurableKeyUI\"]",
                        "matcher": [
                            {
                                "Name": "event",
                                "Type": "String",
                                "Value": "discover_actions"
                            }
                        ]
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:TCM_UI_TO_DB"
                        },
                        "input": {
                            "text": "=$.message.text"
                        }
                    },
                    "schemas": {
                        "output": {
                            "message": "schema://tcm"
                        },
                        "settings": {
                            "matcher": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"},\"Value\":{\"type\":\"string\"}}}}",
                                "fe_metadata": "[{\"Name\":\"event\",\"Type\":\"String\",\"Value\":\"discover_actions\"}]"
                            }
                        }
                    },
                    "name": "TCM_UI_TO_DB"
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:startCaseToOrchestrator",
            "data": {
                "name": "startCaseToOrchestrator",
                "description": "Get an analysis ID from a given subscription in LiveApps, retrieve all necessary information and push it to TCM",
                "links": [
                    {
                        "id": 1,
                        "from": "GetCases",
                        "to": "LogMessage1",
                        "type": "expression",
                        "label": "GetCasestoMapper",
                        "value": "$activity[GetCases].getCaseResponseItem[0].caseReference != null"
                    },
                    {
                        "id": 2,
                        "from": "LogMessage1",
                        "to": "Mapper",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "Mapper",
                        "to": "LogMessage",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogMessage",
                        "to": "TCMMessagePublisher",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "TCMMessagePublisher",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "GetCases",
                        "to": "ThrowError",
                        "type": "error",
                        "label": "GetCasestoThrowError"
                    },
                    {
                        "id": 7,
                        "from": "GetCases",
                        "to": "CopyOfThrowError",
                        "type": "expression",
                        "label": "GetCases to CopyOfThrowError",
                        "value": "$activity[GetCases].getCaseResponseItem[0].caseReference == null"
                    }
                ],
                "tasks": [
                    {
                        "id": "GetCases",
                        "name": "GetCases",
                        "description": "Activities created by TIBCO Labs",
                        "activity": {
                            "ref": "#getcases",
                            "settings": {
                                "security": "AccessToken"
                            },
                            "input": {
                                "region": "=$property[\"Auth.region\"]",
                                "accessToken": "=$property[\"Auth.oauth\"]",
                                "sandboxId": "=$property[\"Auth.sandboxID\"]",
                                "filter": "=\"applicationId eq \"+ $property[\"liveapps.discover_analysis_appid\"] +\" and typeId eq 1\"",
                                "select": "",
                                "skip": "",
                                "top": "",
                                "search": "=$flow.pathParams.id",
                                "count": false,
                                "user": ""
                            },
                            "schemas": {
                                "input": {
                                    "cookie": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"tsc\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"tsc\": \"tsc cookie value\", \"domain\": \"domain cookie value\"}"
                                    }
                                },
                                "output": {
                                    "getCaseResponseItem": {
                                        "type": "json",
                                        "value": "{\"$schema\": \"http://json-schema.org/draft-07/schema\",\"$id\": \"http://example.com/example.json\",\"type\": \"array\",\"items\": {\"$id\": \"#/items\",\"type\": \"object\",\"properties\": {\"caseReference\": {\"$id\": \"#/items/properties/caseReference\",\"type\": \"string\"},\"caseData\": {\"$id\": \"#/items/properties/caseData\",\"type\": \"string\"},\"untaggedCasedata\": {\"$id\": \"#/items/properties/untaggedCasedata\",\"type\": \"string\"},\"summary\": {\"$id\": \"#/items/properties/summary\",\"type\": \"string\"},\"metadata\": {\"$id\": \"#/items/properties/metadata\",\"type\": \"object\",\"properties\": {\"createdBy\": {\"$id\": \"#/items/properties/metadata/properties/createdBy\",\"type\": \"string\"},\"creationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/creationTimestamp\",\"type\": \"string\"},\"modifiedBy\": {\"$id\": \"#/items/properties/metadata/properties/modifiedBy\",\"type\": \"string\"},\"modificationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/modificationTimestamp\",\"type\": \"string\"},\"lock\": {\"$id\": \"#/items/properties/metadata/properties/lock\",\"type\": \"boolean\"},\"lockType\": {\"$id\": \"#/items/properties/metadata/properties/lockType\",\"type\": \"string\"},\"lockedBy\": {\"$id\": \"#/items/properties/metadata/properties/lockedBy\",\"type\": \"string\"},\"msLockExpiry\": {\"$id\": \"#/items/properties/metadata/properties/msLockExpiry\",\"type\": \"string\"},\"msSystemTime\": {\"$id\": \"#/items/properties/metadata/properties/msSystemTime\",\"type\": \"string\"},\"markedForPurge\": {\"$id\": \"#/items/properties/metadata/properties/markedForPurge\",\"type\": \"boolean\"},\"applicationId\": {\"$id\": \"#/items/properties/metadata/properties/applicationId\",\"type\": \"string\"},\"typeId\": {\"$id\": \"#/items/properties/metadata/properties/typeId\",\"type\": \"string\"}}}}}}",
                                        "fe_metadata": "{\"$schema\": \"http://json-schema.org/draft-07/schema\",\"$id\": \"http://example.com/example.json\",\"type\": \"array\",\"items\": {\"$id\": \"#/items\",\"type\": \"object\",\"properties\": {\"caseReference\": {\"$id\": \"#/items/properties/caseReference\",\"type\": \"string\"},\"caseData\": {\"$id\": \"#/items/properties/caseData\",\"type\": \"string\"},\"untaggedCasedata\": {\"$id\": \"#/items/properties/untaggedCasedata\",\"type\": \"string\"},\"summary\": {\"$id\": \"#/items/properties/summary\",\"type\": \"string\"},\"metadata\": {\"$id\": \"#/items/properties/metadata\",\"type\": \"object\",\"properties\": {\"createdBy\": {\"$id\": \"#/items/properties/metadata/properties/createdBy\",\"type\": \"string\"},\"creationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/creationTimestamp\",\"type\": \"string\"},\"modifiedBy\": {\"$id\": \"#/items/properties/metadata/properties/modifiedBy\",\"type\": \"string\"},\"modificationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/modificationTimestamp\",\"type\": \"string\"},\"lock\": {\"$id\": \"#/items/properties/metadata/properties/lock\",\"type\": \"boolean\"},\"lockType\": {\"$id\": \"#/items/properties/metadata/properties/lockType\",\"type\": \"string\"},\"lockedBy\": {\"$id\": \"#/items/properties/metadata/properties/lockedBy\",\"type\": \"string\"},\"msLockExpiry\": {\"$id\": \"#/items/properties/metadata/properties/msLockExpiry\",\"type\": \"string\"},\"msSystemTime\": {\"$id\": \"#/items/properties/metadata/properties/msSystemTime\",\"type\": \"string\"},\"markedForPurge\": {\"$id\": \"#/items/properties/metadata/properties/markedForPurge\",\"type\": \"boolean\"},\"applicationId\": {\"$id\": \"#/items/properties/metadata/properties/applicationId\",\"type\": \"string\"},\"typeId\": {\"$id\": \"#/items/properties/metadata/properties/typeId\",\"type\": \"string\"}}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage1",
                        "name": "LogMessage1",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=$activity[GetCases].getCaseResponseItem[0]"
                            }
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": "=coerce.toObject($activity[GetCases].getCaseResponseItem[0].caseData)"
                            },
                            "schemas": {
                                "input": {
                                    "input": "schema://CaseConfig"
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"Name\": {\n      \"type\": \"string\",\n      \"default\": \"some name\"\n    },\n    \"Description\": {\n      \"type\": \"string\",\n      \"default\": \"some desc\"\n    },\n    \"ID\": {\n      \"type\": \"string\",\n      \"default\": \"1\"\n    },\n    \"caseRef\": {\n      \"type\": \"string\",\n      \"default\": \"000001\"\n    },\n    \"InputType\": {\n      \"type\": \"string\",\n      \"default\": \"csv\"\n    },\n    \"Organisation\": {\n      \"type\": \"string\",\n      \"default\": \"discover\"\n    },\n    \"DataSource\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"TDV\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"Query\": {\n              \"type\": \"string\",\n              \"default\": \"select * from\"\n            },\n            \"Table\": {\n              \"type\": \"string\",\n              \"default\": \"mytable\"\n            },\n            \"Database\": {\n              \"type\": \"string\",\n              \"default\": \"mydb\"\n            },\n            \"Domain\": {\n              \"type\": \"string\",\n              \"default\": \"composite\"\n            },\n            \"Site\": {\n              \"type\": \"string\",\n              \"default\": \"localshit_9400\"\n            },\n            \"Endpoint\": {\n              \"type\": \"string\",\n              \"default\": \"0.1.2.3:9402\"\n            },\n            \"PrimaryKey\": {\n              \"type\": \"string\",\n              \"default\": \"key\"\n            },\n            \"Partitions\": {\n              \"type\": \"number\",\n              \"default\": \"100\"\n            },\n            \"DateTimeFormat\": {\n              \"type\": \"string\",\n              \"default\": \"MM/dd/yyyy\"\n            }\n          }\n        },\n        \"File\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"FilePath\": {\n              \"type\": \"string\",\n              \"default\": \"/Users/fcenedes/Documents/github/labs-discover/target/test-classes/Purchase_requests.csv\"\n            },\n            \"FileName\": {\n              \"type\": \"string\",\n              \"default\": \"Purchase_requests.csv\"\n            },\n            \"UseFirstLineAsHeader\": {\n              \"type\": \"string\",\n              \"default\": \"true\"\n            },\n            \"Separator\": {\n              \"type\": \"string\",\n              \"default\": \";\"\n            },\n            \"QuoteChar\": {\n              \"type\": \"string\",\n              \"default\": \"\\\"\"\n            },\n            \"EscapeChar\": {\n              \"type\": \"string\",\n              \"default\": \"\\\\\"\n            },\n            \"Encoding\": {\n              \"type\": \"string\",\n              \"default\": \"utf-8\"\n            },\n            \"DateTimeFormat\": {\n              \"type\": \"string\",\n              \"default\": \"MM/dd/yyyy\"\n            }\n          }\n        }\n      }\n    },\n    \"Schema\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"default\": \"Order\"\n      }\n    },\n    \"EventMap\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"case_id\": {\n          \"type\": \"string\",\n          \"default\": \"Case_id\"\n        },\n        \"activity_id\": {\n          \"type\": \"string\",\n          \"default\": \"Activity\"\n        },\n        \"resource_id\": {\n          \"type\": \"string\",\n          \"default\": \"Resource\"\n        },\n        \"activity_start_time\": {\n          \"type\": \"string\",\n          \"default\": \"Time_stamp\"\n        },\n        \"activity_end_time\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"otherAttributes\": {\n          \"type\": \"string\",\n          \"default\": \"Supplier,Company,Order\"\n        }\n      }\n    },\n    \"Schedule\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"isSchedule\": {\n          \"type\": \"string\",\n          \"default\": \"False\"\n        },\n        \"Schedule\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        }\n      }\n    },\n    \"Endpoints\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Starts\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"activities\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"Ends\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"activities\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": []\n}",
                                        "fe_metadata": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"Name\": {\n      \"type\": \"string\",\n      \"default\": \"some name\"\n    },\n    \"Description\": {\n      \"type\": \"string\",\n      \"default\": \"some desc\"\n    },\n    \"ID\": {\n      \"type\": \"string\",\n      \"default\": \"1\"\n    },\n    \"caseRef\": {\n      \"type\": \"string\",\n      \"default\": \"000001\"\n    },\n    \"InputType\": {\n      \"type\": \"string\",\n      \"default\": \"csv\"\n    },\n    \"Organisation\": {\n      \"type\": \"string\",\n      \"default\": \"discover\"\n    },\n    \"DataSource\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"TDV\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"Query\": {\n              \"type\": \"string\",\n              \"default\": \"select * from\"\n            },\n            \"Table\": {\n              \"type\": \"string\",\n              \"default\": \"mytable\"\n            },\n            \"Database\": {\n              \"type\": \"string\",\n              \"default\": \"mydb\"\n            },\n            \"Domain\": {\n              \"type\": \"string\",\n              \"default\": \"composite\"\n            },\n            \"Site\": {\n              \"type\": \"string\",\n              \"default\": \"localshit_9400\"\n            },\n            \"Endpoint\": {\n              \"type\": \"string\",\n              \"default\": \"0.1.2.3:9402\"\n            },\n            \"PrimaryKey\": {\n              \"type\": \"string\",\n              \"default\": \"key\"\n            },\n            \"Partitions\": {\n              \"type\": \"number\",\n              \"default\": \"100\"\n            },\n            \"DateTimeFormat\": {\n              \"type\": \"string\",\n              \"default\": \"MM/dd/yyyy\"\n            }\n          }\n        },\n        \"File\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"FilePath\": {\n              \"type\": \"string\",\n              \"default\": \"/Users/fcenedes/Documents/github/labs-discover/target/test-classes/Purchase_requests.csv\"\n            },\n            \"FileName\": {\n              \"type\": \"string\",\n              \"default\": \"Purchase_requests.csv\"\n            },\n            \"UseFirstLineAsHeader\": {\n              \"type\": \"string\",\n              \"default\": \"true\"\n            },\n            \"Separator\": {\n              \"type\": \"string\",\n              \"default\": \";\"\n            },\n            \"QuoteChar\": {\n              \"type\": \"string\",\n              \"default\": \"\\\"\"\n            },\n            \"EscapeChar\": {\n              \"type\": \"string\",\n              \"default\": \"\\\\\"\n            },\n            \"Encoding\": {\n              \"type\": \"string\",\n              \"default\": \"utf-8\"\n            },\n            \"DateTimeFormat\": {\n              \"type\": \"string\",\n              \"default\": \"MM/dd/yyyy\"\n            }\n          }\n        }\n      }\n    },\n    \"Schema\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"default\": \"Order\"\n      }\n    },\n    \"EventMap\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"case_id\": {\n          \"type\": \"string\",\n          \"default\": \"Case_id\"\n        },\n        \"activity_id\": {\n          \"type\": \"string\",\n          \"default\": \"Activity\"\n        },\n        \"resource_id\": {\n          \"type\": \"string\",\n          \"default\": \"Resource\"\n        },\n        \"activity_start_time\": {\n          \"type\": \"string\",\n          \"default\": \"Time_stamp\"\n        },\n        \"activity_end_time\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"otherAttributes\": {\n          \"type\": \"string\",\n          \"default\": \"Supplier,Company,Order\"\n        }\n      }\n    },\n    \"Schedule\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"isSchedule\": {\n          \"type\": \"string\",\n          \"default\": \"False\"\n        },\n        \"Schedule\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        }\n      }\n    },\n    \"Endpoints\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Starts\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"activities\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"Ends\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"activities\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": []\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=$activity[Mapper].output.caseRef"
                            }
                        }
                    },
                    {
                        "id": "TCMMessagePublisher",
                        "name": "TCMMessagePublisher",
                        "description": "This activity sends a message to TIBCO Cloud Messaging service",
                        "settings": {
                            "retryOnError": {
                                "count": 3,
                                "interval": 500
                            }
                        },
                        "activity": {
                            "ref": "#tcmpublisher",
                            "input": {
                                "tcmConnection": "conn://da68fbc0-2d7c-11eb-87f3-c963288d3c2a",
                                "destination": "=$property[\"MessagingDurableKeyBackend\"]",
                                "url": "",
                                "authKey": "",
                                "message": {
                                    "mapping": {
                                        "status": "submit",
                                        "message": "toto",
                                        "analysis_id": "=$activity[Mapper].output.ID",
                                        "organisation": "=$activity[Mapper].output.Organisation",
                                        "caseRef": "=$activity[GetCases].getCaseResponseItem[0].caseReference"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "message": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"caseRef\":{\"type\":\"string\"},\"analysis_id\":{\"type\":\"string\"},\"organisation\":{\"type\":\"string\"},\"status\":{\"type\":\"string\"},\"message\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"caseRef\":\"\",\n    \"analysis_id\":\"\",\n    \"organisation\":\"\",\n    \"status\":\"\",\n    \"message\":\"\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "code": 200,
                                    "message": "=string.concat(\"Adding message to TCM with \",$activity[Mapper].output.ID,\" \", $activity[Mapper].output.caseRef , \" OK\")"
                                }
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "NOCASEFOUND"
                            }
                        }
                    },
                    {
                        "id": "CopyOfThrowError",
                        "name": "CopyOfThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "NOCASEFOUND"
                            }
                        }
                    }
                ],
                "errorHandler": {
                    "tasks": [
                        {
                            "id": "Sleep",
                            "name": "Sleep",
                            "description": "Simple sleep Activity",
                            "activity": {
                                "ref": "#sleep",
                                "input": {
                                    "IntervalTypeSetting": "Second",
                                    "IntervalSetting": 1,
                                    "Interval": 0
                                }
                            }
                        },
                        {
                            "id": "Return1",
                            "name": "Return1",
                            "description": "Simple Return Activity",
                            "activity": {
                                "ref": "#actreturn",
                                "settings": {
                                    "mappings": {
                                        "code": 200,
                                        "message": "NOCASEFOUND"
                                    }
                                }
                            }
                        }
                    ],
                    "links": [
                        {
                            "id": 8,
                            "from": "Sleep",
                            "to": "Return1",
                            "type": "default"
                        }
                    ]
                },
                "metadata": {
                    "input": [
                        {
                            "name": "pathParams",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "headers",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "integer"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"pathParams\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[]},\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false}},\"required\":[]}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:OrchestratorToLiveApps",
            "data": {
                "name": "OrchestratorToLiveApps",
                "description": "Listen to events from backend, and move case accordingly",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "GetCases",
                        "type": "expression",
                        "label": "Success",
                        "value": "$flow.message.status == \"done\""
                    },
                    {
                        "id": 2,
                        "from": "GetCases",
                        "to": "RunAction",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "RunAction",
                        "to": "TCM_Send_Remove",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "TCM_Send_Remove",
                        "to": "LastMessage",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LastMessage",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "LogMessage",
                        "to": "GetCases4Abort",
                        "type": "expression",
                        "label": "Error",
                        "value": "$flow.message.status == \"error\""
                    },
                    {
                        "id": 7,
                        "from": "GetCases4Abort",
                        "to": "RunActionAbort",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "RunActionAbort",
                        "to": "ReturnAbort",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "LogMessage",
                        "to": "GetCases4Status",
                        "type": "expression",
                        "label": "LogMessagetoGetCases1",
                        "value": "$flow.message.status == \"progress\""
                    },
                    {
                        "id": 10,
                        "from": "GetCases4Status",
                        "to": "Mapper1",
                        "type": "default"
                    },
                    {
                        "id": 11,
                        "from": "Mapper1",
                        "to": "LogMessage1",
                        "type": "default"
                    },
                    {
                        "id": 12,
                        "from": "LogMessage1",
                        "to": "updatestatus",
                        "type": "default"
                    },
                    {
                        "id": 13,
                        "from": "updatestatus",
                        "to": "TCMMessagePublisher",
                        "type": "default"
                    },
                    {
                        "id": 14,
                        "from": "TCMMessagePublisher",
                        "to": "Return1",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": true,
                                "message": "=string.concat(\"caseRef: \" , $flow.message.caseRef, \" status: \" , $flow.message.status , \" analysis_id : \", $flow.message.analysis_id , \"organisation\" , $flow.message.organisation)"
                            }
                        }
                    },
                    {
                        "id": "GetCases",
                        "name": "GetCases",
                        "description": "Activities created by TIBCO Labs",
                        "activity": {
                            "ref": "#getcases",
                            "settings": {
                                "security": "AccessToken"
                            },
                            "input": {
                                "region": "=$property[\"Auth.region\"]",
                                "accessToken": "=$property[\"Auth.oauth\"]",
                                "sandboxId": "=$property[\"Auth.sandboxID\"]",
                                "filter": "=\"applicationId eq \"+ $property[\"liveapps.discover_analysis_appid\"] +\" and typeId eq 1\"",
                                "select": "",
                                "skip": "",
                                "top": "",
                                "search": "=$flow.message.analysis_id",
                                "count": false,
                                "user": ""
                            },
                            "schemas": {
                                "input": {
                                    "cookie": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"tsc\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"tsc\": \"tsc cookie value\", \"domain\": \"domain cookie value\"}"
                                    }
                                },
                                "output": {
                                    "getCaseResponseItem": {
                                        "type": "json",
                                        "value": "{\"$schema\": \"http://json-schema.org/draft-07/schema\",\"$id\": \"http://example.com/example.json\",\"type\": \"array\",\"items\": {\"$id\": \"#/items\",\"type\": \"object\",\"properties\": {\"caseReference\": {\"$id\": \"#/items/properties/caseReference\",\"type\": \"string\"},\"caseData\": {\"$id\": \"#/items/properties/caseData\",\"type\": \"string\"},\"untaggedCasedata\": {\"$id\": \"#/items/properties/untaggedCasedata\",\"type\": \"string\"},\"summary\": {\"$id\": \"#/items/properties/summary\",\"type\": \"string\"},\"metadata\": {\"$id\": \"#/items/properties/metadata\",\"type\": \"object\",\"properties\": {\"createdBy\": {\"$id\": \"#/items/properties/metadata/properties/createdBy\",\"type\": \"string\"},\"creationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/creationTimestamp\",\"type\": \"string\"},\"modifiedBy\": {\"$id\": \"#/items/properties/metadata/properties/modifiedBy\",\"type\": \"string\"},\"modificationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/modificationTimestamp\",\"type\": \"string\"},\"lock\": {\"$id\": \"#/items/properties/metadata/properties/lock\",\"type\": \"boolean\"},\"lockType\": {\"$id\": \"#/items/properties/metadata/properties/lockType\",\"type\": \"string\"},\"lockedBy\": {\"$id\": \"#/items/properties/metadata/properties/lockedBy\",\"type\": \"string\"},\"msLockExpiry\": {\"$id\": \"#/items/properties/metadata/properties/msLockExpiry\",\"type\": \"string\"},\"msSystemTime\": {\"$id\": \"#/items/properties/metadata/properties/msSystemTime\",\"type\": \"string\"},\"markedForPurge\": {\"$id\": \"#/items/properties/metadata/properties/markedForPurge\",\"type\": \"boolean\"},\"applicationId\": {\"$id\": \"#/items/properties/metadata/properties/applicationId\",\"type\": \"string\"},\"typeId\": {\"$id\": \"#/items/properties/metadata/properties/typeId\",\"type\": \"string\"}}}}}}",
                                        "fe_metadata": "{\"$schema\": \"http://json-schema.org/draft-07/schema\",\"$id\": \"http://example.com/example.json\",\"type\": \"array\",\"items\": {\"$id\": \"#/items\",\"type\": \"object\",\"properties\": {\"caseReference\": {\"$id\": \"#/items/properties/caseReference\",\"type\": \"string\"},\"caseData\": {\"$id\": \"#/items/properties/caseData\",\"type\": \"string\"},\"untaggedCasedata\": {\"$id\": \"#/items/properties/untaggedCasedata\",\"type\": \"string\"},\"summary\": {\"$id\": \"#/items/properties/summary\",\"type\": \"string\"},\"metadata\": {\"$id\": \"#/items/properties/metadata\",\"type\": \"object\",\"properties\": {\"createdBy\": {\"$id\": \"#/items/properties/metadata/properties/createdBy\",\"type\": \"string\"},\"creationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/creationTimestamp\",\"type\": \"string\"},\"modifiedBy\": {\"$id\": \"#/items/properties/metadata/properties/modifiedBy\",\"type\": \"string\"},\"modificationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/modificationTimestamp\",\"type\": \"string\"},\"lock\": {\"$id\": \"#/items/properties/metadata/properties/lock\",\"type\": \"boolean\"},\"lockType\": {\"$id\": \"#/items/properties/metadata/properties/lockType\",\"type\": \"string\"},\"lockedBy\": {\"$id\": \"#/items/properties/metadata/properties/lockedBy\",\"type\": \"string\"},\"msLockExpiry\": {\"$id\": \"#/items/properties/metadata/properties/msLockExpiry\",\"type\": \"string\"},\"msSystemTime\": {\"$id\": \"#/items/properties/metadata/properties/msSystemTime\",\"type\": \"string\"},\"markedForPurge\": {\"$id\": \"#/items/properties/metadata/properties/markedForPurge\",\"type\": \"boolean\"},\"applicationId\": {\"$id\": \"#/items/properties/metadata/properties/applicationId\",\"type\": \"string\"},\"typeId\": {\"$id\": \"#/items/properties/metadata/properties/typeId\",\"type\": \"string\"}}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "RunAction",
                        "name": "RunAction",
                        "description": "Activities created by TIBCO Labs",
                        "activity": {
                            "ref": "#runaction",
                            "settings": {
                                "security": "AccessToken"
                            },
                            "input": {
                                "region": "=$property[\"Auth.region\"]",
                                "accessToken": "=$property[\"Auth.oauth\"]",
                                "id": "=$property[\"liveapps.discover_analysis_ready_id\"]",
                                "applicationId": "=$property[\"liveapps.discover_analysis_appid\"]",
                                "sandboxId": "=$property[\"Auth.sandboxID\"]",
                                "caseReference": "=$activity[GetCases].getCaseResponseItem[0].caseReference",
                                "data": "=$activity[GetCases].getCaseResponseItem[0].caseData"
                            },
                            "schemas": {
                                "input": {
                                    "cookie": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"tsc\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"tsc\": \"tsc cookie value\", \"domain\": \"domain cookie value\"}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "TCM_Send_Remove",
                        "name": "TCM_Send_Remove",
                        "description": "This activity sends a message to TIBCO Cloud Messaging service",
                        "settings": {
                            "retryOnError": {
                                "count": 0,
                                "interval": 0
                            }
                        },
                        "activity": {
                            "ref": "#tcmpublisher",
                            "input": {
                                "tcmConnection": "conn://da68fbc0-2d7c-11eb-87f3-c963288d3c2a",
                                "destination": "=$property[\"MessagingDurableKeyBackend\"]",
                                "url": "",
                                "authKey": "",
                                "message": {
                                    "mapping": {
                                        "caseRef": "=$flow.message.caseRef",
                                        "analysis_id": "=$flow.message.analysis_id",
                                        "status": "remove",
                                        "message": "None",
                                        "organisation": "=$flow.message.organisation == null ? \"default\":$flow.message.organisation",
                                        "progress": 100,
                                        "timestamp": "=datetime.currentDatetime()"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "message": "schema://tcmBackendSchema"
                                }
                            }
                        }
                    },
                    {
                        "id": "LastMessage",
                        "name": "LastMessage",
                        "description": "This activity sends a message to TIBCO Cloud Messaging service",
                        "settings": {
                            "retryOnError": {
                                "count": 0,
                                "interval": 0
                            }
                        },
                        "activity": {
                            "ref": "#tcmpublisher",
                            "input": {
                                "tcmConnection": "conn://da68fbc0-2d7c-11eb-87f3-c963288d3c2a",
                                "destination": "=$property[\"MessagingDurableKeyUIMain\"]",
                                "url": "",
                                "authKey": "",
                                "message": {
                                    "mapping": {
                                        "analysis_id": "=$flow.message.analysis_id",
                                        "organisation": "=$flow.message.organisation",
                                        "status": "progress",
                                        "message": "it's ready !!!",
                                        "timestamp": "=datetime.currentDatetime()",
                                        "caseRef": "=$activity[RunAction].caseReference",
                                        "progress": "=coerce.toFloat64(\"100\")"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "message": "schema://tcmBackendSchema"
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "caseRef": "=$flow.message.caseRef",
                                    "analysis_id": "=$flow.message.analysis_id",
                                    "status": "Terminated in success",
                                    "message": "None",
                                    "organisation": "=$flow.message.organisation == null ? \"None\":$flow.message.organisation",
                                    "progress": 100,
                                    "timestamp": "=$flow.message.timestamp"
                                }
                            }
                        }
                    },
                    {
                        "id": "GetCases4Abort",
                        "name": "GetCases4Abort",
                        "description": "Activities created by TIBCO Labs",
                        "activity": {
                            "ref": "#getcases",
                            "settings": {
                                "security": "AccessToken"
                            },
                            "input": {
                                "region": "=$property[\"Auth.region\"]",
                                "accessToken": "=$property[\"Auth.oauth\"]",
                                "sandboxId": "=$property[\"Auth.sandboxID\"]",
                                "filter": "=\"applicationId eq \"+ $property[\"liveapps.discover_analysis_appid\"] +\" and typeId eq 1\"",
                                "select": "",
                                "skip": "",
                                "top": "",
                                "search": "=$flow.message.analysis_id",
                                "count": false,
                                "user": ""
                            },
                            "schemas": {
                                "input": {
                                    "cookie": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"tsc\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"tsc\": \"tsc cookie value\", \"domain\": \"domain cookie value\"}"
                                    }
                                },
                                "output": {
                                    "getCaseResponseItem": {
                                        "type": "json",
                                        "value": "{\"$schema\": \"http://json-schema.org/draft-07/schema\",\"$id\": \"http://example.com/example.json\",\"type\": \"array\",\"items\": {\"$id\": \"#/items\",\"type\": \"object\",\"properties\": {\"caseReference\": {\"$id\": \"#/items/properties/caseReference\",\"type\": \"string\"},\"caseData\": {\"$id\": \"#/items/properties/caseData\",\"type\": \"string\"},\"untaggedCasedata\": {\"$id\": \"#/items/properties/untaggedCasedata\",\"type\": \"string\"},\"summary\": {\"$id\": \"#/items/properties/summary\",\"type\": \"string\"},\"metadata\": {\"$id\": \"#/items/properties/metadata\",\"type\": \"object\",\"properties\": {\"createdBy\": {\"$id\": \"#/items/properties/metadata/properties/createdBy\",\"type\": \"string\"},\"creationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/creationTimestamp\",\"type\": \"string\"},\"modifiedBy\": {\"$id\": \"#/items/properties/metadata/properties/modifiedBy\",\"type\": \"string\"},\"modificationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/modificationTimestamp\",\"type\": \"string\"},\"lock\": {\"$id\": \"#/items/properties/metadata/properties/lock\",\"type\": \"boolean\"},\"lockType\": {\"$id\": \"#/items/properties/metadata/properties/lockType\",\"type\": \"string\"},\"lockedBy\": {\"$id\": \"#/items/properties/metadata/properties/lockedBy\",\"type\": \"string\"},\"msLockExpiry\": {\"$id\": \"#/items/properties/metadata/properties/msLockExpiry\",\"type\": \"string\"},\"msSystemTime\": {\"$id\": \"#/items/properties/metadata/properties/msSystemTime\",\"type\": \"string\"},\"markedForPurge\": {\"$id\": \"#/items/properties/metadata/properties/markedForPurge\",\"type\": \"boolean\"},\"applicationId\": {\"$id\": \"#/items/properties/metadata/properties/applicationId\",\"type\": \"string\"},\"typeId\": {\"$id\": \"#/items/properties/metadata/properties/typeId\",\"type\": \"string\"}}}}}}",
                                        "fe_metadata": "{\"$schema\": \"http://json-schema.org/draft-07/schema\",\"$id\": \"http://example.com/example.json\",\"type\": \"array\",\"items\": {\"$id\": \"#/items\",\"type\": \"object\",\"properties\": {\"caseReference\": {\"$id\": \"#/items/properties/caseReference\",\"type\": \"string\"},\"caseData\": {\"$id\": \"#/items/properties/caseData\",\"type\": \"string\"},\"untaggedCasedata\": {\"$id\": \"#/items/properties/untaggedCasedata\",\"type\": \"string\"},\"summary\": {\"$id\": \"#/items/properties/summary\",\"type\": \"string\"},\"metadata\": {\"$id\": \"#/items/properties/metadata\",\"type\": \"object\",\"properties\": {\"createdBy\": {\"$id\": \"#/items/properties/metadata/properties/createdBy\",\"type\": \"string\"},\"creationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/creationTimestamp\",\"type\": \"string\"},\"modifiedBy\": {\"$id\": \"#/items/properties/metadata/properties/modifiedBy\",\"type\": \"string\"},\"modificationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/modificationTimestamp\",\"type\": \"string\"},\"lock\": {\"$id\": \"#/items/properties/metadata/properties/lock\",\"type\": \"boolean\"},\"lockType\": {\"$id\": \"#/items/properties/metadata/properties/lockType\",\"type\": \"string\"},\"lockedBy\": {\"$id\": \"#/items/properties/metadata/properties/lockedBy\",\"type\": \"string\"},\"msLockExpiry\": {\"$id\": \"#/items/properties/metadata/properties/msLockExpiry\",\"type\": \"string\"},\"msSystemTime\": {\"$id\": \"#/items/properties/metadata/properties/msSystemTime\",\"type\": \"string\"},\"markedForPurge\": {\"$id\": \"#/items/properties/metadata/properties/markedForPurge\",\"type\": \"boolean\"},\"applicationId\": {\"$id\": \"#/items/properties/metadata/properties/applicationId\",\"type\": \"string\"},\"typeId\": {\"$id\": \"#/items/properties/metadata/properties/typeId\",\"type\": \"string\"}}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "RunActionAbort",
                        "name": "RunActionAbort",
                        "description": "Activities created by TIBCO Labs",
                        "activity": {
                            "ref": "#runaction",
                            "settings": {
                                "security": "AccessToken"
                            },
                            "input": {
                                "region": "=$property[\"Auth.region\"]",
                                "accessToken": "=$property[\"Auth.oauth\"]",
                                "id": "=$property[\"liveapps.discover_analysis_ready_id\"]",
                                "applicationId": "=$property[\"liveapps.discover_analysis_appid\"]",
                                "sandboxId": "=$property[\"Auth.sandboxID\"]",
                                "caseReference": "=$activity[GetCases4Abort].getCaseResponseItem[0].caseReference",
                                "data": "=$activity[GetCases4Abort].getCaseResponseItem[0].caseData"
                            },
                            "schemas": {
                                "input": {
                                    "cookie": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"tsc\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"tsc\": \"tsc cookie value\", \"domain\": \"domain cookie value\"}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "ReturnAbort",
                        "name": "ReturnAbort",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "caseRef": "=$flow.message.caseRef",
                                    "analysis_id": "=$flow.message.analysis_id",
                                    "status": "Terminated in Error",
                                    "organisation": "=$flow.message.organisation == null ? \"None\":$flow.message.organisation",
                                    "message": "=$flow.message.message",
                                    "progress": "=$flow.message.progress",
                                    "timestamp": "=$flow.message.timestamp"
                                }
                            }
                        }
                    },
                    {
                        "id": "GetCases4Status",
                        "name": "GetCases4Status",
                        "description": "Activities created by TIBCO Labs",
                        "activity": {
                            "ref": "#getcases",
                            "settings": {
                                "security": "AccessToken"
                            },
                            "input": {
                                "region": "=$property[\"Auth.region\"]",
                                "accessToken": "=$property[\"Auth.oauth\"]",
                                "sandboxId": "=$property[\"Auth.sandboxID\"]",
                                "filter": "=\"applicationId eq \"+ $property[\"liveapps.discover_analysis_appid\"] +\" and typeId eq 1\"",
                                "select": "",
                                "skip": "",
                                "top": "",
                                "search": "=$flow.message.analysis_id",
                                "count": false,
                                "user": ""
                            },
                            "schemas": {
                                "input": {
                                    "cookie": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"tsc\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"tsc\": \"tsc cookie value\", \"domain\": \"domain cookie value\"}"
                                    }
                                },
                                "output": {
                                    "getCaseResponseItem": {
                                        "type": "json",
                                        "value": "{\"$schema\": \"http://json-schema.org/draft-07/schema\",\"$id\": \"http://example.com/example.json\",\"type\": \"array\",\"items\": {\"$id\": \"#/items\",\"type\": \"object\",\"properties\": {\"caseReference\": {\"$id\": \"#/items/properties/caseReference\",\"type\": \"string\"},\"caseData\": {\"$id\": \"#/items/properties/caseData\",\"type\": \"string\"},\"untaggedCasedata\": {\"$id\": \"#/items/properties/untaggedCasedata\",\"type\": \"string\"},\"summary\": {\"$id\": \"#/items/properties/summary\",\"type\": \"string\"},\"metadata\": {\"$id\": \"#/items/properties/metadata\",\"type\": \"object\",\"properties\": {\"createdBy\": {\"$id\": \"#/items/properties/metadata/properties/createdBy\",\"type\": \"string\"},\"creationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/creationTimestamp\",\"type\": \"string\"},\"modifiedBy\": {\"$id\": \"#/items/properties/metadata/properties/modifiedBy\",\"type\": \"string\"},\"modificationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/modificationTimestamp\",\"type\": \"string\"},\"lock\": {\"$id\": \"#/items/properties/metadata/properties/lock\",\"type\": \"boolean\"},\"lockType\": {\"$id\": \"#/items/properties/metadata/properties/lockType\",\"type\": \"string\"},\"lockedBy\": {\"$id\": \"#/items/properties/metadata/properties/lockedBy\",\"type\": \"string\"},\"msLockExpiry\": {\"$id\": \"#/items/properties/metadata/properties/msLockExpiry\",\"type\": \"string\"},\"msSystemTime\": {\"$id\": \"#/items/properties/metadata/properties/msSystemTime\",\"type\": \"string\"},\"markedForPurge\": {\"$id\": \"#/items/properties/metadata/properties/markedForPurge\",\"type\": \"boolean\"},\"applicationId\": {\"$id\": \"#/items/properties/metadata/properties/applicationId\",\"type\": \"string\"},\"typeId\": {\"$id\": \"#/items/properties/metadata/properties/typeId\",\"type\": \"string\"}}}}}}",
                                        "fe_metadata": "{\"$schema\": \"http://json-schema.org/draft-07/schema\",\"$id\": \"http://example.com/example.json\",\"type\": \"array\",\"items\": {\"$id\": \"#/items\",\"type\": \"object\",\"properties\": {\"caseReference\": {\"$id\": \"#/items/properties/caseReference\",\"type\": \"string\"},\"caseData\": {\"$id\": \"#/items/properties/caseData\",\"type\": \"string\"},\"untaggedCasedata\": {\"$id\": \"#/items/properties/untaggedCasedata\",\"type\": \"string\"},\"summary\": {\"$id\": \"#/items/properties/summary\",\"type\": \"string\"},\"metadata\": {\"$id\": \"#/items/properties/metadata\",\"type\": \"object\",\"properties\": {\"createdBy\": {\"$id\": \"#/items/properties/metadata/properties/createdBy\",\"type\": \"string\"},\"creationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/creationTimestamp\",\"type\": \"string\"},\"modifiedBy\": {\"$id\": \"#/items/properties/metadata/properties/modifiedBy\",\"type\": \"string\"},\"modificationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/modificationTimestamp\",\"type\": \"string\"},\"lock\": {\"$id\": \"#/items/properties/metadata/properties/lock\",\"type\": \"boolean\"},\"lockType\": {\"$id\": \"#/items/properties/metadata/properties/lockType\",\"type\": \"string\"},\"lockedBy\": {\"$id\": \"#/items/properties/metadata/properties/lockedBy\",\"type\": \"string\"},\"msLockExpiry\": {\"$id\": \"#/items/properties/metadata/properties/msLockExpiry\",\"type\": \"string\"},\"msSystemTime\": {\"$id\": \"#/items/properties/metadata/properties/msSystemTime\",\"type\": \"string\"},\"markedForPurge\": {\"$id\": \"#/items/properties/metadata/properties/markedForPurge\",\"type\": \"boolean\"},\"applicationId\": {\"$id\": \"#/items/properties/metadata/properties/applicationId\",\"type\": \"string\"},\"typeId\": {\"$id\": \"#/items/properties/metadata/properties/typeId\",\"type\": \"string\"}}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Mapper1",
                        "name": "Mapper1",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "Discoveranalysis": {
                                            "ProcessMining": {
                                                "Status": "progress",
                                                "Progress": "=$flow.message.progress",
                                                "Message": "=$flow.message.message",
                                                "Timestamp": "=$flow.message.timestamp"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Discoveranalysis\":{\"type\":\"object\",\"properties\":{\"ProcessMining\":{\"type\":\"object\",\"properties\":{\"Status\":{\"type\":\"string\"},\"Progress\":{\"type\":\"number\"},\"Message\":{\"type\":\"string\"},\"Timestamp\":{\"type\":\"string\"}}}}}}}",
                                        "fe_metadata": "{\n\t\"Discoveranalysis\": {\n\t\t\"ProcessMining\": {\n\t\t\t\"Status\": \"\",\n\t\t\t\"Progress\": 100,\n\t\t\t\"Message\": \"Hello\",\n\t\t\t\"Timestamp\": \"123456\"\n\t\t}\n\t}\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Discoveranalysis\":{\"type\":\"object\",\"properties\":{\"ProcessMining\":{\"type\":\"object\",\"properties\":{\"Status\":{\"type\":\"string\"},\"Progress\":{\"type\":\"number\"},\"Message\":{\"type\":\"string\"},\"Timestamp\":{\"type\":\"string\"}}}}}}}",
                                        "fe_metadata": "{\n  \"Discoveranalysis\": {\n    \"ProcessMining\": {\n      \"Status\": \"\",\n      \"Progress\": 100,\n      \"Message\": \"Hello\",\n      \"Timestamp\": \"123456\"\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage1",
                        "name": "LogMessage1",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": true,
                                "message": ""
                            }
                        }
                    },
                    {
                        "id": "updatestatus",
                        "name": "updatestatus",
                        "description": "Activities created by TIBCO Labs",
                        "activity": {
                            "ref": "#runaction",
                            "settings": {
                                "security": "AccessToken"
                            },
                            "input": {
                                "region": "=$property[\"Auth.region\"]",
                                "accessToken": "=$property[\"Auth.oauth\"]",
                                "id": "=$property[\"liveapps.discover_analysis_status_id\"]",
                                "applicationId": "=$property[\"liveapps.discover_analysis_appid\"]",
                                "sandboxId": "=$property[\"Auth.sandboxID\"]",
                                "caseReference": "=$flow.message.caseRef",
                                "data": "=coerce.toString($activity[Mapper1].output)"
                            },
                            "schemas": {
                                "input": {
                                    "cookie": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"tsc\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"tsc\": \"tsc cookie value\", \"domain\": \"domain cookie value\"}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "TCMMessagePublisher",
                        "name": "TCMMessagePublisher",
                        "description": "This activity sends a message to TIBCO Cloud Messaging service",
                        "settings": {
                            "retryOnError": {
                                "count": 0,
                                "interval": 0
                            }
                        },
                        "activity": {
                            "ref": "#tcmpublisher",
                            "input": {
                                "tcmConnection": "conn://da68fbc0-2d7c-11eb-87f3-c963288d3c2a",
                                "destination": "=$property[\"MessagingDurableKeyUIMain\"]",
                                "url": "",
                                "authKey": "",
                                "message": {
                                    "mapping": {
                                        "caseRef": "=$activity[updatestatus].caseReference",
                                        "analysis_id": "=$flow.message.analysis_id",
                                        "organisation": "=$flow.message.organisation",
                                        "status": "=$flow.message.status",
                                        "message": "=$flow.message.message",
                                        "progress": "=$flow.message.progress",
                                        "timestamp": "=$flow.message.timestamp"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "message": "schema://tcmBackendSchema"
                                }
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "caseRef": "=$flow.message.caseRef",
                                    "analysis_id": "=$flow.message.analysis_id",
                                    "organisation": "=$flow.message.organisation == null ? \"None\":$flow.message.organisation",
                                    "status": "progress",
                                    "message": "=$flow.message.message",
                                    "progress": "=$flow.message.progress",
                                    "timestamp": "=$flow.message.timestamp"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "message",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"caseRef\":{\"type\":\"string\"},\"analysis_id\":{\"type\":\"string\"},\"organisation\":{\"type\":\"string\"},\"status\":{\"type\":\"string\"},\"message\":{\"type\":\"string\"},\"progress\":{\"type\":\"number\"},\"timestamp\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "caseRef",
                            "type": "string"
                        },
                        {
                            "name": "analysis_id",
                            "type": "string"
                        },
                        {
                            "name": "organisation",
                            "type": "string"
                        },
                        {
                            "name": "status",
                            "type": "string"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "progress",
                            "type": "float64"
                        },
                        {
                            "name": "timestamp",
                            "type": "string"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"MessageSubscriber\",\"properties\":{\"message\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"caseRef\":{\"type\":\"string\"},\"analysis_id\":{\"type\":\"string\"},\"organisation\":{\"type\":\"string\"},\"status\":{\"type\":\"string\"},\"message\":{\"type\":\"string\"},\"progress\":{\"type\":\"number\"},\"timestamp\":{\"type\":\"string\"}}}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"caseRef\":{\"type\":\"string\"},\"analysis_id\":{\"type\":\"string\"},\"organisation\":{\"type\":\"string\"},\"status\":{\"type\":\"string\"},\"message\":{\"type\":\"string\"},\"progress\":{\"type\":\"number\"},\"timestamp\":{\"type\":\"string\"}}}"
                    }
                }
            }
        },
        {
            "id": "flow:Purge_Data",
            "data": {
                "name": "Purge Data",
                "description": "Set all start and End activities",
                "links": [
                    {
                        "id": 1,
                        "from": "PGDeleteEvents",
                        "to": "PGDeleteCases",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "PGDeleteCases",
                        "to": "PGDeleteVariants",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "PGDeleteVariants",
                        "to": "PGDeleteAttributes",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "PGDeleteAttributes",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "PGDeleteEvents",
                        "name": "PGDeleteEvents",
                        "description": "This activity executes delete on a PostgreSQL database",
                        "activity": {
                            "ref": "#delete",
                            "input": {
                                "Connection": "conn://faf8e5b0-151e-11eb-ba34-7963a7f1be27",
                                "QueryName": "",
                                "Query": "delete from events where analysis_id = ?id returning case_id;",
                                "manualmode": false,
                                "RuntimeQuery": "",
                                "Fields": [
                                    {
                                        "FieldName": "id",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Ordinal": 0
                                    },
                                    {
                                        "FieldName": "case_id",
                                        "Type": "TEXT",
                                        "Selected": true,
                                        "Parameter": false,
                                        "isEditable": false,
                                        "Ordinal": 1
                                    }
                                ],
                                "State": "df602596-1bd0-4d8b-8432-3a5953fc86d2delete from events where analysis_id = ?id returning case_id;",
                                "input": {
                                    "mapping": {
                                        "parameters": {
                                            "id": "=$flow.analysis_id"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"rowsAffected\":{\"type\":\"int\"}}}",
                                        "fe_metadata": "{\"type\":\"object\",\"properties\":{\"rowsAffected\":{\"type\":\"int\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PGDeleteCases",
                        "name": "PGDeleteCases",
                        "description": "This activity executes delete on a PostgreSQL database",
                        "activity": {
                            "ref": "#delete",
                            "input": {
                                "Connection": "conn://faf8e5b0-151e-11eb-ba34-7963a7f1be27",
                                "QueryName": "",
                                "Query": "delete from cases where analysis_id = ?id;",
                                "manualmode": false,
                                "RuntimeQuery": "",
                                "Fields": [
                                    {
                                        "FieldName": "id",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Ordinal": 0
                                    }
                                ],
                                "State": "3e21ce10-326d-4062-8e55-2cf53997dc82delete from cases where analysis_id = ?id;",
                                "input": {
                                    "mapping": {
                                        "parameters": {
                                            "id": "=$flow.analysis_id"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"rowsAffected\":{\"type\":\"int\"}}}",
                                        "fe_metadata": "{\"type\":\"object\",\"properties\":{\"rowsAffected\":{\"type\":\"int\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PGDeleteVariants",
                        "name": "PGDeleteVariants",
                        "description": "This activity executes delete on a PostgreSQL database",
                        "activity": {
                            "ref": "#delete",
                            "input": {
                                "Connection": "conn://faf8e5b0-151e-11eb-ba34-7963a7f1be27",
                                "QueryName": "",
                                "Query": "delete from variants where analysis_id = ?id;",
                                "manualmode": false,
                                "RuntimeQuery": "",
                                "Fields": [
                                    {
                                        "FieldName": "id",
                                        "Type": "VARCHAR",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Ordinal": 0
                                    }
                                ],
                                "State": "0fc4e5fc-5de1-4821-b6fc-8fea1aa1d7f5delete from variants where analysis_id = ?id;",
                                "input": {
                                    "mapping": {
                                        "parameters": {
                                            "id": "=$flow.analysis_id"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"rowsAffected\":{\"type\":\"int\"}}}",
                                        "fe_metadata": "{\"type\":\"object\",\"properties\":{\"rowsAffected\":{\"type\":\"int\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PGDeleteAttributes",
                        "name": "PGDeleteAttributes",
                        "description": "This activity executes delete on a PostgreSQL database",
                        "activity": {
                            "ref": "#delete",
                            "input": {
                                "Connection": "conn://faf8e5b0-151e-11eb-ba34-7963a7f1be27",
                                "QueryName": "",
                                "Query": "delete from attributes where analysis_id = ?id;",
                                "manualmode": false,
                                "RuntimeQuery": "",
                                "Fields": [
                                    {
                                        "FieldName": "id",
                                        "Type": "TEXT",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Ordinal": 0
                                    }
                                ],
                                "State": "c2bf3d67-3eb2-476e-9266-e8b7f3d11a3cdelete from attributes where analysis_id = ?id;",
                                "input": {
                                    "mapping": {
                                        "parameters": {
                                            "id": "=$flow.analysis_id"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"rowsAffected\":{\"type\":\"int\"}}}",
                                        "fe_metadata": "{\"type\":\"object\",\"properties\":{\"rowsAffected\":{\"type\":\"int\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "Code": 200
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "analysis_id",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "Code",
                            "type": "float64"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"analysis_id\":{\"type\":\"string\"}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Code\":{\"type\":\"number\"}}}"
                    }
                },
                "explicitReply": true
            }
        },
        {
            "id": "flow:Auth",
            "data": {
                "name": "Auth",
                "description": "Auth methods for LA activities",
                "links": [],
                "tasks": [
                    {
                        "id": "Authenticate",
                        "name": "Authenticate",
                        "description": "Authenticate in TIBCO Cloud and obtain TSC and Domain cookies.",
                        "activity": {
                            "ref": "#authenticate",
                            "input": {
                                "region": "=$property[\"Auth.region\"]",
                                "tenant": "bpm",
                                "username": "",
                                "password": "",
                                "clientID": "",
                                "version": "v1"
                            },
                            "schemas": {
                                "output": {
                                    "cookie": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"tsc\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"region\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"tsc\": \"tsc cookie value\", \"domain\": \"domain cookie value\", \"region\": \"region for the cookies\"}"
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [],
                    "output": [],
                    "fe_metadata": {}
                }
            }
        },
        {
            "id": "flow:TCM_UI_TO_DB",
            "data": {
                "name": "TCM_UI_TO_DB",
                "description": "listen event from UI and update Database",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "ParseJSONActivity",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "ParseJSONActivity",
                        "to": "LogMessage1",
                        "type": "expression",
                        "label": "ParseJSONActivitytoLogMessage1",
                        "value": "string.equalsIgnoreCase($activity[ParseJSONActivity].jsonObject.case_type, \"variants\")"
                    },
                    {
                        "id": 3,
                        "from": "LogMessage1",
                        "to": "updateVariantsCompliance",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "updateVariantsCompliance",
                        "to": "TCMMessagePublisher",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "TCMMessagePublisher",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "ParseJSONActivity",
                        "to": "LogMessage2",
                        "type": "expression",
                        "label": "ParseJSONActivitytoLogMessage2",
                        "value": "string.equalsIgnoreCase($activity[ParseJSONActivity].jsonObject.case_type, \"reference\")"
                    },
                    {
                        "id": 7,
                        "from": "LogMessage2",
                        "to": "updateVariantsReference",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "updateVariantsReference",
                        "to": "PublishOKRef",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "PublishOKRef",
                        "to": "Return1",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "ParseJSONActivity",
                        "to": "ThrowError",
                        "type": "exprOtherwise",
                        "label": "ParseJSONActivitytoThrowError"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": true,
                                "message": "=string.concat(\"Input MSG : \",$flow.text)"
                            }
                        }
                    },
                    {
                        "id": "ParseJSONActivity",
                        "name": "ParseJSONActivity",
                        "description": "Parses JSON string into JSON object",
                        "activity": {
                            "ref": "#parsejson",
                            "input": {
                                "validate": false,
                                "jsonString": "=$flow.text"
                            },
                            "schemas": {
                                "output": {
                                    "jsonObject": "schema://tcm_variants_inputs"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage1",
                        "name": "LogMessage1",
                        "description": "Simple Log Message Activity",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=$activity[ParseJSONActivity].jsonObject.ids",
                            "accumulate": false
                        },
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"updating variant id :\", string.tostring($iteration[value]))"
                            }
                        }
                    },
                    {
                        "id": "updateVariantsCompliance",
                        "name": "updateVariantsCompliance",
                        "description": "This activity executes update on a PostgreSQL database",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=$activity[ParseJSONActivity].jsonObject.ids",
                            "accumulate": false
                        },
                        "activity": {
                            "ref": "#update",
                            "input": {
                                "Connection": "conn://faf8e5b0-151e-11eb-ba34-7963a7f1be27",
                                "UpdateName": "",
                                "Query": "UPDATE variants_status\nSET analysis_id = ?analysis_id, \n    variant_id = ?variant_id, \n    label = ?label, \n    case_type = ?case_type, \n    case_state =?case_state, \n    timestamp= ?timestamp, \n    \"LACaseRef\" = ?LACaseRef\nwhere \n    analysis_id = ?analysis_id\nAND\n    variant_id = ?variant_id;",
                                "manualmode": false,
                                "RuntimeQuery": "",
                                "Fields": [
                                    {
                                        "FieldName": "analysis_id",
                                        "Type": "TEXT",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Ordinal": 1,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "variant_id",
                                        "Type": "INT8",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Ordinal": 2,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "label",
                                        "Type": "TEXT",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Ordinal": 3,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "case_type",
                                        "Type": "TEXT",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Ordinal": 4,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "case_state",
                                        "Type": "TEXT",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Ordinal": 5,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "timestamp",
                                        "Type": "TIMESTAMP",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Ordinal": 6,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "LACaseRef",
                                        "Type": "TEXT",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Ordinal": 7,
                                        "Value": true
                                    }
                                ],
                                "State": "42a0c6de-7f62-46fb-acf2-709788c59ffbUPDATE variants_status\nSET analysis_id = ?analysis_id, \n    variant_id = ?variant_id, \n    label = ?label, \n    case_type = ?case_type, \n    case_state =?case_state, \n    timestamp= ?timestamp, \n    \"LACaseRef\" = ?LACaseRef\nwhere \n    analysis_id = ?analysis_id\nAND\n    variant_id = ?variant_id;",
                                "input": {
                                    "mapping": {
                                        "parameters": {
                                            "variant_id": "=$iteration[value]",
                                            "timestamp": "=datetime.now()",
                                            "analysis_id": "=$activity[ParseJSONActivity].jsonObject.analysis_id",
                                            "label": "=$activity[ParseJSONActivity].jsonObject.label",
                                            "case_type": "=$activity[ParseJSONActivity].jsonObject.case_type",
                                            "case_state": "=$activity[ParseJSONActivity].jsonObject.LAcase_state",
                                            "LACaseRef": "=$activity[ParseJSONActivity].jsonObject.LAcase_ref"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"analysis_id\":{\"type\":\"string\"},\"variant_id\":{\"type\":\"integer\"},\"label\":{\"type\":\"string\"},\"case_type\":{\"type\":\"string\"},\"case_state\":{\"type\":\"string\"},\"timestamp\":{\"type\":\"string\",\"format\":\"time\"},\"LACaseRef\":{\"type\":\"string\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"analysis_id\":{\"type\":\"string\"},\"variant_id\":{\"type\":\"integer\"},\"label\":{\"type\":\"string\"},\"case_type\":{\"type\":\"string\"},\"case_state\":{\"type\":\"string\"},\"timestamp\":{\"type\":\"string\",\"format\":\"time\"},\"LACaseRef\":{\"type\":\"string\"}}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"rowsAffected\":{\"type\":\"int\"}}}",
                                        "fe_metadata": "{\"type\":\"object\",\"properties\":{\"rowsAffected\":{\"type\":\"int\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "TCMMessagePublisher",
                        "name": "TCMMessagePublisher",
                        "description": "This activity sends a message to TIBCO Cloud Messaging service",
                        "settings": {
                            "retryOnError": {
                                "count": 0,
                                "interval": 0
                            }
                        },
                        "activity": {
                            "ref": "#tcmpublisher",
                            "input": {
                                "tcmConnection": "conn://da68fbc0-2d7c-11eb-87f3-c963288d3c2a",
                                "destination": "=$property[\"MessagingDurableKeyUI\"]",
                                "url": "",
                                "authKey": "",
                                "message": {
                                    "mapping": {
                                        "status": "updated",
                                        "rowsAffected": "=$activity[updateVariantsCompliance].Output.rowsAffected",
                                        "analysis_id": "=$activity[ParseJSONActivity].jsonObject.analysis_id"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "message": "schema://tcm_variants_outputs"
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "analysis_id": "=$activity[ParseJSONActivity].jsonObject.analysis_id",
                                    "status": "updated",
                                    "rowsAffected": "=$activity[updateVariantsCompliance].Output.rowsAffected"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage2",
                        "name": "LogMessage2",
                        "description": "Simple Log Message Activity",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=$activity[ParseJSONActivity].jsonObject.ids",
                            "accumulate": false
                        },
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"Setting variant id : \", string.tostring($iteration[value]), \"as reference\")"
                            }
                        }
                    },
                    {
                        "id": "updateVariantsReference",
                        "name": "updateVariantsReference",
                        "description": "This activity executes update on a PostgreSQL database",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=$activity[ParseJSONActivity].jsonObject.ids",
                            "accumulate": false
                        },
                        "activity": {
                            "ref": "#update",
                            "input": {
                                "Connection": "conn://faf8e5b0-151e-11eb-ba34-7963a7f1be27",
                                "UpdateName": "",
                                "Query": "UPDATE variants_status\nSET analysis_id = ?analysis_id, \n    variant_id = ?variant_id, \n    timestamp= ?timestamp, \n    \"isReference\" = ?isreference\nwhere \n    analysis_id = ?analysis_id\nAND\n    variant_id = ?variant_id;",
                                "manualmode": false,
                                "RuntimeQuery": "",
                                "Fields": [
                                    {
                                        "FieldName": "isreference",
                                        "Type": "INT4",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Ordinal": 0
                                    },
                                    {
                                        "FieldName": "analysis_id",
                                        "Type": "TEXT",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Ordinal": 1,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "variant_id",
                                        "Type": "INT8",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Ordinal": 2,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "timestamp",
                                        "Type": "TIMESTAMP",
                                        "Selected": false,
                                        "Parameter": true,
                                        "isEditable": false,
                                        "Ordinal": 6,
                                        "Value": true
                                    },
                                    {
                                        "FieldName": "isReference",
                                        "Type": "INT4",
                                        "Selected": false,
                                        "Parameter": false,
                                        "isEditable": false,
                                        "Ordinal": 9,
                                        "Value": true
                                    }
                                ],
                                "State": "15f6cc00-93a8-4efb-8c7d-bb36324f5cabUPDATE variants_status\nSET analysis_id = ?analysis_id, \n    variant_id = ?variant_id, \n    timestamp= ?timestamp, \n    \"isReference\" = ?isreference\nwhere \n    analysis_id = ?analysis_id\nAND\n    variant_id = ?variant_id;",
                                "input": {
                                    "mapping": {
                                        "parameters": {
                                            "variant_id": "=$iteration[value]",
                                            "timestamp": "=datetime.now()",
                                            "isreference": "=$activity[ParseJSONActivity].jsonObject.isReference",
                                            "analysis_id": "=$activity[ParseJSONActivity].jsonObject.analysis_id"
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"isreference\":{\"type\":\"integer\"},\"analysis_id\":{\"type\":\"string\"},\"variant_id\":{\"type\":\"integer\"},\"timestamp\":{\"type\":\"string\",\"format\":\"time\"}}}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"definitions\":{},\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"isreference\":{\"type\":\"integer\"},\"analysis_id\":{\"type\":\"string\"},\"variant_id\":{\"type\":\"integer\"},\"timestamp\":{\"type\":\"string\",\"format\":\"time\"}}}}}"
                                    }
                                },
                                "output": {
                                    "Output": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"rowsAffected\":{\"type\":\"int\"}}}",
                                        "fe_metadata": "{\"type\":\"object\",\"properties\":{\"rowsAffected\":{\"type\":\"int\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PublishOKRef",
                        "name": "PublishOKRef",
                        "description": "This activity sends a message to TIBCO Cloud Messaging service",
                        "settings": {
                            "retryOnError": {
                                "count": 0,
                                "interval": 0
                            }
                        },
                        "activity": {
                            "ref": "#tcmpublisher",
                            "input": {
                                "tcmConnection": "conn://da68fbc0-2d7c-11eb-87f3-c963288d3c2a",
                                "destination": "=$property[\"MessagingDurableKeyUI\"]",
                                "url": "",
                                "authKey": "",
                                "message": {
                                    "mapping": {
                                        "status": "updated",
                                        "rowsAffected": "=$activity[updateVariantsReference].Output.rowsAffected",
                                        "analysis_id": "=$activity[ParseJSONActivity].jsonObject.analysis_id"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "message": "schema://tcm_variants_outputs"
                                }
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "analysis_id": "=$activity[ParseJSONActivity].jsonObject.analysis_id",
                                    "status": "updated",
                                    "rowsAffected": "=$activity[updateVariantsReference].Output.rowsAffected"
                                }
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "null message",
                                "data": "=$activity[ParseJSONActivity].jsonObject"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "text",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "analysis_id",
                            "type": "string"
                        },
                        {
                            "name": "status",
                            "type": "string"
                        },
                        {
                            "name": "rowsAffected",
                            "type": "integer"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"text\":{\"type\":\"string\"}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"analysis_id\":{\"type\":\"string\"},\"status\":{\"type\":\"string\"},\"rowsAffected\":{\"type\":\"integer\"}}}"
                    }
                }
            }
        },
        {
            "id": "flow:REST_UI_TO_TCM",
            "data": {
                "name": "REST_UI_TO_TCM",
                "description": "listen event from UI and update Database",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "GetCases",
                        "type": "expression",
                        "label": "Compliance",
                        "value": "$flow.type == \"compliance\""
                    },
                    {
                        "id": 2,
                        "from": "GetCases",
                        "to": "Mapper",
                        "type": "expression",
                        "label": "GetCasestoMapper",
                        "value": "array.count($activity[GetCases].getCaseResponseItem) >= 1"
                    },
                    {
                        "id": 3,
                        "from": "Mapper",
                        "to": "TCMMessagePublisher",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "TCMMessagePublisher",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "GetCases",
                        "to": "ThrowError",
                        "type": "exprOtherwise",
                        "label": "GetCasestoThrowError"
                    },
                    {
                        "id": 6,
                        "from": "LogMessage",
                        "to": "GetCasesImp",
                        "type": "expression",
                        "label": "improvement",
                        "value": "$flow.type == \"improvement\""
                    },
                    {
                        "id": 7,
                        "from": "GetCasesImp",
                        "to": "MapperImp",
                        "type": "expression",
                        "label": "GetCasesImptoMapperImp",
                        "value": "array.count($activity[GetCasesImp].getCaseResponseItem) >= 1"
                    },
                    {
                        "id": 8,
                        "from": "MapperImp",
                        "to": "TCMMessagePublisherImp",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "TCMMessagePublisherImp",
                        "to": "CopyOfReturn",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "GetCasesImp",
                        "to": "ThrowError1",
                        "type": "exprOtherwise",
                        "label": "GetCasesImptoThrowError1"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": true,
                                "message": "=string.concat(\"Input MSG : \",$flow.id)"
                            }
                        }
                    },
                    {
                        "id": "GetCases",
                        "name": "GetCases",
                        "description": "Activities created by TIBCO Labs",
                        "activity": {
                            "ref": "#getcases",
                            "settings": {
                                "security": "AccessToken"
                            },
                            "input": {
                                "region": "=$property[\"Auth.region\"]",
                                "accessToken": "=$property[\"Auth.oauth\"]",
                                "sandboxId": "=$property[\"Auth.sandboxID\"]",
                                "filter": "=\"applicationId eq \"+ $property[\"liveapps.discover_compliance_appid\"] +\" and typeId eq 1\"",
                                "select": "",
                                "skip": "",
                                "top": "",
                                "search": "=$flow.id",
                                "count": false,
                                "user": ""
                            },
                            "schemas": {
                                "input": {
                                    "cookie": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"tsc\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"tsc\": \"tsc cookie value\", \"domain\": \"domain cookie value\"}"
                                    }
                                },
                                "output": {
                                    "getCaseResponseItem": {
                                        "type": "json",
                                        "value": "{\"$schema\": \"http://json-schema.org/draft-07/schema\",\"$id\": \"http://example.com/example.json\",\"type\": \"array\",\"items\": {\"$id\": \"#/items\",\"type\": \"object\",\"properties\": {\"caseReference\": {\"$id\": \"#/items/properties/caseReference\",\"type\": \"string\"},\"caseData\": {\"$id\": \"#/items/properties/caseData\",\"type\": \"string\"},\"untaggedCasedata\": {\"$id\": \"#/items/properties/untaggedCasedata\",\"type\": \"string\"},\"summary\": {\"$id\": \"#/items/properties/summary\",\"type\": \"string\"},\"metadata\": {\"$id\": \"#/items/properties/metadata\",\"type\": \"object\",\"properties\": {\"createdBy\": {\"$id\": \"#/items/properties/metadata/properties/createdBy\",\"type\": \"string\"},\"creationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/creationTimestamp\",\"type\": \"string\"},\"modifiedBy\": {\"$id\": \"#/items/properties/metadata/properties/modifiedBy\",\"type\": \"string\"},\"modificationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/modificationTimestamp\",\"type\": \"string\"},\"lock\": {\"$id\": \"#/items/properties/metadata/properties/lock\",\"type\": \"boolean\"},\"lockType\": {\"$id\": \"#/items/properties/metadata/properties/lockType\",\"type\": \"string\"},\"lockedBy\": {\"$id\": \"#/items/properties/metadata/properties/lockedBy\",\"type\": \"string\"},\"msLockExpiry\": {\"$id\": \"#/items/properties/metadata/properties/msLockExpiry\",\"type\": \"string\"},\"msSystemTime\": {\"$id\": \"#/items/properties/metadata/properties/msSystemTime\",\"type\": \"string\"},\"markedForPurge\": {\"$id\": \"#/items/properties/metadata/properties/markedForPurge\",\"type\": \"boolean\"},\"applicationId\": {\"$id\": \"#/items/properties/metadata/properties/applicationId\",\"type\": \"string\"},\"typeId\": {\"$id\": \"#/items/properties/metadata/properties/typeId\",\"type\": \"string\"}}}}}}",
                                        "fe_metadata": "{\"$schema\": \"http://json-schema.org/draft-07/schema\",\"$id\": \"http://example.com/example.json\",\"type\": \"array\",\"items\": {\"$id\": \"#/items\",\"type\": \"object\",\"properties\": {\"caseReference\": {\"$id\": \"#/items/properties/caseReference\",\"type\": \"string\"},\"caseData\": {\"$id\": \"#/items/properties/caseData\",\"type\": \"string\"},\"untaggedCasedata\": {\"$id\": \"#/items/properties/untaggedCasedata\",\"type\": \"string\"},\"summary\": {\"$id\": \"#/items/properties/summary\",\"type\": \"string\"},\"metadata\": {\"$id\": \"#/items/properties/metadata\",\"type\": \"object\",\"properties\": {\"createdBy\": {\"$id\": \"#/items/properties/metadata/properties/createdBy\",\"type\": \"string\"},\"creationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/creationTimestamp\",\"type\": \"string\"},\"modifiedBy\": {\"$id\": \"#/items/properties/metadata/properties/modifiedBy\",\"type\": \"string\"},\"modificationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/modificationTimestamp\",\"type\": \"string\"},\"lock\": {\"$id\": \"#/items/properties/metadata/properties/lock\",\"type\": \"boolean\"},\"lockType\": {\"$id\": \"#/items/properties/metadata/properties/lockType\",\"type\": \"string\"},\"lockedBy\": {\"$id\": \"#/items/properties/metadata/properties/lockedBy\",\"type\": \"string\"},\"msLockExpiry\": {\"$id\": \"#/items/properties/metadata/properties/msLockExpiry\",\"type\": \"string\"},\"msSystemTime\": {\"$id\": \"#/items/properties/metadata/properties/msSystemTime\",\"type\": \"string\"},\"markedForPurge\": {\"$id\": \"#/items/properties/metadata/properties/markedForPurge\",\"type\": \"boolean\"},\"applicationId\": {\"$id\": \"#/items/properties/metadata/properties/applicationId\",\"type\": \"string\"},\"typeId\": {\"$id\": \"#/items/properties/metadata/properties/typeId\",\"type\": \"string\"}}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": "=coerce.toObject($activity[GetCases].getCaseResponseItem[0].caseData)"
                            },
                            "schemas": {
                                "input": {
                                    "input": "schema://compliance"
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"ShortDescription\": {\n      \"type\": \"string\"\n    },\n    \"LongDescription\": {\n      \"type\": \"string\"\n    },\n    \"Context\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"ContextType\": {\n          \"type\": \"string\"\n        },\n        \"ContextID\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"DataSourceName\": {\n      \"type\": \"string\"\n    },\n    \"DataSourceId\": {\n      \"type\": \"string\"\n    },\n    \"CommentsHistory\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"number\"\n          },\n          \"_value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"_id\",\n          \"_value\"\n        ]\n      }\n    },\n    \"state\": {\n      \"type\": \"string\"\n    },\n    \"ComplianceID\": {\n      \"type\": \"string\"\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"ShortDescription\": {\n      \"type\": \"string\"\n    },\n    \"LongDescription\": {\n      \"type\": \"string\"\n    },\n    \"Context\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"ContextType\": {\n          \"type\": \"string\"\n        },\n        \"ContextID\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"DataSourceName\": {\n      \"type\": \"string\"\n    },\n    \"DataSourceId\": {\n      \"type\": \"string\"\n    },\n    \"CommentsHistory\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"number\"\n          },\n          \"_value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"_id\",\n          \"_value\"\n        ]\n      }\n    },\n    \"state\": {\n      \"type\": \"string\"\n    },\n    \"ComplianceID\": {\n      \"type\": \"string\"\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "TCMMessagePublisher",
                        "name": "TCMMessagePublisher",
                        "description": "This activity sends a message to TIBCO Cloud Messaging service",
                        "settings": {
                            "retryOnError": {
                                "count": 0,
                                "interval": 0
                            }
                        },
                        "activity": {
                            "ref": "#tcmpublisher",
                            "input": {
                                "tcmConnection": "conn://da68fbc0-2d7c-11eb-87f3-c963288d3c2a",
                                "destination": "=$property[\"MessagingDurableKeyUI\"]",
                                "url": "",
                                "authKey": "",
                                "message": {
                                    "mapping": {
                                        "text": {
                                            "ids": "=array.create(coerce.toInt64($activity[Mapper].output.Context.ContextID))",
                                            "label": "Compliance",
                                            "case_type": "=$activity[Mapper].output.Context.ContextType",
                                            "LAcase_ref": "=$activity[GetCases].getCaseResponseItem[0].caseReference",
                                            "timestamp": "=datetime.currentDatetime()",
                                            "ref": 0,
                                            "analysis_id": "=$activity[Mapper].output.DataSourceId",
                                            "LAcase_state": "=$flow.state"
                                        },
                                        "event": "=$property[\"MessagingDurableKeyUI\"]"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "message": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"event\": {\n      \"type\": \"string\"\n    },\n    \"text\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"analysis_id\": {\n          \"type\": \"string\"\n        },\n        \"ids\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"number\"\n          }\n        },\n        \"label\": {\n          \"type\": \"string\"\n        },\n        \"case_type\": {\n          \"type\": \"string\"\n        },\n        \"LAcase_state\": {\n          \"type\": \"string\"\n        },\n        \"LAcase_ref\": {\n          \"type\": \"string\"\n        },\n        \"timestamp\": {\n          \"type\": \"string\"\n        },\n        \"ref\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"event\": {\n      \"type\": \"string\"\n    },\n    \"text\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"analysis_id\": {\n          \"type\": \"string\"\n        },\n        \"ids\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"number\"\n          }\n        },\n        \"label\": {\n          \"type\": \"string\"\n        },\n        \"case_type\": {\n          \"type\": \"string\"\n        },\n        \"LAcase_state\": {\n          \"type\": \"string\"\n        },\n        \"LAcase_ref\": {\n          \"type\": \"string\"\n        },\n        \"timestamp\": {\n          \"type\": \"string\"\n        },\n        \"ref\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "updated",
                                    "analysis_id": "=$activity[Mapper].output.DataSourceId",
                                    "code": 200
                                }
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "NOCASEFOUND"
                            }
                        }
                    },
                    {
                        "id": "GetCasesImp",
                        "name": "GetCasesImp",
                        "description": "Activities created by TIBCO Labs",
                        "activity": {
                            "ref": "#getcases",
                            "settings": {
                                "security": "AccessToken"
                            },
                            "input": {
                                "region": "=$property[\"Auth.region\"]",
                                "accessToken": "=$property[\"Auth.oauth\"]",
                                "sandboxId": "=$property[\"Auth.sandboxID\"]",
                                "filter": "=\"applicationId eq \"+ $property[\"liveapps.discover_improvement_appid\"] +\" and typeId eq 1\"",
                                "select": "",
                                "skip": "",
                                "top": "",
                                "search": "=$flow.id",
                                "count": false,
                                "user": ""
                            },
                            "schemas": {
                                "input": {
                                    "cookie": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"tsc\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"tsc\": \"tsc cookie value\", \"domain\": \"domain cookie value\"}"
                                    }
                                },
                                "output": {
                                    "getCaseResponseItem": {
                                        "type": "json",
                                        "value": "{\"$schema\": \"http://json-schema.org/draft-07/schema\",\"$id\": \"http://example.com/example.json\",\"type\": \"array\",\"items\": {\"$id\": \"#/items\",\"type\": \"object\",\"properties\": {\"caseReference\": {\"$id\": \"#/items/properties/caseReference\",\"type\": \"string\"},\"caseData\": {\"$id\": \"#/items/properties/caseData\",\"type\": \"string\"},\"untaggedCasedata\": {\"$id\": \"#/items/properties/untaggedCasedata\",\"type\": \"string\"},\"summary\": {\"$id\": \"#/items/properties/summary\",\"type\": \"string\"},\"metadata\": {\"$id\": \"#/items/properties/metadata\",\"type\": \"object\",\"properties\": {\"createdBy\": {\"$id\": \"#/items/properties/metadata/properties/createdBy\",\"type\": \"string\"},\"creationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/creationTimestamp\",\"type\": \"string\"},\"modifiedBy\": {\"$id\": \"#/items/properties/metadata/properties/modifiedBy\",\"type\": \"string\"},\"modificationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/modificationTimestamp\",\"type\": \"string\"},\"lock\": {\"$id\": \"#/items/properties/metadata/properties/lock\",\"type\": \"boolean\"},\"lockType\": {\"$id\": \"#/items/properties/metadata/properties/lockType\",\"type\": \"string\"},\"lockedBy\": {\"$id\": \"#/items/properties/metadata/properties/lockedBy\",\"type\": \"string\"},\"msLockExpiry\": {\"$id\": \"#/items/properties/metadata/properties/msLockExpiry\",\"type\": \"string\"},\"msSystemTime\": {\"$id\": \"#/items/properties/metadata/properties/msSystemTime\",\"type\": \"string\"},\"markedForPurge\": {\"$id\": \"#/items/properties/metadata/properties/markedForPurge\",\"type\": \"boolean\"},\"applicationId\": {\"$id\": \"#/items/properties/metadata/properties/applicationId\",\"type\": \"string\"},\"typeId\": {\"$id\": \"#/items/properties/metadata/properties/typeId\",\"type\": \"string\"}}}}}}",
                                        "fe_metadata": "{\"$schema\": \"http://json-schema.org/draft-07/schema\",\"$id\": \"http://example.com/example.json\",\"type\": \"array\",\"items\": {\"$id\": \"#/items\",\"type\": \"object\",\"properties\": {\"caseReference\": {\"$id\": \"#/items/properties/caseReference\",\"type\": \"string\"},\"caseData\": {\"$id\": \"#/items/properties/caseData\",\"type\": \"string\"},\"untaggedCasedata\": {\"$id\": \"#/items/properties/untaggedCasedata\",\"type\": \"string\"},\"summary\": {\"$id\": \"#/items/properties/summary\",\"type\": \"string\"},\"metadata\": {\"$id\": \"#/items/properties/metadata\",\"type\": \"object\",\"properties\": {\"createdBy\": {\"$id\": \"#/items/properties/metadata/properties/createdBy\",\"type\": \"string\"},\"creationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/creationTimestamp\",\"type\": \"string\"},\"modifiedBy\": {\"$id\": \"#/items/properties/metadata/properties/modifiedBy\",\"type\": \"string\"},\"modificationTimestamp\": {\"$id\": \"#/items/properties/metadata/properties/modificationTimestamp\",\"type\": \"string\"},\"lock\": {\"$id\": \"#/items/properties/metadata/properties/lock\",\"type\": \"boolean\"},\"lockType\": {\"$id\": \"#/items/properties/metadata/properties/lockType\",\"type\": \"string\"},\"lockedBy\": {\"$id\": \"#/items/properties/metadata/properties/lockedBy\",\"type\": \"string\"},\"msLockExpiry\": {\"$id\": \"#/items/properties/metadata/properties/msLockExpiry\",\"type\": \"string\"},\"msSystemTime\": {\"$id\": \"#/items/properties/metadata/properties/msSystemTime\",\"type\": \"string\"},\"markedForPurge\": {\"$id\": \"#/items/properties/metadata/properties/markedForPurge\",\"type\": \"boolean\"},\"applicationId\": {\"$id\": \"#/items/properties/metadata/properties/applicationId\",\"type\": \"string\"},\"typeId\": {\"$id\": \"#/items/properties/metadata/properties/typeId\",\"type\": \"string\"}}}}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "MapperImp",
                        "name": "MapperImp",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": "=coerce.toObject($activity[GetCasesImp].getCaseResponseItem[0].caseData)"
                            },
                            "schemas": {
                                "input": {
                                    "input": "schema://improvement"
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"ShortDescription\": {\n      \"type\": \"string\"\n    },\n    \"LongDescription\": {\n      \"type\": \"string\"\n    },\n    \"Context\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"ContextType\": {\n          \"type\": \"string\"\n        },\n        \"ContextID\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"DataSourceName\": {\n      \"type\": \"string\"\n    },\n    \"CommentsHistory\": {\n      \"type\": \"array\",\n      \"items\": {}\n    },\n    \"DataSourceId\": {\n      \"type\": \"string\"\n    },\n    \"state\": {\n      \"type\": \"string\"\n    },\n    \"ImprovementID\": {\n      \"type\": \"string\"\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"ShortDescription\": {\n      \"type\": \"string\"\n    },\n    \"LongDescription\": {\n      \"type\": \"string\"\n    },\n    \"Context\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"ContextType\": {\n          \"type\": \"string\"\n        },\n        \"ContextID\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"DataSourceName\": {\n      \"type\": \"string\"\n    },\n    \"CommentsHistory\": {\n      \"type\": \"array\",\n      \"items\": {}\n    },\n    \"DataSourceId\": {\n      \"type\": \"string\"\n    },\n    \"state\": {\n      \"type\": \"string\"\n    },\n    \"ImprovementID\": {\n      \"type\": \"string\"\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "TCMMessagePublisherImp",
                        "name": "TCMMessagePublisherImp",
                        "description": "This activity sends a message to TIBCO Cloud Messaging service",
                        "settings": {
                            "retryOnError": {
                                "count": 0,
                                "interval": 0
                            }
                        },
                        "activity": {
                            "ref": "#tcmpublisher",
                            "input": {
                                "tcmConnection": "conn://da68fbc0-2d7c-11eb-87f3-c963288d3c2a",
                                "destination": "=$property[\"MessagingDurableKeyUI\"]",
                                "url": "",
                                "authKey": "",
                                "message": {
                                    "mapping": {
                                        "text": {
                                            "ids": "=array.create(coerce.toInt64($activity[MapperImp].output.Context.ContextID))",
                                            "label": "Improvement",
                                            "case_type": "=$activity[MapperImp].output.Context.ContextType",
                                            "LAcase_ref": "=$activity[GetCasesImp].getCaseResponseItem[0].caseReference",
                                            "timestamp": "=datetime.currentDatetime()",
                                            "ref": 0,
                                            "analysis_id": "=$activity[MapperImp].output.DataSourceId",
                                            "LAcase_state": "=$flow.state"
                                        },
                                        "event": "=$property[\"MessagingDurableKeyUI\"]"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "message": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"event\": {\n      \"type\": \"string\"\n    },\n    \"text\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"analysis_id\": {\n          \"type\": \"string\"\n        },\n        \"ids\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"number\"\n          }\n        },\n        \"label\": {\n          \"type\": \"string\"\n        },\n        \"case_type\": {\n          \"type\": \"string\"\n        },\n        \"LAcase_state\": {\n          \"type\": \"string\"\n        },\n        \"LAcase_ref\": {\n          \"type\": \"string\"\n        },\n        \"timestamp\": {\n          \"type\": \"string\"\n        },\n        \"ref\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"event\": {\n      \"type\": \"string\"\n    },\n    \"text\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"analysis_id\": {\n          \"type\": \"string\"\n        },\n        \"ids\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"number\"\n          }\n        },\n        \"label\": {\n          \"type\": \"string\"\n        },\n        \"case_type\": {\n          \"type\": \"string\"\n        },\n        \"LAcase_state\": {\n          \"type\": \"string\"\n        },\n        \"LAcase_ref\": {\n          \"type\": \"string\"\n        },\n        \"timestamp\": {\n          \"type\": \"string\"\n        },\n        \"ref\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "CopyOfReturn",
                        "name": "CopyOfReturn",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "updated",
                                    "analysis_id": "=$activity[MapperImp].output.DataSourceId",
                                    "code": 200
                                }
                            }
                        }
                    },
                    {
                        "id": "ThrowError1",
                        "name": "ThrowError1",
                        "description": "Throws an Error",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "NOCASEFOUND"
                            }
                        }
                    }
                ],
                "errorHandler": {
                    "tasks": [
                        {
                            "id": "Sleep",
                            "name": "Sleep",
                            "description": "Simple sleep Activity",
                            "activity": {
                                "ref": "#sleep",
                                "input": {
                                    "IntervalTypeSetting": "Second",
                                    "IntervalSetting": 1,
                                    "Interval": 0
                                }
                            }
                        },
                        {
                            "id": "Return1",
                            "name": "Return1",
                            "description": "Simple Return Activity",
                            "activity": {
                                "ref": "#actreturn",
                                "settings": {
                                    "mappings": {
                                        "code": 200,
                                        "status": "NOCASEFOUND",
                                        "analysis_id": ""
                                    }
                                }
                            }
                        }
                    ],
                    "links": [
                        {
                            "id": 11,
                            "from": "Sleep",
                            "to": "Return1",
                            "type": "default"
                        }
                    ]
                },
                "metadata": {
                    "input": [
                        {
                            "name": "id",
                            "type": "string"
                        },
                        {
                            "name": "type",
                            "type": "string"
                        },
                        {
                            "name": "state",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "float64"
                        },
                        {
                            "name": "analysis_id",
                            "type": "string"
                        },
                        {
                            "name": "status",
                            "type": "string"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"state\":{\"type\":\"string\"}}}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"number\"},\"analysis_id\":{\"type\":\"string\"},\"status\":{\"type\":\"string\"}}}"
                    }
                },
                "explicitReply": true
            }
        }
    ],
    "properties": [
        {
            "name": "Messaging_Subscribtion_Key",
            "type": "string",
            "value": "discover"
        },
        {
            "name": "Auth.oauth",
            "type": "string",
            "value": "SECRET:<your secret/pass here>"
        },
        {
            "name": "Auth.region",
            "type": "string",
            "value": "EU"
        },
        {
            "name": "Auth.sandboxID",
            "type": "string",
            "value": "3100"
        },
        {
            "name": "MessagingDurableKeyBackend",
            "type": "string",
            "value": "discover_backend"
        },
        {
            "name": "MessagingDurableKeyUI",
            "type": "string",
            "value": "discover_actions"
        },
        {
            "name": "MessagingDurableKeyTCM",
            "type": "string",
            "value": "discover_tcm"
        },
        {
            "name": "PostgreSQL.discodevDB.Host",
            "type": "string",
            "value": "discover.cluster-<your endpoint here>.eu-west-1.rds.amazonaws.com"
        },
        {
            "name": "PostgreSQL.discodevDB.Port",
            "type": "float64",
            "value": 5432
        },
        {
            "name": "PostgreSQL.discodevDB.Database_Name",
            "type": "string",
            "value": "discodev"
        },
        {
            "name": "PostgreSQL.discodevDB.User",
            "type": "string",
            "value": "dev_rw"
        },
        {
            "name": "PostgreSQL.discodevDB.Password",
            "type": "string",
            "value": "SECRET:<your secret/pass here>"
        },
        {
            "name": "PostgreSQL.discodevDB.Maximum_Open_Connections",
            "type": "float64",
            "value": 0
        },
        {
            "name": "PostgreSQL.discodevDB.Maximum_Idle_Connections",
            "type": "float64",
            "value": 2
        },
        {
            "name": "PostgreSQL.discodevDB.Maximum_Connection_Lifetime",
            "type": "string",
            "value": 0
        },
        {
            "name": "liveapps.discover_analysis_appid",
            "type": "string",
            "value": "3550"
        },
        {
            "name": "liveapps.discover_compliance_appid",
            "type": "string",
            "value": "3753"
        },
        {
            "name": "liveapps.discover_improvement_appid",
            "type": "string",
            "value": "3754"
        },
        {
            "name": "liveapps.discover_analysis_abort_id",
            "type": "string",
            "value": "17917"
        },
        {
            "name": "liveapps.discover_analysis_ready_id",
            "type": "string",
            "value": "16728"
        },
        {
            "name": "liveapps.discover_analysis_status_id",
            "type": "string",
            "value": "18389"
        },
        {
            "name": "MessagingDurableKeyUIMain",
            "type": "string",
            "value": "discover_info"
        },
        {
            "name": "Messaging.tcm_discover.Connection_URL",
            "type": "string",
            "value": "wss://<your endpoint here>-apps.eu.messaging.cloud.tibco.com/channel"
        },
        {
            "name": "Messaging.tcm_discover.Authentication_Key",
            "type": "string",
            "value": "<your secret/pass here>"
        },
        {
            "name": "Messaging.tcm_discover.Timeout",
            "type": "float64",
            "value": 10
        },
        {
            "name": "Messaging.tcm_discover.AutoReconnectAttempts",
            "type": "float64",
            "value": 25
        },
        {
            "name": "Messaging.tcm_discover.AutoReconnectMaxDelay",
            "type": "float64",
            "value": 5
        }
    ],
    "schemas": {
        "CaseConfig": {
            "type": "json",
            "value": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"Name\": {\n      \"type\": \"string\",\n      \"default\": \"some name\"\n    },\n    \"Description\": {\n      \"type\": \"string\",\n      \"default\": \"some desc\"\n    },\n    \"ID\": {\n      \"type\": \"string\",\n      \"default\": \"1\"\n    },\n    \"caseRef\": {\n      \"type\": \"string\",\n      \"default\": \"000001\"\n    },\n    \"InputType\": {\n      \"type\": \"string\",\n      \"default\": \"csv\"\n    },\n    \"Organisation\": {\n      \"type\": \"string\",\n      \"default\": \"discover\"\n    },\n    \"DataSource\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"TDV\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"Query\": {\n              \"type\": \"string\",\n              \"default\": \"select * from\"\n            },\n            \"Table\": {\n              \"type\": \"string\",\n              \"default\": \"mytable\"\n            },\n            \"Database\": {\n              \"type\": \"string\",\n              \"default\": \"mydb\"\n            },\n            \"Domain\": {\n              \"type\": \"string\",\n              \"default\": \"composite\"\n            },\n            \"Site\": {\n              \"type\": \"string\",\n              \"default\": \"localshit_9400\"\n            },\n            \"Endpoint\": {\n              \"type\": \"string\",\n              \"default\": \"0.1.2.3:9402\"\n            },\n            \"PrimaryKey\": {\n              \"type\": \"string\",\n              \"default\": \"key\"\n            },\n            \"Partitions\": {\n              \"type\": \"number\",\n              \"default\": \"100\"\n            },\n            \"DateTimeFormat\": {\n              \"type\": \"string\",\n              \"default\": \"MM/dd/yyyy\"\n            }\n          }\n        },\n        \"File\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"FilePath\": {\n              \"type\": \"string\",\n              \"default\": \"/Users/fcenedes/Documents/github/labs-discover/target/test-classes/Purchase_requests.csv\"\n            },\n            \"FileName\": {\n              \"type\": \"string\",\n              \"default\": \"Purchase_requests.csv\"\n            },\n            \"UseFirstLineAsHeader\": {\n              \"type\": \"string\",\n              \"default\": \"true\"\n            },\n            \"Separator\": {\n              \"type\": \"string\",\n              \"default\": \";\"\n            },\n            \"QuoteChar\": {\n              \"type\": \"string\",\n              \"default\": \"\\\"\"\n            },\n            \"EscapeChar\": {\n              \"type\": \"string\",\n              \"default\": \"\\\\\"\n            },\n            \"Encoding\": {\n              \"type\": \"string\",\n              \"default\": \"utf-8\"\n            },\n            \"DateTimeFormat\": {\n              \"type\": \"string\",\n              \"default\": \"MM/dd/yyyy\"\n            }\n          }\n        }\n      }\n    },\n    \"Schema\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"default\": \"Order\"\n      }\n    },\n    \"EventMap\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"case_id\": {\n          \"type\": \"string\",\n          \"default\": \"Case_id\"\n        },\n        \"activity_id\": {\n          \"type\": \"string\",\n          \"default\": \"Activity\"\n        },\n        \"resource_id\": {\n          \"type\": \"string\",\n          \"default\": \"Resource\"\n        },\n        \"activity_start_time\": {\n          \"type\": \"string\",\n          \"default\": \"Time_stamp\"\n        },\n        \"activity_end_time\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"otherAttributes\": {\n          \"type\": \"string\",\n          \"default\": \"Supplier,Company,Order\"\n        }\n      }\n    },\n    \"Schedule\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"isSchedule\": {\n          \"type\": \"string\",\n          \"default\": \"False\"\n        },\n        \"Schedule\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        }\n      }\n    },\n    \"Endpoints\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Starts\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"activities\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"Ends\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"activities\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    },\n    \"ProcessMining\": {\n      \"type\": \"object\",\n      \"properties\" : {\n        \"Status\": {\n          \"type\": \"string\"\n        },\n        \"Progress\" : {\n          \"type\": \"number\"\n        },\n        \"Message\": {\n          \"type\": \"string\"\n        },\n        \"Timestamp\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  },\n  \"required\": []\n}",
            "fe_metadata": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"Name\": {\n      \"type\": \"string\",\n      \"default\": \"some name\"\n    },\n    \"Description\": {\n      \"type\": \"string\",\n      \"default\": \"some desc\"\n    },\n    \"ID\": {\n      \"type\": \"string\",\n      \"default\": \"1\"\n    },\n    \"caseRef\": {\n      \"type\": \"string\",\n      \"default\": \"000001\"\n    },\n    \"InputType\": {\n      \"type\": \"string\",\n      \"default\": \"csv\"\n    },\n    \"Organisation\": {\n      \"type\": \"string\",\n      \"default\": \"discover\"\n    },\n    \"DataSource\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"TDV\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"Query\": {\n              \"type\": \"string\",\n              \"default\": \"select * from\"\n            },\n            \"Table\": {\n              \"type\": \"string\",\n              \"default\": \"mytable\"\n            },\n            \"Database\": {\n              \"type\": \"string\",\n              \"default\": \"mydb\"\n            },\n            \"Domain\": {\n              \"type\": \"string\",\n              \"default\": \"composite\"\n            },\n            \"Site\": {\n              \"type\": \"string\",\n              \"default\": \"localshit_9400\"\n            },\n            \"Endpoint\": {\n              \"type\": \"string\",\n              \"default\": \"0.1.2.3:9402\"\n            },\n            \"PrimaryKey\": {\n              \"type\": \"string\",\n              \"default\": \"key\"\n            },\n            \"Partitions\": {\n              \"type\": \"number\",\n              \"default\": \"100\"\n            },\n            \"DateTimeFormat\": {\n              \"type\": \"string\",\n              \"default\": \"MM/dd/yyyy\"\n            }\n          }\n        },\n        \"File\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"FilePath\": {\n              \"type\": \"string\",\n              \"default\": \"/Users/fcenedes/Documents/github/labs-discover/target/test-classes/Purchase_requests.csv\"\n            },\n            \"FileName\": {\n              \"type\": \"string\",\n              \"default\": \"Purchase_requests.csv\"\n            },\n            \"UseFirstLineAsHeader\": {\n              \"type\": \"string\",\n              \"default\": \"true\"\n            },\n            \"Separator\": {\n              \"type\": \"string\",\n              \"default\": \";\"\n            },\n            \"QuoteChar\": {\n              \"type\": \"string\",\n              \"default\": \"\\\"\"\n            },\n            \"EscapeChar\": {\n              \"type\": \"string\",\n              \"default\": \"\\\\\"\n            },\n            \"Encoding\": {\n              \"type\": \"string\",\n              \"default\": \"utf-8\"\n            },\n            \"DateTimeFormat\": {\n              \"type\": \"string\",\n              \"default\": \"MM/dd/yyyy\"\n            }\n          }\n        }\n      }\n    },\n    \"Schema\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"default\": \"Order\"\n      }\n    },\n    \"EventMap\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"case_id\": {\n          \"type\": \"string\",\n          \"default\": \"Case_id\"\n        },\n        \"activity_id\": {\n          \"type\": \"string\",\n          \"default\": \"Activity\"\n        },\n        \"resource_id\": {\n          \"type\": \"string\",\n          \"default\": \"Resource\"\n        },\n        \"activity_start_time\": {\n          \"type\": \"string\",\n          \"default\": \"Time_stamp\"\n        },\n        \"activity_end_time\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"otherAttributes\": {\n          \"type\": \"string\",\n          \"default\": \"Supplier,Company,Order\"\n        }\n      }\n    },\n    \"Schedule\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"isSchedule\": {\n          \"type\": \"string\",\n          \"default\": \"False\"\n        },\n        \"Schedule\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        }\n      }\n    },\n    \"Endpoints\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Starts\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"activities\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"Ends\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"activities\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    },\n    \"ProcessMining\": {\n      \"type\": \"object\",\n      \"properties\" : {\n        \"Status\": {\n          \"type\": \"string\"\n        },\n        \"Progress\" : {\n          \"type\": \"number\"\n        },\n        \"Message\": {\n          \"type\": \"string\"\n        },\n        \"Timestamp\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  },\n  \"required\": []\n}"
        },
        "tcm_variants_inputs": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"analysis_id\": {\n            \"type\": \"string\"\n        },\n        \"ids\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"number\"\n            }\n        },\n        \"label\": {\n            \"type\": \"string\"\n        },\n        \"case_type\": {\n            \"type\": \"string\"\n        },\n        \"LAcase_state\": {\n            \"type\": \"string\"\n        },\n        \"LAcase_ref\": {\n            \"type\": \"string\"\n        },\n        \"timestamp\": {\n            \"type\": \"string\"\n        },\n        \"isReference\": {\n            \"type\": \"number\"\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"analysis_id\": {\n            \"type\": \"string\"\n        },\n        \"ids\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"number\"\n            }\n        },\n        \"label\": {\n            \"type\": \"string\"\n        },\n        \"case_type\": {\n            \"type\": \"string\"\n        },\n        \"LAcase_state\": {\n            \"type\": \"string\"\n        },\n        \"LAcase_ref\": {\n            \"type\": \"string\"\n        },\n        \"timestamp\": {\n            \"type\": \"string\"\n        },\n        \"isReference\": {\n            \"type\": \"number\"\n        }\n    }\n}"
        },
        "tcm_variants_outputs": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"analysis_id\": {\n            \"type\": \"string\"\n        },\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"rowsAffected\":{\n            \"type\":\"integer\"\n        }\n        \n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"analysis_id\": {\n            \"type\": \"string\"\n        },\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"rowsAffected\":{\n            \"type\":\"integer\"\n        }\n        \n    }\n}"
        },
        "compliance": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"ShortDescription\": {\n            \"type\": \"string\"\n        },\n        \"LongDescription\": {\n            \"type\": \"string\"\n        },\n        \"Context\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"ContextType\": {\n                    \"type\": \"string\"\n                },\n                \"ContextID\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"DataSourceName\": {\n            \"type\": \"string\"\n        },\n        \"DataSourceId\": {\n            \"type\": \"string\"\n        },\n        \"CommentsHistory\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"_id\": {\n                        \"type\": \"number\"\n                    },\n                    \"_value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"_id\",\n                    \"_value\"\n                ]\n            }\n        },\n        \"state\": {\n            \"type\": \"string\"\n        },\n        \"ComplianceID\": {\n            \"type\": \"string\"\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"ShortDescription\": {\n            \"type\": \"string\"\n        },\n        \"LongDescription\": {\n            \"type\": \"string\"\n        },\n        \"Context\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"ContextType\": {\n                    \"type\": \"string\"\n                },\n                \"ContextID\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"DataSourceName\": {\n            \"type\": \"string\"\n        },\n        \"DataSourceId\": {\n            \"type\": \"string\"\n        },\n        \"CommentsHistory\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"_id\": {\n                        \"type\": \"number\"\n                    },\n                    \"_value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"_id\",\n                    \"_value\"\n                ]\n            }\n        },\n        \"state\": {\n            \"type\": \"string\"\n        },\n        \"ComplianceID\": {\n            \"type\": \"string\"\n        }\n    }\n}"
        },
        "improvement": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"ShortDescription\": {\n            \"type\": \"string\"\n        },\n        \"LongDescription\": {\n            \"type\": \"string\"\n        },\n        \"Context\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"ContextType\": {\n                    \"type\": \"string\"\n                },\n                \"ContextID\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"DataSourceName\": {\n            \"type\": \"string\"\n        },\n        \"CommentsHistory\": {\n            \"type\": \"array\",\n            \"items\": {}\n        },\n        \"DataSourceId\": {\n            \"type\": \"string\"\n        },\n        \"state\": {\n            \"type\": \"string\"\n        },\n        \"ImprovementID\": {\n            \"type\": \"string\"\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"ShortDescription\": {\n            \"type\": \"string\"\n        },\n        \"LongDescription\": {\n            \"type\": \"string\"\n        },\n        \"Context\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"ContextType\": {\n                    \"type\": \"string\"\n                },\n                \"ContextID\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"DataSourceName\": {\n            \"type\": \"string\"\n        },\n        \"CommentsHistory\": {\n            \"type\": \"array\",\n            \"items\": {}\n        },\n        \"DataSourceId\": {\n            \"type\": \"string\"\n        },\n        \"state\": {\n            \"type\": \"string\"\n        },\n        \"ImprovementID\": {\n            \"type\": \"string\"\n        }\n    }\n}"
        },
        "tcm": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"text\": {\n            \"type\": \"string\"\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"text\": {\n            \"type\": \"string\"\n        }\n    }\n}"
        },
        "tcmBackendSchema": {
            "type": "json",
            "value": "{\n    \"type\": \"object\",\n    \"title\": \"MessageSubscriber\",\n    \"properties\": {\n                \"caseRef\": {\n                    \"type\": \"string\"\n                },\n                \"analysis_id\": {\n                    \"type\": \"string\"\n                },\n                \"organisation\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                },\n                \"message\": {\n                    \"type\": \"string\"\n                },\n                \"progress\": {\n                    \"type\": \"number\"\n                },\n                \"timestamp\": {\n                    \"type\": \"string\"\n                }\n    }\n}",
            "fe_metadata": "{\n    \"type\": \"object\",\n    \"title\": \"MessageSubscriber\",\n    \"properties\": {\n                \"caseRef\": {\n                    \"type\": \"string\"\n                },\n                \"analysis_id\": {\n                    \"type\": \"string\"\n                },\n                \"organisation\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                },\n                \"message\": {\n                    \"type\": \"string\"\n                },\n                \"progress\": {\n                    \"type\": \"number\"\n                },\n                \"timestamp\": {\n                    \"type\": \"string\"\n                }\n    }\n}"
        }
    },
    "connections": {
        "da68fbc0-2d7c-11eb-87f3-c963288d3c2a": {
            "id": "da68fbc0-2d7c-11eb-87f3-c963288d3c2a",
            "name": "tcm_discover",
            "ref": "#tcm",
            "isGlobal": false,
            "settings": {
                "name": "tcm_discover",
                "description": "",
                "url": "=$property[\"Messaging.tcm_discover.Connection_URL\"]",
                "authKey": "=$property[\"Messaging.tcm_discover.Authentication_Key\"]",
                "timeout": "=$property[\"Messaging.tcm_discover.Timeout\"]",
                "autoReconnectAttempts": "=$property[\"Messaging.tcm_discover.AutoReconnectAttempts\"]",
                "autoReconnectMaxDelay": "=$property[\"Messaging.tcm_discover.AutoReconnectMaxDelay\"]"
            }
        },
        "faf8e5b0-151e-11eb-ba34-7963a7f1be27": {
            "id": "faf8e5b0-151e-11eb-ba34-7963a7f1be27",
            "name": "discodevDB",
            "ref": "#connection",
            "isGlobal": false,
            "settings": {
                "name": "discodevDB",
                "description": "",
                "host": "=$property[\"PostgreSQL.discodevDB.Host\"]",
                "port": "=$property[\"PostgreSQL.discodevDB.Port\"]",
                "databaseName": "=$property[\"PostgreSQL.discodevDB.Database_Name\"]",
                "user": "=$property[\"PostgreSQL.discodevDB.User\"]",
                "password": "=$property[\"PostgreSQL.discodevDB.Password\"]",
                "maxopenconnection": "=$property[\"PostgreSQL.discodevDB.Maximum_Open_Connections\"]",
                "maxidleconnection": "=$property[\"PostgreSQL.discodevDB.Maximum_Idle_Connections\"]",
                "connmaxlifetime": "=$property[\"PostgreSQL.discodevDB.Maximum_Connection_Lifetime\"]",
                "onprem": false
            }
        }
    },
    "contrib": "W3sicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9mbG9nby1tZXNzYWdpbmcuZ2l0L01lc3NhZ2luZyIsInMzbG9jYXRpb24iOiJUaWJjby9NZXNzYWdpbmcifSx7InJlZiI6ImdpdC50aWJjby5jb20vZ2l0L3Byb2R1Y3QvaXBhYXMvd2ktY29udHJpYi5naXQvY29udHJpYnV0aW9ucy9HZW5lcmFsIiwiczNsb2NhdGlvbiI6IlRpYmNvL0dlbmVyYWwifSx7InJlZiI6ImdpdGh1Yi5jb20vcHJvamVjdC1mbG9nby9jb250cmliL2FjdGl2aXR5L2Vycm9yIiwiczNsb2NhdGlvbiI6IntVU0VSSUR9L0RlZmF1bHQvYWN0aXZpdHkvZXJyb3IifSx7InJlZiI6ImdpdGh1Yi5jb20vVElCQ09Tb2Z0d2FyZS9UQ1NUSy1HT2xhbmcvbGl2ZWFwcHMiLCJzM2xvY2F0aW9uIjoie1VTRVJJRH0vbGl2ZWFwcHMifSx7InJlZiI6ImdpdC50aWJjby5jb20vZ2l0L3Byb2R1Y3QvaXBhYXMvd2ktcG9zdGdyZXMuZ2l0L3NyYy9hcHAvUG9zdGdyZVNRTCIsInMzbG9jYXRpb24iOiJUaWJjby9Qb3N0Z3JlU1FMIn0seyJyZWYiOiJnaXRodWIuY29tL1RJQkNPU29mdHdhcmUvVENTVEstR09sYW5nL3RpYmNvY2xvdWQiLCJzM2xvY2F0aW9uIjoie1VTRVJJRH0vdGliY29jbG91ZCJ9XQ==",
    "fe_metadata": "UEsDBAoAAAAIABd0eVGrqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACAAXdHlRq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}
