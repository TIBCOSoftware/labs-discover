# suppress inspection "UnusedProperty" for whole file
Cloud_Properties_Version=V2
# |------------------------------------------------|
# |  T I B C O    C L O U D   P R O P E R T I E S  |
# | This file contains all the settings to         |
# | connect, build and create TIBCO Cloud Starters |
# |------------------------------------------------|

# Use:
#  US Cloud (Orgeon) - US
#  EU Cloud (Orgeon) - EU
# AUS Cloud (Orgeon) - AU
# Options: US | EU | AU
CloudLogin.Region=EU
# Optional, if provided it uses a different cloud URL than cloud.tibco.com
# CloudLogin.Cloud_Location=cloud.tibco.com

# MVP DEV
CloudLogin.email=
CloudLogin.pass=
CloudLogin.clientID=

# Workspace Details
App_Name=discover-app
App_Type=Custom
Workspace_TMPFolder=./tmp/

# Build command to use: Options: HASHROUTING | NON-HASHROUTING | <a custom command (example: ng build --prod )>
BUILD_COMMAND=NON-HASHROUTING

# GIT Repository Locations
GIT_Source_TCSTLocation=https://github.com/TIBCOSoftware/TCSDK-Angular
# Use the LATEST tag for the latest version, use TCSTK-Angular-Full-V1.0.3 for the latest released version
GIT_Tag_TCST=LATEST
#GIT_Tag_TCST=TCSTK-Angular-Full-V1.0.3
TCSTLocation=./tmp/TCSDK-Angular/
TCSTDebugPackages=@tibco-tcstk/tc-core-lib @tibco-tcstk/tc-forms-lib @tibco-tcstk/tc-liveapps-lib @tibco-tcstk/tc-messaging-lib

# Scope of the shared state to manage (all shared states starting with this value will be manged)
#  Use ''(empty) or APPLICATION for the current application. Use * for all values, or use a specific value to manage that scope.
#  ( <Scope> | APPLICATION | * )
#Shared_State_Filter=processdiscovery2
Shared_State_Filter=*
# The type of shared state to look at (PUBLIC | SHARED | PRIVATE)
Shared_State_Type=SHARED

#Shared_State_Scope=TestCS1
#Shared_State_Type=PRIVATE
# Folder used for Shared State imports and exports
Shared_State_Folder=./Shared_State/
# Double check actions on shared state (YES | NO)
Shared_State_Double_Check=YES

# Properties for Case Management
Case_Folder=./Cases/

# Use Debugging
Use_Debug=false

# On the build should a cloud descriptor file need to be added (this can also be done manually with the "tcli generate-cloud-descriptor" command).
# Allowed values: (YES | NO)
Add_Descriptor=YES
# Add a timestamp to the version in the descriptor (for example 1.0.01591605316)
# Allowed values: (YES | NO)
Add_Descriptor_Timestamp=YES
# Location of the descriptor file
Descriptor_File=./src/assets/cloudstarter.json

# Name of the OAUTH token to be generated.
# CloudLogin.OAUTH_Generate_Token_Name=
# Comma separated list of tenants for which the OAUTH Token gets generated. (Options: TSC,BPM,TCDS,TCE,TCI,TCM)
#  TSC: General Cloud Authentication
#  BPM: LiveApps Authentication
# TCDS: TIBCO Cloud Data Streams Authentication
#  TCE: TIBCO Cloud Events Authentication
#  TCI: TIBCO Cloud Integration Authentication
#  TCM: TIBCO Cloud Messaging Authentication
# NOTE: You need to be part of the specified subscription.
#CloudLogin.OAUTH_Generate_For_Tenants=TSC,BPM
CloudLogin.OAUTH_Generate_For_Tenants=TSC,BPM,TCE,TCI,TCM
# Number of Hours the generated OAUTH token should be valid.
CloudLogin.OAUTH_Generate_Valid_Hours=336
# [User: ][Org: ][expiry]Token:
# CloudLogin.OAUTH_Token2=[Token Name: ][User: ][Org: ][Scope: ][Expiry Date: ]Token:

# Number of hours that the OAUTH Token should be valid for (168 hours is 1 week), Checked on Startup and on with the validate-and-rotate-oauth-token task.
CloudLogin.OAUTH_Required_Hours_Valid=168

# Export tables to CSV files. Possible values YES | NO
Table_Export_To_CSV=NO

# Folder to export the CSV files to.
Table_Export_Folder=./table-exports/

# Prefix to use for the export to table CSV files.
Table_Export_File_Prefix=table-export-

# Which tables to export, Possible values: ALL (OR any of) cloud-starters,cloud-starter-links,cloud-starter-details,live-apps,shared-states
Table_Export_Tables=ALL

# The location for exports and imports of the LiveApps organization folders
LA_Organization_Folder=./LA_Organization_Folder/

# The location of the TIBCLI Executable (including the executable name, for example: /folder/tibcli)
TIBCLI_Location=tibcli





