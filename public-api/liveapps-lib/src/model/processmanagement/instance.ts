/**
 * Business Process Management Service
 * The TIBCO(R) Live Apps Business Process Management Service manages the following resources:  * __Case Creator processes__: A Case Creator process is a process definition containing the business logic used to create a Case - this may simply be a single step process that provides a form for a user to complete, or a more involved sequence of steps. An application designer creates at least one Case Creator process when they create an application in Live Apps Designer. A user creates a Process Instance when they use Live Apps Case Manager to start a Case.     * __Case Action processes__: A Case Action process is a process definition containing the business logic used to execute some sort of unscheduled action on an active Case. An application designer creates as many Case Action processes as they need when they create an application in Live Apps Designer. A user creates a Process Instance when they use Live Apps Case Manager to execute an Action on an existing Case.    * __Process Instances__: A Process Instance is a particular instance of a Case Creator process or a Case Action process.   * Process Instance __States__: A Process Instance is, at any time, in one of the following States: STARTED, ACTIVE, COMPLETED, DELAYED, CANCELLED, HALTED or UNKNOWN. Process Instance States are system-defined values representing logical stages in the lifecycle of a process and are used by every Process Instance.     Note: Process Instance States should not be confused with Case states, which are application-defined values representing logical stages in the lifecycle of a Case. An application designer creates whatever Case states they need when they create an application in Live Apps Designer. They can configure the application to only allow users to execute a particular Case Action (that is, start a Process Instance of a Case Action process) when a Case is in a particular (Case) state. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: liveapps@tibco.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


/**
 * Summary information about a Process Instance (of a Case Creator or Case Action process).
 */
export interface Instance { 
    /**
     * The unique id of the Process Instance.
     */
    id: string;
    /**
     * The Case Reference of the Case that is associated with the Process Instance.
     */
    caseReference: string;
    /**
     * The id of the application in which the Case Creator or Case Action process is defined.
     */
    applicationId: string;
    /**
     * The name of the application in which the Case Creator or Case Action process is defined.
     */
    applicationName: string;
    /**
     * The internal name of the application in which the Case Creator or Case Action process is defined.
     */
    applicationInternalName: string;
    /**
     * The id of the Case Creator or Case Action process from which the Process Instance was started.
     */
    processId: string;
    /**
     * The name of the Case Creator or Case Action process from which the Process Instance was started.
     */
    processName: string;
    /**
     * The internal name of the Case Creator or Case Action process from which the Process Instance was started.
     */
    processInternalName: string;
    /**
     * The version of the application in which the Case Creator or Case Action process is defined.
     */
    version: string;
    /**
     * The current State of the Process Instance.
     */
    state: InstanceStateEnum;
    /**
     * The date/time at which the Process Instance started.
     */
    timeStarted: string;
    /**
     * The date/time at which the Process Instance completed (if it has completed).
     */
    timeCompleted: string;
}

// export namespace Instance {
    export type InstanceStateEnum = 'STARTING' | 'ACTIVE' | 'COMPLETED' | 'CANCELLED' | 'HALTED' | 'UNKNOWN' | 'DELAYED';
    export const StateEnum = {
        STARTING: 'STARTING' as InstanceStateEnum,
        ACTIVE: 'ACTIVE' as InstanceStateEnum,
        COMPLETED: 'COMPLETED' as InstanceStateEnum,
        CANCELLED: 'CANCELLED' as InstanceStateEnum,
        HALTED: 'HALTED' as InstanceStateEnum,
        UNKNOWN: 'UNKNOWN' as InstanceStateEnum,
        DELAYED: 'DELAYED' as InstanceStateEnum
    };
// }
