{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAEA,kEAA+D;AAC/D,sDAAmD;AACnD,gFAA6E;AAC7E,6DAA0D;AAG1D,sFAAmF;AAEnF,4EAA4E;AAC5E,eAAe;AACf,4EAA4E;AAE5E,8CAA4B;AAE5B,kDAAgC;AAChC,yDAAuC;AACvC,mDAAiC;AACjC,wDAAsC;AACtC,0DAAwC;AACxC,yDAAuC;AACvC,0DAAwC;AACxC,2DAAyC;AACzC,kDAAgC;AAChC,0DAAwC;AACxC,qDAAmC;AACnC,kDAAgC;AAChC,mDAAiC;AACjC,qDAAmC;AACnC,0DAAwC;AACxC,2DAAyC;AACzC,uDAAqC;AACrC,0DAAwC;AACxC,6DAA2C;AAC3C,uDAAqC;AACrC,qDAAmC;AACnC,yDAAuC;AACvC,qDAAmC;AACnC,0DAAwC;AACxC,oDAAkC;AAClC,qDAAmC;AACnC,oDAAkC;AAClC,mDAAiC;AACjC,kDAAgC;AAChC,yDAAuC;AACvC,0DAAwC;AACxC,uDAAqC;AACrC,qDAAmC;AACnC,kDAAgC;AAChC,kDAAgC;AAChC,4EAA0D;AAC1D,sDAAoC;AACpC,2DAAyC;AACzC,oDAAkC;AAClC,2DAAyC;AACzC,4DAA0C;AAC1C,uDAAqC;AACrC,wDAAsC;AACtC,6DAA2C;AAE3C,kEAAgD;AAChD,mEAAiD;AACjD,oEAAkD;AAElD,yDAAuC;AACvC,mEAAiD;AACjD,+DAA6C;AAC7C,8DAA4C;AAC5C,kEAAgD;AAChD,qEAAmD;AACnD,6DAA2C;AAC3C,iEAA+C;AAE/C,8EAA4D;AAC5D,mFAAiE;AACjE,sEAAoD;AACpD,yEAAuD;AACvD,4DAA0C;AAC1C,gEAA8C;AAC9C,iEAA+C;AAC/C,gEAA8C;AAC9C,2DAAyC;AACzC,oEAAkD;AAClD,yDAAuC;AAEvC,8DAA4C;AAC5C,6DAA2C;AAC3C,gDAA8B;AAC9B,2CAAyB;AACzB,yDAAuC;AAEvC,sDAAoC;AACpC,iEAA+C;AAC/C,yDAAuC;AAEvC,4EAA4E;AAC5E,iBAAiB;AACjB,4EAA4E;AAE5E;;;GAGG;AACH,SAAgB,sBAAsB;IACpC,IAAI,CAAE,MAAc,CAAC,qCAAqC;QACvD,MAAc,CAAC,qCAAqC,GAAG,IAAI,yCAAmB,EAAE,CAAC;IAEpF,OAAQ,MAAc,CAAC,qCAAqC,CAAC;AAC/D,CAAC;AALD,wDAKC;AAED;;GAEG;AACH,SAAgB,gBAAgB,CAAI,aAAgB,EAAE,OAAmC;IACvF,MAAM,MAAM,GAAG,IAAI,6BAAa,CAAC,aAAa,CAAC,CAAC;IAChD,OAAO,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACvC,CAAC;AAHD,4CAGC;AAED;;GAEG;AACH,SAAgB,mBAAmB,CAAC,OAAmC;IACrE,MAAM,MAAM,GAAG,IAAI,6BAAa,EAAE,CAAC;IACnC,OAAO,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACvC,CAAC;AAHD,kDAGC;AAED;;GAEG;AACH,SAAgB,YAAY,CAAI,MAAS,EAAE,OAAmC;IAC5E,MAAM,MAAM,GAAG,IAAI,qBAAS,CAAC,MAAM,CAAC,CAAC;IACrC,OAAO,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACvC,CAAC;AAHD,oCAGC;AAED;;GAEG;AACH,SAAgB,eAAe,CAAC,OAAmC;IACjE,MAAM,MAAM,GAAG,IAAI,qBAAS,EAAE,CAAC;IAC/B,OAAO,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACvC,CAAC;AAHD,0CAGC;AAED;;GAEG;AACH,SAAgB,YAAY,CAAuB,MAAS,EAAE,OAAmC;IAC/F,cAAc,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAChC,OAAO,MAAM,CAAC,GAAG,CAAC;AACpB,CAAC;AAHD,oCAGC;AAED;;GAEG;AACH,SAAgB,cAAc,CAAuB,MAAS,EAAE,UAAqC,EAAE;IACrG,sEAAsE;IACtE,IAAI,iBAA6B,CAAC;IAClC,IAAI,OAAO,IAAI,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,CAAC,MAAM,EAAE;QAChE,iBAAiB,GAAI,OAAO,CAAC,WAAqB,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,YAAY,QAAQ,CAAC,CAAC;QACxG,MAAM,cAAc,GAAI,OAAO,CAAC,WAAqB,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,UAAU,KAAK,QAAQ,CAAC,CAAC;QAC3G,iBAAiB,CAAC,IAAI,CAAC,GAAG,2DAA4B,CAAC,cAAc,CAAC,CAAC,CAAC;KACzE;IACD,IAAI,iBAA6B,CAAC;IAClC,IAAI,OAAO,IAAI,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,CAAC,MAAM,EAAE;QAChE,iBAAiB,GAAI,OAAO,CAAC,WAAqB,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,YAAY,QAAQ,CAAC,CAAC;QACxG,MAAM,cAAc,GAAI,OAAO,CAAC,WAAqB,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,UAAU,KAAK,QAAQ,CAAC,CAAC;QAC3G,iBAAiB,CAAC,IAAI,CAAC,GAAG,2DAA4B,CAAC,cAAc,CAAC,CAAC,CAAC;KACzE;IACD,IAAI,kBAA8B,CAAC;IACnC,IAAI,OAAO,IAAI,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE;QAClE,kBAAkB,GAAI,OAAO,CAAC,YAAsB,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,YAAY,QAAQ,CAAC,CAAC;QAC1G,MAAM,eAAe,GAAI,OAAO,CAAC,YAAsB,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,UAAU,KAAK,QAAQ,CAAC,CAAC;QAC7G,kBAAkB,CAAC,IAAI,CAAC,GAAG,2DAA4B,CAAC,eAAe,CAAC,CAAC,CAAC;KAC3E;IAED,IAAI,OAAO,IAAI,OAAO,CAAC,WAAW,KAAK,SAAS,EAAE;QAChD,MAAM,CAAC,eAAe,GAAG,OAAO,CAAC,WAAW,CAAC;KAC9C;SAAM;QACL,MAAM,CAAC,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,CAAC;KAChE;IAED,IAAI,OAAO,CAAC,mBAAmB,KAAK,SAAS,EAAE;QAC7C,MAAM,CAAC,6BAA6B,GAAG,OAAO,CAAC,mBAAmB,CAAC;KACpE;SAAM;QACL,MAAM,CAAC,6BAA6B,GAAG,IAAI,CAAC;KAC7C;IAED,IAAI,OAAO,CAAC,gBAAgB,KAAK,SAAS,EAAE;QAC1C,MAAM,CAAC,mBAAmB,GAAG,OAAO,CAAC,gBAAgB,CAAC;KACvD;SAAM;QACL,MAAM,CAAC,mBAAmB,GAAG,IAAI,CAAC;KACnC;IAED,IAAI,OAAO,CAAC,UAAU,KAAK,SAAS,EAAE;QACpC,MAAM,CAAC,gBAAgB,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC;QAC/C,IAAI,OAAO,CAAC,UAAU,YAAY,MAAM;YAAE,MAAM,CAAC,iBAAiB,GAAG,OAAO,CAAC,UAA+B,CAAC;KAC9G;SAAM;QACL,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC;KAChC;IAED,MAAM,CAAC,4BAA4B,GAAG,OAAO,CAAC,4BAA4B,CAAC;IAC3E,MAAM,CAAC,4BAA4B,GAAG,OAAO,CAAC,4BAA4B,CAAC;IAE3E,IAAI,OAAO,CAAC,kBAAkB,KAAK,SAAS;QAAE,MAAM,CAAC,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC;IAErG,IAAI,OAAO,CAAC,WAAW,KAAK,SAAS;QAAE,MAAM,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;IAEhF,IAAI,OAAO,CAAC,kBAAkB,KAAK,SAAS;QAAE,MAAM,CAAC,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC;IAErG,IAAI,OAAO,CAAC,oBAAoB,KAAK,SAAS;QAAE,MAAM,CAAC,oBAAoB,GAAG,OAAO,CAAC,oBAAoB,CAAC;IAE3G,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;IAE3B,oCAAoC;IACpC,IAAI,uCAAkB,CAAC,MAAM,EAAE,OAAO,CAAC;SACpC,UAAU,EAAE;SACZ,oBAAoB,CAAC,kBAAkB,CAAC;SACxC,mBAAmB,CAAC,QAAQ,EAAE,iBAAiB,CAAC;SAChD,mBAAmB,CAAC,iBAAiB,CAAC;SACtC,mBAAmB,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC,CAAC,8CAA8C;AACpG,CAAC;AAlED,wCAkEC;AAED;;GAEG;AACH,SAAgB,oBAAoB,CAAC,OAAiC;IACpE,OAAO,UAAU,MAAc,EAAE,MAAc,EAAE,KAAa;QAC5D,sBAAsB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;YACnC,IAAI,EAAE,kBAAkB;YACxB,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,SAAS,EAAE,OAAO,CAAC,KAAK;SACzB,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAZD,oDAYC","sourcesContent":["import { CustomParameterDecorator } from './CustomParameterDecorator';\nimport { BaseDriver } from './driver/BaseDriver';\nimport { ExpressDriver } from './driver/express/ExpressDriver';\nimport { KoaDriver } from './driver/koa/KoaDriver';\nimport { MetadataArgsStorage } from './metadata-builder/MetadataArgsStorage';\nimport { RoutingControllers } from './RoutingControllers';\nimport { RoutingControllersOptions } from './RoutingControllersOptions';\nimport { ValidationOptions } from 'class-validator';\nimport { importClassesFromDirectories } from './util/importClassesFromDirectories';\n\n// -------------------------------------------------------------------------\n// Main exports\n// -------------------------------------------------------------------------\n\nexport * from './container';\n\nexport * from './decorator/All';\nexport * from './decorator/Authorized';\nexport * from './decorator/Body';\nexport * from './decorator/BodyParam';\nexport * from './decorator/ContentType';\nexport * from './decorator/Controller';\nexport * from './decorator/CookieParam';\nexport * from './decorator/CookieParams';\nexport * from './decorator/Ctx';\nexport * from './decorator/CurrentUser';\nexport * from './decorator/Delete';\nexport * from './decorator/Get';\nexport * from './decorator/Head';\nexport * from './decorator/Header';\nexport * from './decorator/HeaderParam';\nexport * from './decorator/HeaderParams';\nexport * from './decorator/HttpCode';\nexport * from './decorator/Interceptor';\nexport * from './decorator/JsonController';\nexport * from './decorator/Location';\nexport * from './decorator/Method';\nexport * from './decorator/Middleware';\nexport * from './decorator/OnNull';\nexport * from './decorator/OnUndefined';\nexport * from './decorator/Param';\nexport * from './decorator/Params';\nexport * from './decorator/Patch';\nexport * from './decorator/Post';\nexport * from './decorator/Put';\nexport * from './decorator/QueryParam';\nexport * from './decorator/QueryParams';\nexport * from './decorator/Redirect';\nexport * from './decorator/Render';\nexport * from './decorator/Req';\nexport * from './decorator/Res';\nexport * from './decorator/ResponseClassTransformOptions';\nexport * from './decorator/Session';\nexport * from './decorator/SessionParam';\nexport * from './decorator/State';\nexport * from './decorator/UploadedFile';\nexport * from './decorator/UploadedFiles';\nexport * from './decorator/UseAfter';\nexport * from './decorator/UseBefore';\nexport * from './decorator/UseInterceptor';\n\nexport * from './decorator-options/BodyOptions';\nexport * from './decorator-options/ParamOptions';\nexport * from './decorator-options/UploadOptions';\n\nexport * from './http-error/HttpError';\nexport * from './http-error/InternalServerError';\nexport * from './http-error/BadRequestError';\nexport * from './http-error/ForbiddenError';\nexport * from './http-error/NotAcceptableError';\nexport * from './http-error/MethodNotAllowedError';\nexport * from './http-error/NotFoundError';\nexport * from './http-error/UnauthorizedError';\n\nexport * from './driver/express/ExpressMiddlewareInterface';\nexport * from './driver/express/ExpressErrorMiddlewareInterface';\nexport * from './driver/koa/KoaMiddlewareInterface';\nexport * from './metadata-builder/MetadataArgsStorage';\nexport * from './metadata/ActionMetadata';\nexport * from './metadata/ControllerMetadata';\nexport * from './metadata/InterceptorMetadata';\nexport * from './metadata/MiddlewareMetadata';\nexport * from './metadata/ParamMetadata';\nexport * from './metadata/ResponseHandleMetadata';\nexport * from './metadata/UseMetadata';\n\nexport * from './RoutingControllersOptions';\nexport * from './CustomParameterDecorator';\nexport * from './RoleChecker';\nexport * from './Action';\nexport * from './InterceptorInterface';\n\nexport * from './driver/BaseDriver';\nexport * from './driver/express/ExpressDriver';\nexport * from './driver/koa/KoaDriver';\n\n// -------------------------------------------------------------------------\n// Main Functions\n// -------------------------------------------------------------------------\n\n/**\n * Gets metadata args storage.\n * Metadata args storage follows the best practices and stores metadata in a global variable.\n */\nexport function getMetadataArgsStorage(): MetadataArgsStorage {\n  if (!(global as any).routingControllersMetadataArgsStorage)\n    (global as any).routingControllersMetadataArgsStorage = new MetadataArgsStorage();\n\n  return (global as any).routingControllersMetadataArgsStorage;\n}\n\n/**\n * Registers all loaded actions in your express application.\n */\nexport function useExpressServer<T>(expressServer: T, options?: RoutingControllersOptions): T {\n  const driver = new ExpressDriver(expressServer);\n  return createServer(driver, options);\n}\n\n/**\n * Registers all loaded actions in your express application.\n */\nexport function createExpressServer(options?: RoutingControllersOptions): any {\n  const driver = new ExpressDriver();\n  return createServer(driver, options);\n}\n\n/**\n * Registers all loaded actions in your koa application.\n */\nexport function useKoaServer<T>(koaApp: T, options?: RoutingControllersOptions): T {\n  const driver = new KoaDriver(koaApp);\n  return createServer(driver, options);\n}\n\n/**\n * Registers all loaded actions in your koa application.\n */\nexport function createKoaServer(options?: RoutingControllersOptions): any {\n  const driver = new KoaDriver();\n  return createServer(driver, options);\n}\n\n/**\n * Registers all loaded actions in your application using selected driver.\n */\nexport function createServer<T extends BaseDriver>(driver: T, options?: RoutingControllersOptions): any {\n  createExecutor(driver, options);\n  return driver.app;\n}\n\n/**\n * Registers all loaded actions in your express application.\n */\nexport function createExecutor<T extends BaseDriver>(driver: T, options: RoutingControllersOptions = {}): void {\n  // import all controllers and middlewares and error handlers (new way)\n  let controllerClasses: Function[];\n  if (options && options.controllers && options.controllers.length) {\n    controllerClasses = (options.controllers as any[]).filter(controller => controller instanceof Function);\n    const controllerDirs = (options.controllers as any[]).filter(controller => typeof controller === 'string');\n    controllerClasses.push(...importClassesFromDirectories(controllerDirs));\n  }\n  let middlewareClasses: Function[];\n  if (options && options.middlewares && options.middlewares.length) {\n    middlewareClasses = (options.middlewares as any[]).filter(controller => controller instanceof Function);\n    const middlewareDirs = (options.middlewares as any[]).filter(controller => typeof controller === 'string');\n    middlewareClasses.push(...importClassesFromDirectories(middlewareDirs));\n  }\n  let interceptorClasses: Function[];\n  if (options && options.interceptors && options.interceptors.length) {\n    interceptorClasses = (options.interceptors as any[]).filter(controller => controller instanceof Function);\n    const interceptorDirs = (options.interceptors as any[]).filter(controller => typeof controller === 'string');\n    interceptorClasses.push(...importClassesFromDirectories(interceptorDirs));\n  }\n\n  if (options && options.development !== undefined) {\n    driver.developmentMode = options.development;\n  } else {\n    driver.developmentMode = process.env.NODE_ENV !== 'production';\n  }\n\n  if (options.defaultErrorHandler !== undefined) {\n    driver.isDefaultErrorHandlingEnabled = options.defaultErrorHandler;\n  } else {\n    driver.isDefaultErrorHandlingEnabled = true;\n  }\n\n  if (options.classTransformer !== undefined) {\n    driver.useClassTransformer = options.classTransformer;\n  } else {\n    driver.useClassTransformer = true;\n  }\n\n  if (options.validation !== undefined) {\n    driver.enableValidation = !!options.validation;\n    if (options.validation instanceof Object) driver.validationOptions = options.validation as ValidationOptions;\n  } else {\n    driver.enableValidation = true;\n  }\n\n  driver.classToPlainTransformOptions = options.classToPlainTransformOptions;\n  driver.plainToClassTransformOptions = options.plainToClassTransformOptions;\n\n  if (options.errorOverridingMap !== undefined) driver.errorOverridingMap = options.errorOverridingMap;\n\n  if (options.routePrefix !== undefined) driver.routePrefix = options.routePrefix;\n\n  if (options.currentUserChecker !== undefined) driver.currentUserChecker = options.currentUserChecker;\n\n  if (options.authorizationChecker !== undefined) driver.authorizationChecker = options.authorizationChecker;\n\n  driver.cors = options.cors;\n\n  // next create a controller executor\n  new RoutingControllers(driver, options)\n    .initialize()\n    .registerInterceptors(interceptorClasses)\n    .registerMiddlewares('before', middlewareClasses)\n    .registerControllers(controllerClasses)\n    .registerMiddlewares('after', middlewareClasses); // todo: register only for loaded controllers?\n}\n\n/**\n * Registers custom parameter decorator used in the controller actions.\n */\nexport function createParamDecorator(options: CustomParameterDecorator) {\n  return function (object: Object, method: string, index: number) {\n    getMetadataArgsStorage().params.push({\n      type: 'custom-converter',\n      object: object,\n      method: method,\n      index: index,\n      parse: false,\n      required: options.required,\n      transform: options.value,\n    });\n  };\n}\n"]}