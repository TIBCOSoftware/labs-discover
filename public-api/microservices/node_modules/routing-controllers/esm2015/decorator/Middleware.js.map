{"version":3,"file":"Middleware.js","sourceRoot":"","sources":["../../../src/decorator/Middleware.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,sBAAsB,EAAE,MAAM,UAAU,CAAC;AAElD;;;GAGG;AACH,MAAM,UAAU,UAAU,CAAC,OAAwD;IACjF,OAAO,UAAU,MAAgB;QAC/B,sBAAsB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC;YACxC,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ;YACvD,MAAM,EAAE,IAAI;YACZ,QAAQ,EAAE,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC3E,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { getMetadataArgsStorage } from '../index';\n\n/**\n * Marks given class as a middleware.\n * Allows to create global middlewares and control order of middleware execution.\n */\nexport function Middleware(options: { type: 'after' | 'before'; priority?: number }): Function {\n  return function (target: Function) {\n    getMetadataArgsStorage().middlewares.push({\n      target: target,\n      type: options && options.type ? options.type : 'before',\n      global: true,\n      priority: options && options.priority !== undefined ? options.priority : 0,\n    });\n  };\n}\n"]}