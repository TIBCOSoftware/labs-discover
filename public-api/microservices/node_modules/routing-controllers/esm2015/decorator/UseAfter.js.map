{"version":3,"file":"UseAfter.js","sourceRoot":"","sources":["../../../src/decorator/UseAfter.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,sBAAsB,EAAE,MAAM,UAAU,CAAC;AAoBlD;;;GAGG;AACH,MAAM,UAAU,QAAQ,CACtB,GAAG,WAAqF;IAExF,OAAO,UAAU,gBAAmC,EAAE,UAAmB;QACvE,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;YAC/B,sBAAsB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;gBACjC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAE,gBAA6B;gBAClF,MAAM,EAAE,UAAU;gBAClB,UAAU,EAAE,UAAU;gBACtB,WAAW,EAAE,IAAI;aAClB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { getMetadataArgsStorage } from '../index';\n\n/**\n * Specifies a given middleware to be used for controller or controller action AFTER the action executes.\n * Must be set to controller action or controller class.\n */\nexport function UseAfter(...middlewares: Array<Function>): Function;\n\n/**\n * Specifies a given middleware to be used for controller or controller action AFTER the action executes.\n * Must be set to controller action or controller class.\n */\nexport function UseAfter(...middlewares: Array<(context: any, next: () => Promise<any>) => Promise<any>>): Function;\n\n/**\n * Specifies a given middleware to be used for controller or controller action AFTER the action executes.\n * Must be set to controller action or controller class.\n */\nexport function UseAfter(...middlewares: Array<(request: any, response: any, next: Function) => any>): Function;\n\n/**\n * Specifies a given middleware to be used for controller or controller action AFTER the action executes.\n * Must be set to controller action or controller class.\n */\nexport function UseAfter(\n  ...middlewares: Array<Function | ((request: any, response: any, next: Function) => any)>\n): Function {\n  return function (objectOrFunction: Object | Function, methodName?: string) {\n    middlewares.forEach(middleware => {\n      getMetadataArgsStorage().uses.push({\n        target: methodName ? objectOrFunction.constructor : (objectOrFunction as Function),\n        method: methodName,\n        middleware: middleware,\n        afterAction: true,\n      });\n    });\n  };\n}\n"]}