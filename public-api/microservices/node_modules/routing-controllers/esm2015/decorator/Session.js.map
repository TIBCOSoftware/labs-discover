{"version":3,"file":"Session.js","sourceRoot":"","sources":["../../../src/decorator/Session.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,sBAAsB,EAAE,MAAM,UAAU,CAAC;AAElD;;;GAGG;AACH,MAAM,UAAU,OAAO,CAAC,OAAsB;IAC5C,OAAO,UAAU,MAAc,EAAE,UAAkB,EAAE,KAAa;QAChE,sBAAsB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;YACnC,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,UAAU;YAClB,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI;YAC7E,cAAc,EAAE,OAAO,IAAI,OAAO,CAAC,SAAS;YAC5C,QAAQ,EAAE,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK;SAC/E,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { ParamOptions } from '../decorator-options/ParamOptions';\nimport { getMetadataArgsStorage } from '../index';\n\n/**\n * Injects a Session object to the controller action parameter.\n * Must be applied on a controller action parameter.\n */\nexport function Session(options?: ParamOptions): ParameterDecorator {\n  return function (object: Object, methodName: string, index: number) {\n    getMetadataArgsStorage().params.push({\n      type: 'session',\n      object: object,\n      method: methodName,\n      index: index,\n      parse: false, // it makes no sense for Session object to be parsed as json\n      required: options && options.required !== undefined ? options.required : true,\n      classTransform: options && options.transform,\n      validate: options && options.validate !== undefined ? options.validate : false,\n    });\n  };\n}\n"]}