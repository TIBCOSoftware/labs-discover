{"version":3,"file":"Controller.js","sourceRoot":"","sources":["../../../src/decorator/Controller.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,sBAAsB,EAAE,MAAM,UAAU,CAAC;AAGlD;;;;;;;GAOG;AACH,MAAM,UAAU,UAAU,CAAC,SAAkB,EAAE,OAA2B;IACxE,OAAO,UAAU,MAAgB;QAC/B,sBAAsB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC;YACxC,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,SAAS;YAChB,OAAO;SACR,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { getMetadataArgsStorage } from '../index';\nimport { ControllerOptions } from '../decorator-options/ControllerOptions';\n\n/**\n * Defines a class as a controller.\n * Each decorated controller method is served as a controller action.\n * Controller actions are executed when request come.\n *\n * @param baseRoute Extra path you can apply as a base route to all controller actions\n * @param options Extra options that apply to all controller actions\n */\nexport function Controller(baseRoute?: string, options?: ControllerOptions): Function {\n  return function (object: Function) {\n    getMetadataArgsStorage().controllers.push({\n      type: 'default',\n      target: object,\n      route: baseRoute,\n      options,\n    });\n  };\n}\n"]}