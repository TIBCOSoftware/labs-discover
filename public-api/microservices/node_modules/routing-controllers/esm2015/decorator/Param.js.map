{"version":3,"file":"Param.js","sourceRoot":"","sources":["../../../src/decorator/Param.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,sBAAsB,EAAE,MAAM,UAAU,CAAC;AAElD;;;GAGG;AACH,MAAM,UAAU,KAAK,CAAC,IAAY;IAChC,OAAO,UAAU,MAAc,EAAE,UAAkB,EAAE,KAAa;QAChE,sBAAsB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;YACnC,IAAI,EAAE,OAAO;YACb,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,UAAU;YAClB,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,SAAS;SAC1B,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { getMetadataArgsStorage } from '../index';\n\n/**\n * Injects a request's route parameter value to the controller action parameter.\n * Must be applied on a controller action parameter.\n */\nexport function Param(name: string): Function {\n  return function (object: Object, methodName: string, index: number) {\n    getMetadataArgsStorage().params.push({\n      type: 'param',\n      object: object,\n      method: methodName,\n      index: index,\n      name: name,\n      parse: false, // it does not make sense for Param to be parsed\n      required: true, // params are always required, because if they are missing router will not match the route\n      classTransform: undefined,\n    });\n  };\n}\n"]}