{"version":3,"file":"ParamOptions.js","sourceRoot":"","sources":["../../../src/decorator-options/ParamOptions.ts"],"names":[],"mappings":"","sourcesContent":["import { ValidatorOptions } from 'class-validator';\nimport { ClassTransformOptions } from 'class-transformer';\n\n/**\n * Extra options set to the parameter decorators.\n */\nexport interface ParamOptions {\n  /**\n   * If set to true then parameter will be required.\n   * If user performs a request and required parameter is not in a request then routing-controllers will throw an error.\n   */\n  required?: boolean;\n\n  /**\n   * If set to true then parameter will be parsed to json.\n   * Parsing is automatically done if parameter type is a class type.\n   */\n  parse?: boolean;\n\n  /**\n   * Class transform options used to perform plainToClass operation.\n   */\n  transform?: ClassTransformOptions;\n\n  /**\n   * If true, class-validator will be used to validate param object.\n   * If validation options are given then class-validator will perform validation with given options.\n   */\n  validate?: boolean | ValidatorOptions;\n\n  /**\n   * Explicitly set type which should be used for param to perform transformation.\n   */\n  type?: any;\n}\n"]}