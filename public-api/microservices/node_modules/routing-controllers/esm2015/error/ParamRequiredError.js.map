{"version":3,"file":"ParamRequiredError.js","sourceRoot":"","sources":["../../../src/error/ParamRequiredError.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAIhE;;GAEG;AACH,MAAM,OAAO,kBAAmB,SAAQ,eAAe;IAGrD,YAAY,MAAc,EAAE,KAAoB;QAC9C,KAAK,EAAE,CAAC;QAHV,SAAI,GAAG,oBAAoB,CAAC;QAI1B,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,CAAC;QAE1D,IAAI,SAAiB,CAAC;QACtB,QAAQ,KAAK,CAAC,IAAI,EAAE;YAClB,KAAK,OAAO;gBACV,SAAS,GAAG,cAAc,KAAK,CAAC,IAAI,MAAM,CAAC;gBAC3C,MAAM;YAER,KAAK,MAAM;gBACT,SAAS,GAAG,iBAAiB,CAAC;gBAC9B,MAAM;YAER,KAAK,YAAY;gBACf,SAAS,GAAG,mBAAmB,KAAK,CAAC,IAAI,MAAM,CAAC;gBAChD,MAAM;YAER,KAAK,OAAO;gBACV,SAAS,GAAG,oBAAoB,KAAK,CAAC,IAAI,MAAM,CAAC;gBACjD,MAAM;YAER,KAAK,QAAQ;gBACX,SAAS,GAAG,WAAW,KAAK,CAAC,IAAI,MAAM,CAAC;gBACxC,MAAM;YAER,KAAK,MAAM;gBACT,SAAS,GAAG,kBAAkB,KAAK,CAAC,IAAI,MAAM,CAAC;gBAC/C,MAAM;YAER,KAAK,OAAO;gBACV,SAAS,GAAG,mBAAmB,KAAK,CAAC,IAAI,OAAO,CAAC;gBACjD,MAAM;YAER,KAAK,SAAS;gBACZ,SAAS,GAAG,YAAY,CAAC;gBACzB,MAAM;YAER,KAAK,QAAQ;gBACX,SAAS,GAAG,WAAW,CAAC;gBACxB,MAAM;YAER;gBACE,SAAS,GAAG,cAAc,CAAC;SAC9B;QAED,4EAA4E;QAC5E,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,iCAAiC;QAC/F,IAAI,CAAC,OAAO,GAAG,GAAG,SAAS,4BAA4B,GAAG,EAAE,CAAC;IAC/D,CAAC;CACF","sourcesContent":["import { BadRequestError } from '../http-error/BadRequestError';\nimport { ParamMetadata } from '../metadata/ParamMetadata';\nimport { Action } from '../Action';\n\n/**\n * Thrown when parameter is required, but was missing in a user request.\n */\nexport class ParamRequiredError extends BadRequestError {\n  name = 'ParamRequiredError';\n\n  constructor(action: Action, param: ParamMetadata) {\n    super();\n    Object.setPrototypeOf(this, ParamRequiredError.prototype);\n\n    let paramName: string;\n    switch (param.type) {\n      case 'param':\n        paramName = `Parameter \"${param.name}\" is`;\n        break;\n\n      case 'body':\n        paramName = 'Request body is';\n        break;\n\n      case 'body-param':\n        paramName = `Body parameter \"${param.name}\" is`;\n        break;\n\n      case 'query':\n        paramName = `Query parameter \"${param.name}\" is`;\n        break;\n\n      case 'header':\n        paramName = `Header \"${param.name}\" is`;\n        break;\n\n      case 'file':\n        paramName = `Uploaded file \"${param.name}\" is`;\n        break;\n\n      case 'files':\n        paramName = `Uploaded files \"${param.name}\" are`;\n        break;\n\n      case 'session':\n        paramName = 'Session is';\n        break;\n\n      case 'cookie':\n        paramName = 'Cookie is';\n        break;\n\n      default:\n        paramName = 'Parameter is';\n    }\n\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    const uri = `${action.request.method} ${action.request.url}`; // todo: check it it works in koa\n    this.message = `${paramName} required for request on ${uri}`;\n  }\n}\n"]}