{"version":3,"file":"MetadataBuilder.js","sourceRoot":"","sources":["../../../src/metadata-builder/MetadataBuilder.ts"],"names":[],"mappings":"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","sourcesContent":["import { ActionMetadata } from '../metadata/ActionMetadata';\nimport { ControllerMetadata } from '../metadata/ControllerMetadata';\nimport { InterceptorMetadata } from '../metadata/InterceptorMetadata';\nimport { MiddlewareMetadata } from '../metadata/MiddlewareMetadata';\nimport { ParamMetadata } from '../metadata/ParamMetadata';\nimport { ParamMetadataArgs } from '../metadata/args/ParamMetadataArgs';\nimport { ResponseHandlerMetadata } from '../metadata/ResponseHandleMetadata';\nimport { RoutingControllersOptions } from '../RoutingControllersOptions';\nimport { UseMetadata } from '../metadata/UseMetadata';\nimport { getMetadataArgsStorage } from '../index';\nimport { ActionMetadataArgs } from '../metadata/args/ActionMetadataArgs';\n\n/**\n * Builds metadata from the given metadata arguments.\n */\nexport class MetadataBuilder {\n  constructor(private options: RoutingControllersOptions) {}\n\n  // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Builds controller metadata from a registered controller metadata args.\n   */\n  buildControllerMetadata(classes?: Function[]): ControllerMetadata[] {\n    return this.createControllers(classes);\n  }\n\n  /**\n   * Builds middleware metadata from a registered middleware metadata args.\n   */\n  buildMiddlewareMetadata(classes?: Function[]): MiddlewareMetadata[] {\n    return this.createMiddlewares(classes);\n  }\n\n  /**\n   * Builds interceptor metadata from a registered interceptor metadata args.\n   */\n  buildInterceptorMetadata(classes?: Function[]): InterceptorMetadata[] {\n    return this.createInterceptors(classes);\n  }\n\n  // -------------------------------------------------------------------------\n  // Protected Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Creates middleware metadatas.\n   */\n  protected createMiddlewares(classes?: Function[]): MiddlewareMetadata[] {\n    const middlewares = !classes\n      ? getMetadataArgsStorage().middlewares\n      : getMetadataArgsStorage().filterMiddlewareMetadatasForClasses(classes);\n    return middlewares.map(middlewareArgs => new MiddlewareMetadata(middlewareArgs));\n  }\n\n  /**\n   * Creates interceptor metadatas.\n   */\n  protected createInterceptors(classes?: Function[]): InterceptorMetadata[] {\n    const interceptors = !classes\n      ? getMetadataArgsStorage().interceptors\n      : getMetadataArgsStorage().filterInterceptorMetadatasForClasses(classes);\n    return interceptors.map(\n      interceptorArgs =>\n        new InterceptorMetadata({\n          ...interceptorArgs,\n          interceptor: interceptorArgs.target,\n        })\n    );\n  }\n\n  /**\n   * Creates controller metadatas.\n   */\n  protected createControllers(classes?: Function[]): ControllerMetadata[] {\n    const controllers = !classes\n      ? getMetadataArgsStorage().controllers\n      : getMetadataArgsStorage().filterControllerMetadatasForClasses(classes);\n    return controllers.map(controllerArgs => {\n      const controller = new ControllerMetadata(controllerArgs);\n      controller.build(this.createControllerResponseHandlers(controller));\n      controller.options = controllerArgs.options;\n      controller.actions = this.createActions(controller);\n      controller.uses = this.createControllerUses(controller);\n      controller.interceptors = this.createControllerInterceptorUses(controller);\n      return controller;\n    });\n  }\n\n  /**\n   * Creates action metadatas.\n   */\n  protected createActions(controller: ControllerMetadata): ActionMetadata[] {\n    let target = controller.target;\n    const actionsWithTarget: ActionMetadataArgs[] = [];\n    while (target) {\n      actionsWithTarget.push(\n        ...getMetadataArgsStorage()\n          .filterActionsWithTarget(target)\n          .filter(action => {\n            return actionsWithTarget.map(a => a.method).indexOf(action.method) === -1;\n          })\n      );\n      target = Object.getPrototypeOf(target);\n    }\n    return actionsWithTarget.map(actionArgs => {\n      const action = new ActionMetadata(controller, actionArgs, this.options);\n      action.options = { ...controller.options, ...actionArgs.options };\n      action.params = this.createParams(action);\n      action.uses = this.createActionUses(action);\n      action.interceptors = this.createActionInterceptorUses(action);\n      action.build(this.createActionResponseHandlers(action));\n      return action;\n    });\n  }\n\n  /**\n   * Creates param metadatas.\n   */\n  protected createParams(action: ActionMetadata): ParamMetadata[] {\n    return getMetadataArgsStorage()\n      .filterParamsWithTargetAndMethod(action.target, action.method)\n      .map(paramArgs => new ParamMetadata(action, this.decorateDefaultParamOptions(paramArgs)));\n  }\n\n  /**\n   * Creates response handler metadatas for action.\n   */\n  protected createActionResponseHandlers(action: ActionMetadata): ResponseHandlerMetadata[] {\n    return getMetadataArgsStorage()\n      .filterResponseHandlersWithTargetAndMethod(action.target, action.method)\n      .map(handlerArgs => new ResponseHandlerMetadata(handlerArgs));\n  }\n\n  /**\n   * Creates response handler metadatas for controller.\n   */\n  protected createControllerResponseHandlers(controller: ControllerMetadata): ResponseHandlerMetadata[] {\n    return getMetadataArgsStorage()\n      .filterResponseHandlersWithTarget(controller.target)\n      .map(handlerArgs => new ResponseHandlerMetadata(handlerArgs));\n  }\n\n  /**\n   * Creates use metadatas for actions.\n   */\n  protected createActionUses(action: ActionMetadata): UseMetadata[] {\n    return getMetadataArgsStorage()\n      .filterUsesWithTargetAndMethod(action.target, action.method)\n      .map(useArgs => new UseMetadata(useArgs));\n  }\n\n  /**\n   * Creates use interceptors for actions.\n   */\n  protected createActionInterceptorUses(action: ActionMetadata): InterceptorMetadata[] {\n    return getMetadataArgsStorage()\n      .filterInterceptorUsesWithTargetAndMethod(action.target, action.method)\n      .map(useArgs => new InterceptorMetadata(useArgs));\n  }\n\n  /**\n   * Creates use metadatas for controllers.\n   */\n  protected createControllerUses(controller: ControllerMetadata): UseMetadata[] {\n    return getMetadataArgsStorage()\n      .filterUsesWithTargetAndMethod(controller.target, undefined)\n      .map(useArgs => new UseMetadata(useArgs));\n  }\n\n  /**\n   * Creates use interceptors for controllers.\n   */\n  protected createControllerInterceptorUses(controller: ControllerMetadata): InterceptorMetadata[] {\n    return getMetadataArgsStorage()\n      .filterInterceptorUsesWithTargetAndMethod(controller.target, undefined)\n      .map(useArgs => new InterceptorMetadata(useArgs));\n  }\n\n  /**\n   * Decorate paramArgs with default settings\n   */\n  private decorateDefaultParamOptions(paramArgs: ParamMetadataArgs) {\n    const options = this.options.defaults && this.options.defaults.paramOptions;\n    if (!options) return paramArgs;\n\n    if (paramArgs.required === undefined) paramArgs.required = options.required || false;\n\n    return paramArgs;\n  }\n}\n"]}